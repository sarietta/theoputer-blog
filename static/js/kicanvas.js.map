{
  "version": 3,
  "sources": ["../src/base/livereload.js", "../src/base/async.ts", "../src/base/paths.ts", "../src/base/dom/download.ts", "../src/kicanvas/services/vfs.ts", "../src/base/dom/drag-drop.ts", "../src/base/web-components/context.ts", "../src/base/types.ts", "../src/base/web-components/css.ts", "../src/base/array.ts", "../src/base/disposable.ts", "../src/base/web-components/html.ts", "../src/base/web-components/custom-element.ts", "../src/base/web-components/decorators.ts", "../src/base/events.ts", "../src/kc-ui/element.ts", "../src/kc-ui/icon.ts", "../src/kc-ui/button.ts", "../src/kc-ui/activity-side-bar.ts", "../src/kc-ui/app.ts", "../src/kc-ui/control-list.ts", "../src/base/functions.ts", "../src/kc-ui/menu.ts", "../src/kc-ui/dropdown.ts", "../src/kc-ui/filtered-list.ts", "../src/kc-ui/floating-toolbar.ts", "../src/kc-ui/focus-overlay.ts", "../src/kc-ui/panel.ts", "../src/kc-ui/property-list.ts", "../src/kc-ui/range.ts", "../src/kc-ui/resizer.ts", "../src/kc-ui/split-view.ts", "../src/kc-ui/text-filter-input.ts", "../src/kc-ui/toggle-menu.ts", "../src/kicanvas/icons/sprites.svg", "../src/kicanvas/icons/sprites.ts", "../src/base/iterator.ts", "../src/base/log.ts", "../src/base/math/matrix3.ts", "../src/base/math/vec2.ts", "../src/base/math/angle.ts", "../src/base/math/bbox.ts", "../src/base/math/arc.ts", "../src/base/math/camera2.ts", "../src/base/color.ts", "../src/kicad/tokenizer.ts", "../src/kicad/parser.ts", "../src/kicad/common.ts", "../src/kicad/board.ts", "../src/kicad/schematic.ts", "../src/kicad/default_drawing_sheet.kicad_wks", "../src/kicad/drawing-sheet.ts", "../src/base/object.ts", "../src/kicad/project-settings.ts", "../src/kicanvas/project.ts", "../src/kicanvas/services/github.ts", "../src/kicanvas/services/github-vfs.ts", "../src/base/web-components/flag-attribute.ts", "../src/viewers/base/events.ts", "../src/kicanvas/elements/common/help-panel.ts", "../src/base/local-storage.ts", "../src/kicanvas/themes/witch-hazel.ts", "../src/kicanvas/themes/kicad-default.ts", "../src/kicanvas/themes/index.ts", "../src/kicanvas/preferences.ts", "../src/kicanvas/elements/common/preferences-panel.ts", "../src/kicanvas/elements/common/project-panel.ts", "../src/kicanvas/elements/common/viewer-bottom-toolbar.ts", "../src/kicanvas/elements/common/app.ts", "../src/graphics/shapes.ts", "../src/graphics/renderer.ts", "../third_party/earcut/earcut.js", "../src/graphics/webgl/helpers.ts", "../src/graphics/webgl/polygon.frag.glsl", "../src/graphics/webgl/polygon.vert.glsl", "../src/graphics/webgl/polyline.frag.glsl", "../src/graphics/webgl/polyline.vert.glsl", "../src/graphics/webgl/vector.ts", "../src/graphics/webgl/renderer.ts", "../src/kicad/text/glyph.ts", "../src/kicad/text/markup.ts", "../src/kicad/text/font.ts", "../src/kicad/text/newstroke-glyphs.ts", "../src/kicad/text/stroke-font.ts", "../src/kicad/text/eda-text.ts", "../src/kicad/text/lib-text.ts", "../src/kicad/text/sch-field.ts", "../src/kicad/text/sch-text.ts", "../src/viewers/base/view-layers.ts", "../src/viewers/base/painter.ts", "../src/viewers/drawing-sheet/painter.ts", "../src/viewers/base/grid.ts", "../src/base/dom/pan-and-zoom.ts", "../src/base/dom/size-observer.ts", "../src/viewers/base/viewport.ts", "../src/viewers/base/viewer.ts", "../src/viewers/base/document-viewer.ts", "../src/viewers/board/layers.ts", "../src/viewers/board/painter.ts", "../src/viewers/board/viewer.ts", "../src/kicanvas/elements/common/viewer.ts", "../src/kicanvas/elements/kc-board/viewer.ts", "../src/kicanvas/elements/kc-board/footprints-panel.ts", "../src/kicanvas/elements/kc-board/info-panel.ts", "../src/kicanvas/elements/kc-board/layers-panel.ts", "../src/kicanvas/elements/kc-board/nets-panel.ts", "../src/kicanvas/elements/kc-board/objects-panel.ts", "../src/kicanvas/elements/kc-board/properties-panel.ts", "../src/kicanvas/elements/kc-board/app.ts", "../src/graphics/canvas2d.ts", "../src/viewers/schematic/layers.ts", "../src/viewers/schematic/painters/base.ts", "../src/viewers/schematic/painters/label.ts", "../src/viewers/schematic/painters/pin.ts", "../src/graphics/null-renderer.ts", "../src/viewers/schematic/painters/symbol.ts", "../src/viewers/schematic/painter.ts", "../src/viewers/schematic/viewer.ts", "../src/kicanvas/elements/kc-schematic/viewer.ts", "../src/kicanvas/elements/kc-schematic/info-panel.ts", "../src/kicanvas/elements/kc-schematic/properties-panel.ts", "../src/kicanvas/elements/kc-schematic/symbols-panel.ts", "../src/kicanvas/elements/kc-schematic/app.ts", "../src/kc-ui/kc-ui.css", "../src/kicanvas/elements/kicanvas-shell.css", "../src/kicanvas/elements/kicanvas-shell.ts", "../src/kicanvas/elements/kicanvas-embed.ts"],
  "sourcesContent": ["/*\n    Copyright (c) 2022 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\n/* globals DEBUG */\n// @ts-expect-error: defined by esbuild\nif (DEBUG) {\n    new EventSource(\"/esbuild\").addEventListener(\"change\", () =>\n        location.reload(),\n    );\n}\n", "/*\n    Copyright (c) 2023 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nimport type { IDisposable } from \"./disposable\";\n\n/**\n * Waits the given number of milliseconds and resolves.\n */\nexport async function wait(delay: number) {\n    return new Promise<void>((resolve) => {\n        window.setTimeout(() => {\n            resolve();\n        }, delay);\n    });\n}\n\n/**\n * Schedules a callback to be executed by the event loop.\n *\n * Equivalent to window.setTimeout(..., 0);\n */\nexport function later(callback: () => unknown) {\n    window.setTimeout(() => {\n        callback();\n    }, 0);\n}\n\n/**\n * Schedules a callback to be executed when the browser is idle or\n * when deadline milliseconds have passed.\n */\nexport function when_idle(\n    callback: () => unknown,\n    deadline = 1000,\n): IDisposable {\n    const token = window.requestIdleCallback(\n        () => {\n            callback();\n        },\n        { timeout: deadline },\n    );\n    return {\n        dispose: () => {\n            window.cancelIdleCallback(token);\n        },\n    };\n}\n\nconst enum DeferredOutcome {\n    Resolved,\n    Rejected,\n}\n\n/**\n * A promise that can be resolved or rejected imperatively.\n */\nexport class DeferredPromise<T> {\n    #promise: Promise<T>;\n    #resolve: (value: T) => void;\n    #reject: (error: Error) => void;\n    #outcome?: DeferredOutcome;\n    #value?: T | Error;\n\n    constructor() {\n        this.#promise = new Promise<T>((resolve, reject) => {\n            this.#resolve = resolve;\n            this.#reject = reject;\n        });\n    }\n\n    get rejected() {\n        return this.#outcome === DeferredOutcome.Rejected;\n    }\n\n    get resolved() {\n        return this.#outcome === DeferredOutcome.Resolved;\n    }\n\n    get settled() {\n        return !!this.#outcome;\n    }\n\n    get value() {\n        return this.#value;\n    }\n\n    then<TResult1 = T, TResult2 = never>(\n        onfulfilled?:\n            | ((value: T) => TResult1 | PromiseLike<TResult1>)\n            | undefined\n            | null,\n        onrejected?:\n            | ((reason: any) => TResult2 | PromiseLike<TResult2>)\n            | undefined\n            | null,\n    ): Promise<TResult1 | TResult2> {\n        return this.#promise.then(onfulfilled, onrejected);\n    }\n\n    resolve(value: T) {\n        this.#outcome = DeferredOutcome.Resolved;\n        this.#value = value;\n        this.#resolve(value);\n    }\n\n    reject(error: Error) {\n        this.#outcome = DeferredOutcome.Rejected;\n        this.#value = error;\n        this.#reject(error);\n    }\n}\n\n/**\n * A \"Barrier\" for waiting for a task to complete before taking an action.\n */\nexport class Barrier extends DeferredPromise<boolean> {\n    get isOpen(): boolean {\n        return this.resolved && this.value === true;\n    }\n\n    open(): void {\n        this.resolve(true);\n    }\n}\n", "/*\n    Copyright (c) 2023 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nexport function dirname(path: string | URL) {\n    if (path instanceof URL) {\n        path = path.pathname;\n    }\n    return path.split(\"/\").slice(0, -1).join(\"/\");\n}\n\nexport function basename(path: string | URL) {\n    if (path instanceof URL) {\n        path = path.pathname;\n    }\n    return path.split(\"/\").at(-1)!;\n}\n\nexport function extension(path: string) {\n    return path.split(\".\").at(-1) ?? \"\";\n}\n", "/*\n    Copyright (c) 2023 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nimport { basename } from \"../paths\";\n\n/*\n    Basic helper to initiate a download of a given File using the browser.\n    Useful for generating files client side for the user to download.\n*/\n\nexport function initiate_download(file_or_url: File | URL) {\n    let url;\n    let name;\n\n    if (file_or_url instanceof File) {\n        url = URL.createObjectURL(file_or_url);\n        name = file_or_url.name;\n    } else {\n        url = file_or_url.href;\n        name = basename(url);\n    }\n\n    const anchor = document.createElement(\"a\");\n\n    anchor.href = url;\n    anchor.download = name;\n    anchor.target = \"_blank\";\n    console.log(anchor);\n    anchor.click();\n\n    if (file_or_url instanceof File) {\n        URL.revokeObjectURL(url);\n    }\n}\n", "/*\n    Copyright (c) 2023 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nimport { initiate_download } from \"../../base/dom/download\";\nimport { basename } from \"../../base/paths\";\n\n/**\n * Virtual file system abstract class.\n *\n * This is the interface used by <kc-kicanvas-shell> to find and load files.\n * It's implemented using Drag and Drop and GitHub to provide a common interface\n * for interacting and loading files.\n */\nexport abstract class VirtualFileSystem {\n    public abstract list(): Generator<string>;\n    public abstract get(name: string): Promise<File>;\n    public abstract has(name: string): Promise<boolean>;\n    public abstract download(name: string): Promise<void>;\n\n    public *list_matches(r: RegExp) {\n        for (const filename of this.list()) {\n            if (filename.match(r)) {\n                yield filename;\n            }\n        }\n    }\n\n    public *list_ext(ext: string) {\n        if (!ext.startsWith(\".\")) {\n            ext = `.${ext}`;\n        }\n\n        for (const filename of this.list()) {\n            if (filename.endsWith(ext)) {\n                yield filename;\n            }\n        }\n    }\n}\n\n/**\n * Virtual file system for URLs via Fetch\n */\nexport class FetchFileSystem extends VirtualFileSystem {\n    private urls: Map<string, URL> = new Map();\n    private resolver!: (name: string) => URL;\n\n    #default_resolver(name: string): URL {\n        const url = new URL(name, window.location.toString());\n        return url;\n    }\n\n    #resolve(filepath: string | URL): URL {\n        if (typeof filepath === \"string\") {\n            const cached_url = this.urls.get(filepath);\n            if (cached_url) {\n                return cached_url;\n            } else {\n                const url = this.resolver(filepath);\n                const name = basename(url);\n                this.urls.set(name, url);\n                return url;\n            }\n        }\n        return filepath;\n    }\n\n    constructor(\n        urls: (string | URL)[],\n        resolve_file: ((name: string) => URL) | null = null,\n    ) {\n        super();\n\n        this.resolver = resolve_file ?? this.#default_resolver;\n\n        for (const item of urls) {\n            this.#resolve(item);\n        }\n    }\n\n    public override *list() {\n        yield* this.urls.keys();\n    }\n\n    public override async has(name: string) {\n        return Promise.resolve(this.urls.has(name));\n    }\n\n    public override async get(name: string): Promise<File> {\n        const url = this.#resolve(name);\n\n        if (!url) {\n            throw new Error(`File ${name} not found!`);\n        }\n\n        const request = new Request(url, { method: \"GET\" });\n        const response = await fetch(request);\n\n        if (!response.ok) {\n            throw new Error(\n                `Unable to load ${url}: ${response.status} ${response.statusText}`,\n            );\n        }\n\n        const blob = await response.blob();\n\n        return new File([blob], name);\n    }\n\n    public async download(name: string) {\n        initiate_download(await this.get(name));\n    }\n}\n\n/**\n * Virtual file system for HTML drag and drop (DataTransfer)\n */\nexport class DragAndDropFileSystem extends VirtualFileSystem {\n    constructor(private items: FileSystemFileEntry[]) {\n        super();\n    }\n\n    static async fromDataTransfer(dt: DataTransfer) {\n        let items: FileSystemEntry[] = [];\n\n        // Pluck items out as webkit entries (either FileSystemFileEntry or\n        // FileSystemDirectoryEntry)\n        for (let i = 0; i < dt.items.length; i++) {\n            const item = dt.items[i]?.webkitGetAsEntry();\n            if (item) {\n                items.push(item);\n            }\n        }\n\n        // If it's just one directory then open it and set all of our items\n        // to its contents.\n        if (items.length == 1 && items[0]?.isDirectory) {\n            const reader = (\n                items[0] as FileSystemDirectoryEntry\n            ).createReader();\n\n            items = [];\n\n            await new Promise((resolve, reject) => {\n                reader.readEntries((entries) => {\n                    for (const entry of entries) {\n                        if (!entry.isFile) {\n                            continue;\n                        }\n                        items.push(entry);\n                    }\n                    resolve(true);\n                }, reject);\n            });\n        }\n\n        return new DragAndDropFileSystem(items as FileSystemFileEntry[]);\n    }\n\n    public override *list() {\n        for (const entry of this.items) {\n            yield entry.name;\n        }\n    }\n\n    public override async has(name: string): Promise<boolean> {\n        for (const entry of this.items) {\n            if (entry.name == name) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    public override async get(name: string): Promise<File> {\n        let file_entry: FileSystemFileEntry | null = null;\n        for (const entry of this.items) {\n            if (entry.name == name) {\n                file_entry = entry;\n                break;\n            }\n        }\n\n        if (file_entry == null) {\n            throw new Error(`File ${name} not found!`);\n        }\n\n        return await new Promise((resolve, reject) => {\n            file_entry!.file(resolve, reject);\n        });\n    }\n\n    public async download(name: string) {\n        initiate_download(await this.get(name));\n    }\n}\n", "/*\n    Copyright (c) 2023 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nimport {\n    DragAndDropFileSystem,\n    VirtualFileSystem,\n} from \"../../kicanvas/services/vfs\";\n\nexport class DropTarget {\n    constructor(elm: HTMLElement, callback: (fs: VirtualFileSystem) => void) {\n        elm.addEventListener(\n            \"dragenter\",\n            (e) => {\n                e.preventDefault();\n            },\n            false,\n        );\n\n        elm.addEventListener(\n            \"dragover\",\n            (e) => {\n                if (!e.dataTransfer) {\n                    return;\n                }\n                e.preventDefault();\n                e.dataTransfer.dropEffect = \"move\";\n            },\n            false,\n        );\n\n        elm.addEventListener(\n            \"drop\",\n            async (e) => {\n                e.stopPropagation();\n                e.preventDefault();\n\n                const dt = e.dataTransfer;\n                if (!dt) {\n                    return;\n                }\n\n                const fs = await DragAndDropFileSystem.fromDataTransfer(dt);\n\n                callback(fs);\n            },\n            false,\n        );\n    }\n}\n", "/*\n    Copyright (c) 2022 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nimport type { Constructor } from \"../types\";\n\n/**\n * CustomElement context, used to manage shared state.\n *\n * Elements can provide state in the form of context to child elements using\n * provideContext() and child elements can request context from ancestors\n * using requestContext().\n *\n * Loosely based on https://github.com/webcomponents-cg/community-protocols/blob/main/proposals/context.md,\n * but *greatly* simplified.\n */\n\nexport type ContextRequestCallback<T = unknown> = (context: T) => void;\n\n/**\n * Context request event\n *\n * Dispatch this event to request context from ancestors. Ancestors can listen\n * for the event and invoke the provided callback to provide context. Invoking\n * the callback will automatically stop the event's propagation.\n */\nexport class ContextRequestEvent<T = unknown> extends Event {\n    static type = \"context-request\";\n\n    constructor(\n        public context_name: string,\n        private _callback: ContextRequestCallback<T>,\n    ) {\n        super(ContextRequestEvent.type, {\n            bubbles: true,\n            cancelable: true,\n            composed: true,\n        });\n    }\n\n    callback(context: T) {\n        this.stopPropagation();\n        this._callback(context);\n    }\n}\n\n/**\n * Requests context from ancestors asynchronously.\n *\n * Handles the details of dispatching the ContextRequestEvent and wraps it\n * all up in a promise. Note that if no ancestor provides the context, the\n * promise will never resolve.\n */\nexport async function requestContext<T = unknown>(\n    target: EventTarget,\n    context_name: string,\n): Promise<T> {\n    return new Promise((resolve) => {\n        target.dispatchEvent(\n            new ContextRequestEvent<T>(context_name, (context: T) => {\n                resolve(context);\n            }),\n        );\n    });\n}\n\n/**\n * Provides context to descendants.\n *\n * Handles the details of listening to ContextRequestEvents and responding\n * with the given context if it matches the context name.\n */\nexport function provideContext<T>(\n    target: EventTarget,\n    context_name: string,\n    context: T,\n) {\n    target.addEventListener(ContextRequestEvent.type, (e) => {\n        const request_event = e as ContextRequestEvent<T>;\n        if (request_event.context_name == context_name) {\n            request_event.callback(context);\n        }\n    });\n}\n\n/**\n * Like requestContext but used when the provider passes a function that\n * should be called to obtain the context. Useful for setting up context\n * providers in constructors before the actual context value is available.\n */\nexport async function requestLazyContext<T = unknown>(\n    target: EventTarget,\n    context_name: string,\n): Promise<T> {\n    return (await requestContext<() => T>(target, context_name))();\n}\n\n/**\n * Like provideContext but used with requestLazyContext\n */\nexport async function provideLazyContext<T = unknown>(\n    target: EventTarget,\n    context_name: string,\n    context: () => T,\n) {\n    provideContext(target, context_name, context);\n}\n\n/**\n * Mixin used to add provideContext and requestContext methods.\n */\nexport function WithContext<T extends Constructor<HTMLElement>>(Base: T) {\n    return class WithContext extends Base {\n        constructor(...args: any[]) {\n            super(...args);\n        }\n\n        /** Request context from ancestors */\n        async requestContext<T = unknown>(context_name: string) {\n            return await requestContext<T>(this, context_name);\n        }\n\n        /** Provide context to descendants */\n        provideContext<T = unknown>(context_name: string, context: T) {\n            provideContext<T>(this, context_name, context);\n        }\n\n        /** Request context from ancestors lazily */\n        async requestLazyContext<T = unknown>(context_name: string) {\n            return await requestLazyContext<T>(this, context_name);\n        }\n\n        /** Provide context to descendants lazily */\n        provideLazyContext<T = unknown>(\n            context_name: string,\n            context: () => T,\n        ) {\n            provideLazyContext<T>(this, context_name, context);\n        }\n    };\n}\n", "/*\n    Copyright (c) 2022 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nexport type Primitive =\n    | null\n    | undefined\n    | boolean\n    | number\n    | string\n    | symbol\n    | bigint;\n\nexport function is_primitive(value: unknown): value is Primitive {\n    return (\n        value === null ||\n        (typeof value != \"object\" && typeof value != \"function\")\n    );\n}\n\nexport function is_string(value: unknown): value is string {\n    return typeof value === \"string\";\n}\n\nexport function is_number(value: unknown): value is number {\n    return typeof value === \"number\" && !isNaN(value);\n}\n\nexport function is_iterable<T>(value: unknown): value is Iterable<T> {\n    return (\n        Array.isArray(value) ||\n        typeof (value as any)?.[Symbol.iterator] === \"function\"\n    );\n}\n\nexport function is_array<T = unknown>(value: unknown): value is T[] {\n    return Array.isArray(value);\n}\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function is_object(value: unknown): value is Object {\n    return (\n        typeof value === \"object\" &&\n        value !== null &&\n        !Array.isArray(value) &&\n        !(value instanceof RegExp) &&\n        !(value instanceof Date)\n    );\n}\n\nexport type Constructor<T = unknown> = new (...args: any[]) => T;\n", "/*\n    Copyright (c) 2023 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nimport { is_number } from \"../types\";\n\nconst stylesheet_cache = new Map<string, CSSStyleSheet>();\n\nexport class CSS {\n    constructor(public readonly css_string: string) {}\n\n    get stylesheet(): CSSStyleSheet {\n        let sheet = stylesheet_cache.get(this.css_string);\n\n        if (sheet == undefined) {\n            sheet = new CSSStyleSheet();\n            sheet.replaceSync(this.css_string);\n            stylesheet_cache.set(this.css_string, sheet);\n        }\n\n        return sheet;\n    }\n}\n\nexport function css(\n    strings: TemplateStringsArray,\n    ...values: (CSS | number)[]\n) {\n    let text = \"\";\n    for (let i = 0; i < strings.length - 1; i++) {\n        text += strings[i];\n\n        const value = values[i];\n\n        if (value instanceof CSS) {\n            text += value.css_string;\n        } else if (is_number(value)) {\n            text += String(value);\n        } else {\n            throw new Error(\n                \"Only CSS or number variables allowed in css template literal\",\n            );\n        }\n    }\n\n    text += strings.at(-1);\n\n    return new CSS(text);\n}\n\nexport function adopt_styles(\n    root: ShadowRoot | Document,\n    styles: (CSS | CSSStyleSheet)[],\n) {\n    root.adoptedStyleSheets = root.adoptedStyleSheets.concat(\n        styles.map((ss) => (ss instanceof CSSStyleSheet ? ss : ss.stylesheet)),\n    );\n}\n", "/*\n    Copyright (c) 2023 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nimport { is_array, is_iterable } from \"./types\";\n\nexport function as_array<T>(x: T | T[]): T[];\nexport function as_array<T>(x: T | readonly T[]): readonly T[];\nexport function as_array<T>(x: T | T[]): T[] {\n    if (is_array(x)) {\n        return x;\n    }\n    return [x];\n}\n\nexport function iterable_as_array<T>(x: T | T[] | Iterable<T>): T[] {\n    if (is_array(x)) {\n        return x;\n    }\n    if (is_iterable(x)) {\n        return Array.from(x);\n    }\n    return [x];\n}\n\nconst collator = new Intl.Collator(undefined, { numeric: true });\n\nexport function sorted_by_numeric_strings<T>(\n    array: T[],\n    getter: (item: T) => string,\n) {\n    return array.slice().sort((a, b) => collator.compare(getter(a), getter(b)));\n}\n", "/*\n    Copyright (c) 2022 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\n/**\n * A class / object that cleans up its resources when dispose() is called.\n *\n * This is based on:\n * * https://github.com/tc39/proposal-explicit-resource-management\n * * https://github.com/dsherret/using_statement\n * * https://github.dev/microsoft/vscode/blob/main/src/vs/base/common/lifecycle.ts\n */\nexport interface IDisposable {\n    dispose(): void;\n}\n\n/**\n * A collection of Disposable items that can be disposed of together.\n */\nexport class Disposables implements IDisposable {\n    private _disposables: Set<IDisposable> = new Set();\n    private _is_disposed: boolean = false;\n\n    public add<T extends IDisposable>(item: T): T {\n        if (this._is_disposed) {\n            throw new Error(\n                \"Tried to add item to a DisposableStack that's already been disposed\",\n            );\n        }\n        this._disposables.add(item);\n\n        return item;\n    }\n\n    public disposeAndRemove<T extends IDisposable>(item: T) {\n        if (!item) {\n            return;\n        }\n\n        item.dispose();\n        this._disposables.delete(item);\n    }\n\n    public get isDisposed() {\n        return this._is_disposed;\n    }\n\n    public dispose(): void {\n        if (this._is_disposed) {\n            console.trace(\"dispose() called on an already disposed resource\");\n            return;\n        }\n        for (const item of this._disposables.values()) {\n            item.dispose();\n        }\n        this._disposables.clear();\n        this._is_disposed = true;\n    }\n}\n", "/*\n    Copyright (c) 2023 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nimport { is_iterable, is_primitive } from \"../types\";\n\nexport type ElementOrFragment = HTMLElement | DocumentFragment;\n\nexport function is_HTMLElement(v: any): v is HTMLElement {\n    return typeof HTMLElement === \"object\" && v instanceof HTMLElement;\n}\n\n/**\n * A tagged template literal that generates HTML\n *\n * This is loosely inspired by Lit's html, but vastly simplified for our use\n * case. We don't do any reactivity or automatic updating, so a lot of the\n * code required to synchronize and update DOM elements automatically isn't\n * needed.\n *\n * There are two key properties that this needs to have:\n * - It must limit the location of variable expansion so we can effectively\n *   work against XSS.\n * - Any elements used in the template literal should retain their identity\n *   once placed in the rendered tree.\n */\nexport function html(\n    strings: TemplateStringsArray,\n    ...values: unknown[]\n): ElementOrFragment {\n    const template = document.createElement(`template`);\n\n    template.innerHTML = prepare_template_html(strings, values);\n    let content = template.content;\n\n    content = document.importNode(content, true);\n\n    apply_values_to_tree(content, values);\n\n    if (content.childElementCount == 1) {\n        return content.firstElementChild as HTMLElement;\n    } else {\n        return content;\n    }\n}\n\n/**\n * A tagged template literal that allows text to pass through the html\n * literal as-is, before variable interpolation happens.\n */\nexport function literal(strings: TemplateStringsArray, ...values: unknown[]) {\n    let str = \"\";\n    strings.forEach((string, i) => {\n        str += string + (values[i] ?? \"\");\n    });\n    return new Literal(str);\n}\n\nclass Literal {\n    constructor(public text: string) {}\n}\n\nconst placeholder_regex = /\\$\\$:(\\d+):\\$\\$/g;\n\n/**\n * Processes a given template literal into a suitable html template string.\n *\n * Inserts placeholders into the string for every replacement. These\n * placeholders will later be used to modify the constructed DOM node's\n * attributes and content.\n */\nfunction prepare_template_html(\n    strings: TemplateStringsArray,\n    values: unknown[],\n) {\n    const template_parts = [];\n\n    for (let i = 0; i < strings.length - 1; i++) {\n        template_parts.push(strings[i]);\n\n        if (values[i] instanceof Literal) {\n            template_parts.push((values[i]! as Literal).text);\n        } else {\n            template_parts.push(`$$:${i}:$$`);\n        }\n    }\n\n    template_parts.push(strings[strings.length - 1]);\n\n    const template_string = template_parts.join(\"\");\n    return template_string;\n}\n\n/**\n * Walks through the give DOM tree and replaces placeholders with values.\n */\nfunction apply_values_to_tree(tree: DocumentFragment, values: unknown[]) {\n    const walker = document.createTreeWalker(\n        tree,\n        NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_TEXT,\n        null,\n    );\n    let node;\n\n    while ((node = walker.nextNode()) !== null) {\n        if (node.nodeType == Node.TEXT_NODE) {\n            apply_content_value(node.parentNode, node as Text, values);\n        } else if (node.nodeType == Node.ELEMENT_NODE) {\n            const elm = node as HTMLElement;\n            for (const attr_name of elm.getAttributeNames()) {\n                const attr = elm.getAttributeNode(attr_name)!;\n                apply_attribute_value(elm, attr, values);\n            }\n        }\n    }\n}\n\n/**\n * Apply template values to a node's text content.\n */\nfunction apply_content_value(node: Node | null, text: Text, values: unknown[]) {\n    if (!node) {\n        return;\n    }\n\n    const parts = text.data.split(placeholder_regex);\n\n    if (!parts || parts.length == 1) {\n        return;\n    }\n\n    if (is_HTMLElement(node) && [\"script\", \"style\"].includes(node.localName)) {\n        throw new Error(\n            `Cannot bind values inside of <script> or <style> tags`,\n        );\n    }\n\n    for (let i = 0; i < parts.length; i++) {\n        const part = parts[i];\n        // Don't bother adding empty text\n        if (!part) {\n            continue;\n        }\n        // Even parts are text nodes.\n        if (i % 2 == 0) {\n            node.insertBefore(new Text(part), text);\n        }\n        // Odd parts are placeholders.\n        else {\n            for (const value of convert_value_for_content(\n                values[parseInt(part, 10)],\n            )) {\n                if (value == null) continue;\n                node.insertBefore(value, text);\n            }\n        }\n    }\n\n    // clear the text data instead of removing the node, since removing it will\n    // break the tree walker.\n    text.data = \"\";\n}\n\n/**\n * Apply template values to an element's attribute.\n */\nfunction apply_attribute_value(\n    elm: HTMLElement,\n    attr: Attr,\n    values: unknown[],\n) {\n    const parts = attr.value.split(placeholder_regex);\n\n    if (!parts || parts.length == 1) {\n        return;\n    }\n\n    if (attr.localName.startsWith(\"on\")) {\n        throw new Error(`Cannot bind to event handler ${attr.localName}.`);\n    }\n\n    if (parts.length == 3 && parts[0] == \"\" && parts[2] == \"\") {\n        // special case of attr=\"${value}\", which explicitly handles true/false\n        const value = values[parseInt(parts[1]!, 10)];\n        if (value === true) {\n            attr.value = \"\";\n        } else if (value === false || value === null || value === undefined) {\n            elm.removeAttribute(attr.name);\n        } else {\n            attr.value = convert_value_for_attr(value, attr.name);\n        }\n        return;\n    }\n\n    attr.value = attr.value.replaceAll(\n        placeholder_regex,\n        (_: string, number: string) => {\n            const value = values[parseInt(number, 10)];\n            return convert_value_for_attr(value, attr.localName) as string;\n        },\n    );\n}\n\nfunction* convert_value_for_content(\n    value: unknown,\n): Generator<Node | Text | null> {\n    if (value == null || value == undefined) {\n        return;\n    }\n    if (is_primitive(value)) {\n        yield new Text(value.toString());\n        return;\n    }\n    if (value instanceof Node || value instanceof DocumentFragment) {\n        yield value;\n        return;\n    }\n    if (is_iterable(value)) {\n        for (const i of value) {\n            yield* convert_value_for_content(i);\n        }\n        return;\n    }\n    throw new Error(`Invalid value ${value}`);\n}\n\nfunction convert_value_for_attr(value: unknown, attr_name: string): string {\n    if (value == null || value == undefined) {\n        return \"\";\n    }\n    if (is_primitive(value)) {\n        return value.toString();\n    }\n    if (is_iterable(value)) {\n        return Array.from(value)\n            .map((v) => convert_value_for_attr(v, attr_name))\n            .join(\"\");\n    }\n    throw new Error(`Invalid value ${value}`);\n}\n", "/*\n    Copyright (c) 2023 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nimport { as_array } from \"../array\";\nimport { DeferredPromise } from \"../async\";\nimport { Disposables, type IDisposable } from \"../disposable\";\nimport type { PanAndZoomOptions } from \"../dom/pan-and-zoom\";\nimport { adopt_styles, type CSS } from \"./css\";\nimport { html, literal } from \"./html\";\nexport { html, literal };\n\n/**\n * Base CustomElement class, provides common helpers and behavior.\n */\nexport class CustomElement extends HTMLElement {\n  /**\n   * Styles added to the shadowRoot, can be a string or list of strings.\n   */\n  static styles: (CSS | CSSStyleSheet) | (CSS | CSSStyleSheet)[];\n\n  // Constructed stylesheets shared among instances.\n  static _constructed_styles: CSSStyleSheet[];\n\n  /**\n   * If true, a shadowRoot is created for this element.\n   */\n  static useShadowRoot = true;\n\n  /**\n   * Exports nested shadow dom parts\n   * https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/exportparts\n   */\n  static exportparts: string[] = [];\n\n  protected updateComplete: DeferredPromise<boolean> =\n    new DeferredPromise<boolean>();\n\n  private disposables = new Disposables();\n\n  constructor() {\n    super();\n\n    const static_this = this.constructor as typeof CustomElement;\n\n    if (static_this.exportparts.length) {\n      this.setAttribute(\"exportparts\", static_this.exportparts.join(\",\"));\n    }\n  }\n\n  addDisposable<T extends IDisposable>(item: T): T {\n    return this.disposables.add(item);\n  }\n\n  /**\n   * Returns either the shadowRoot or this if useShadowRoot is false.\n   */\n  get renderRoot(): ShadowRoot | this {\n    return this.shadowRoot ?? this;\n  }\n\n  /**\n   * Called when connected to the DOM\n   *\n   * By default it calls render() to place the initial content to the\n   * renderRoot.\n   */\n  connectedCallback(): void | undefined {\n    this.#renderInitialContent();\n  }\n\n  disconnectedCallback(): void | undefined {\n    this.disposables.dispose();\n  }\n\n  /**\n   * Called after the initial content is added to the renderRoot, perfect\n   * for registering event callbacks.\n   */\n  initialContentCallback(options?: PanAndZoomOptions): void | undefined { }\n\n  /**\n   * Called to render content to the renderRoot.\n   */\n  render(): Element | DocumentFragment {\n    return html``;\n  }\n\n  renderedCallback(): void | undefined { }\n\n  async update() {\n    this.updateComplete = new DeferredPromise<boolean>();\n    while (this.renderRoot.firstChild) {\n      this.renderRoot.firstChild.remove();\n    }\n    this.renderRoot.appendChild(await this.render());\n    this.renderedCallback();\n    window.requestAnimationFrame(() => {\n      this.updateComplete.resolve(true);\n    });\n    return this.updateComplete;\n  }\n\n  #renderInitialContent() {\n    const static_this = this.constructor as typeof CustomElement;\n    this.updateComplete = new DeferredPromise<boolean>();\n\n    if ((this.constructor as typeof CustomElement).useShadowRoot) {\n      this.attachShadow({ mode: \"open\" });\n    }\n\n    if (static_this.styles) {\n      adopt_styles(\n        this.shadowRoot ?? document,\n        as_array(static_this.styles),\n      );\n    }\n\n    (async () => {\n      const content = this.render();\n      this.renderRoot.appendChild(content);\n      this.renderedCallback();\n      this.initialContentCallback();\n      window.requestAnimationFrame(() => {\n        this.updateComplete.resolve(true);\n      });\n    })();\n\n    return this.updateComplete;\n  }\n\n  protected queryAssignedElements<T extends Element = HTMLElement>(\n    slot_name?: string,\n    selector?: string,\n  ) {\n    const slot_element = this.renderRoot.querySelector(\n      `slot${slot_name ? `[name=${slot_name}]` : \":not([name])\"}`,\n    ) as HTMLSlotElement;\n\n    const elements = (slot_element?.assignedElements() ?? []) as T[];\n\n    if (selector) {\n      return elements.filter((elm) => elm.matches(selector));\n    } else {\n      return elements;\n    }\n  }\n}\n", "/*\n    Copyright (c) 2022 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nexport function attribute<Type = unknown, TypeHint = unknown>(options: {\n    type: TypeHint;\n    converter?: AttributeConverter<Type, TypeHint>;\n    on_change?: (old_value: Type | null, new_value: Type | null) => void;\n}) {\n    const to =\n        options.converter?.to_attribute ??\n        default_attribute_converter.to_attribute;\n    const from =\n        options.converter?.from_attribute ??\n        default_attribute_converter.from_attribute;\n\n    return (target: object, propertyKey: string | symbol): void => {\n        const attributeKey = (propertyKey as string).replace(\"_\", \"-\");\n        let running_on_change = false;\n\n        Object.defineProperty(target, propertyKey, {\n            enumerable: true,\n            configurable: true,\n            get() {\n                return from(this.getAttribute(attributeKey), options.type);\n            },\n            set(value: Type) {\n                const old = this[propertyKey];\n\n                const converted = to(value, options.type);\n\n                if (converted === null) {\n                    this.removeAttribute(attributeKey);\n                } else {\n                    this.setAttribute(attributeKey, converted);\n                }\n\n                if (!running_on_change) {\n                    running_on_change = true;\n                    options.on_change?.(old, value);\n                    running_on_change = false;\n                }\n            },\n        });\n    };\n}\n\ninterface AttributeConverter<Type = unknown, TypeHint = unknown> {\n    to_attribute(value: Type, type?: TypeHint): unknown;\n    from_attribute(value: string | null, type?: TypeHint): Type;\n}\n\nconst default_attribute_converter = {\n    to_attribute(value: unknown, type?: unknown): string | null {\n        if (value === null) {\n            return value;\n        }\n\n        switch (type) {\n            case Boolean:\n                return value ? \"\" : null;\n            case String:\n                return value as string;\n            case Number:\n                return `${value}`;\n            default:\n                throw new Error(\n                    `Can not convert type \"${type}\" and value \"${value} to attribute`,\n                );\n        }\n    },\n    from_attribute(value: string | null, type?: unknown): unknown {\n        switch (type) {\n            case Boolean:\n                return value !== null;\n            case String:\n                return value;\n            case Number:\n                return value === null ? null : Number(value);\n            default:\n                throw new Error(\n                    `Can not convert type \"${type}\" and value \"${value} to attribute`,\n                );\n        }\n    },\n};\n\nexport function query(selector: string, cache?: boolean) {\n    return (target: object, propertyKey: string | symbol): void => {\n        const cache_key =\n            typeof propertyKey === \"symbol\" ? Symbol() : `__${propertyKey}`;\n\n        Object.defineProperty(target, propertyKey, {\n            enumerable: true,\n            configurable: true,\n            get() {\n                const this_as_record = this as unknown as {\n                    [key: string | symbol]: Element | null;\n                };\n\n                if (cache && this_as_record[cache_key] !== undefined) {\n                    return this_as_record[cache_key];\n                }\n\n                const result = this.renderRoot?.querySelector(selector) ?? null;\n\n                if (cache && result) {\n                    this_as_record[cache_key] = result;\n                }\n\n                return result;\n            },\n        });\n    };\n}\n\nexport function query_all(selector: string) {\n    return (target: object, propertyKey: string | symbol): void => {\n        Object.defineProperty(target, propertyKey, {\n            enumerable: true,\n            configurable: true,\n            get() {\n                return this.renderRoot?.querySelectorAll(selector) ?? [];\n            },\n        });\n    };\n}\n", "/*\n    Copyright (c) 2023 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nimport type { IDisposable } from \"./disposable\";\n\n/**\n * Adds an event listener and wraps it as a Disposable. When disposed, the\n * event listener is removed from the target.\n */\nexport function listen<K extends keyof GlobalEventHandlersEventMap>(\n    target: EventTarget,\n    type: K,\n    handler: (event: GlobalEventHandlersEventMap[K]) => void,\n    use_capture_or_options?: boolean | AddEventListenerOptions,\n): IDisposable;\nexport function listen(\n    target: EventTarget,\n    type: string,\n    handler: EventListenerOrEventListenerObject | null,\n    use_capture_or_options?: boolean | AddEventListenerOptions,\n): IDisposable;\nexport function listen(\n    target: EventTarget,\n    type: string,\n    handler: EventListenerOrEventListenerObject | null,\n    use_capture_or_options?: boolean | AddEventListenerOptions,\n): IDisposable {\n    target.addEventListener(type, handler, use_capture_or_options);\n    return {\n        dispose: () => {\n            target.removeEventListener(type, handler, use_capture_or_options);\n        },\n    };\n}\n\n/**\n * Adds a delegated event listener, which listens for events on `parent` that\n * occur from or within children matching `match`.\n */\nexport function delegate<K extends keyof GlobalEventHandlersEventMap>(\n    target: EventTarget,\n    match: string,\n    type: K,\n    handler: (\n        event: GlobalEventHandlersEventMap[K],\n        source: HTMLElement,\n    ) => void,\n    use_capture_or_options?: boolean | AddEventListenerOptions,\n): IDisposable;\nexport function delegate(\n    parent: EventTarget,\n    match: string,\n    type: string,\n    handler: (evt: Event, source: HTMLElement) => void,\n    use_capture_or_options?: boolean | AddEventListenerOptions,\n): IDisposable;\nexport function delegate(\n    parent: EventTarget,\n    match: string,\n    type: string,\n    handler: (evt: Event, source: HTMLElement) => void,\n    use_capture_or_options?: boolean | AddEventListenerOptions,\n): IDisposable {\n    return listen(\n        parent,\n        type,\n        (e) => {\n            const el = (e.target as HTMLElement).closest(match);\n            if (!el) {\n                return;\n            }\n            handler(e, el as HTMLElement);\n        },\n        use_capture_or_options,\n    );\n}\n", "/*\n    Copyright (c) 2022 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nimport { CustomElement, WithContext, css } from \"../base/web-components\";\n\nconst common_styles = css`\n    :host {\n        box-sizing: border-box;\n    }\n\n    :host *,\n    :host *::before,\n    :host *::after {\n        box-sizing: inherit;\n    }\n\n    [hidden] {\n        display: none !important;\n    }\n\n    :host {\n        scrollbar-width: thin;\n        scrollbar-color: #ae81ff #282634;\n    }\n\n    ::-webkit-scrollbar {\n        position: absolute;\n        width: 6px;\n        height: 6px;\n        margin-left: -6px;\n        background: var(--scrollbar-bg);\n    }\n\n    ::-webkit-scrollbar-thumb {\n        position: absolute;\n        background: var(--scrollbar-fg);\n    }\n\n    ::-webkit-scrollbar-thumb:hover {\n        background: var(--scrollbar-hover-fg);\n    }\n\n    ::-webkit-scrollbar-thumb:active {\n        background: var(--scrollbar-active-fg);\n    }\n\n    .invert-scrollbar::-webkit-scrollbar {\n        position: absolute;\n        width: 6px;\n        height: 6px;\n        margin-left: -6px;\n        background: var(--scrollbar-fg);\n    }\n\n    .invert-scrollbar::-webkit-scrollbar-thumb {\n        position: absolute;\n        background: var(--scrollbar-bg);\n    }\n\n    .invert-scrollbar::-webkit-scrollbar-thumb:hover {\n        background: var(--scrollbar-hover-bg);\n    }\n\n    .invert-scrollbar::-webkit-scrollbar-thumb:active {\n        background: var(--scrollbar-active-bg);\n    }\n`;\n\n/**\n * Base element for all kc-ui-* elements\n */\nexport class KCUIElement extends WithContext(CustomElement) {\n    static override styles = [common_styles];\n}\n", "/*\n    Copyright (c) 2023 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nimport { css, html } from \"../base/web-components\";\nimport { KCUIElement } from \"./element\";\n\n/**\n * kc-ui-icon is a material symbol\n */\nexport class KCUIIconElement extends KCUIElement {\n    public static sprites_url: string = \"\";\n\n    static override styles = [\n        css`\n            :host {\n                box-sizing: border-box;\n                font-family: \"Material Symbols Outlined\";\n                font-weight: normal;\n                font-style: normal;\n                font-size: inherit;\n                line-height: 1;\n                letter-spacing: normal;\n                text-transform: none;\n                white-space: nowrap;\n                word-wrap: normal;\n                direction: ltr;\n                -webkit-font-feature-settings: \"liga\";\n                -moz-font-feature-settings: \"liga\";\n                font-feature-settings: \"liga\";\n                -webkit-font-smoothing: antialiased;\n                user-select: none;\n            }\n\n            svg {\n                width: 1.2em;\n                height: auto;\n                fill: currentColor;\n            }\n        `,\n    ];\n\n    override render() {\n        const text = this.textContent ?? \"\";\n        if (text.startsWith(\"svg:\")) {\n            const name = text.slice(4);\n            const url = `${KCUIIconElement.sprites_url}#${name}`;\n            return html`<svg viewBox=\"0 0 48 48\" width=\"48\">\n                <use xlink:href=\"${url}\" />\n            </svg>`;\n        } else {\n            return html`<slot></slot>`;\n        }\n    }\n}\n\nwindow.customElements.define(\"kc-ui-icon\", KCUIIconElement);\n", "/*\n    Copyright (c) 2023 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nimport { attribute, css, html, query } from \"../base/web-components\";\nimport { KCUIElement } from \"./element\";\nimport { KCUIIconElement } from \"./icon\";\n\n/**\n * kc-ui-button wraps the <button> element with common styles and behaviors\n */\nexport class KCUIButtonElement extends KCUIElement {\n    static override styles = [\n        ...KCUIElement.styles,\n        css`\n            :host {\n                display: inline-flex;\n                position: relative;\n                width: auto;\n                cursor: pointer;\n                user-select: none;\n                align-items: center;\n                justify-content: center;\n            }\n\n            button {\n                all: unset;\n                display: inline-flex;\n                align-items: center;\n                justify-content: center;\n                padding: 0.5em;\n                border: 1px solid transparent;\n                border-radius: 0.25em;\n                font-weight: medium;\n                font-size: 1em;\n                background: var(--button-bg);\n                color: var(--button-fg);\n                transition:\n                    color var(--transition-time-short) ease,\n                    border var(--transition-time-short) ease,\n                    background var(--transition-time-short) ease;\n            }\n\n            :host {\n                fill: var(--button-fg);\n            }\n\n            button:hover {\n                background: var(--button-hover-bg);\n                color: var(--button-hover-fg);\n            }\n\n            button:disabled {\n                background: var(--button-disabled-bg);\n                color: var(--button-disabled-fg);\n            }\n\n            button:focus {\n                outline: var(--button-focus-outline);\n            }\n\n            :host([selected]) button {\n                background: var(--button-selected-bg);\n                color: var(--button-selected-fg);\n            }\n\n            /* variants */\n\n            button.outline {\n                background: var(--button-outline-bg);\n                color: var(--button-outline-fg);\n            }\n\n            button.outline:hover {\n                background: var(--button-outline-hover-bg);\n                color: var(--button-outline-hover-fg);\n            }\n\n            button.outline:disabled {\n                background: var(--button-outline-disabled-bg);\n                color: var(--button-outline-disabled-fg);\n            }\n\n            :host([selected]) button.outline {\n                background: var(--button-outline-disabled-bg);\n                color: var(--button--outline-disabled-fg);\n            }\n\n            button.toolbar {\n                background: var(--button-toolbar-bg);\n                color: var(--button-toolbar-fg);\n            }\n\n            button.toolbar:hover {\n                background: var(--button-toolbar-hover-bg);\n                color: var(--button-toolbar-hover-fg);\n            }\n\n            button.toolbar:disabled {\n                background: var(--button-toolbar-disabled-bg);\n                color: var(--button-toolbar-disabled-fg);\n            }\n\n            :host([selected]) button.toolbar {\n                background: var(--button-toolbar-disabled-bg);\n                color: var(--button--toolbar-disabled-fg);\n            }\n\n            button.toolbar-alt {\n                background: var(--button-toolbar-alt-bg);\n                color: var(--button-toolbar-alt-fg);\n            }\n\n            button.toolbar-alt:hover {\n                background: var(--button-toolbar-alt-hover-bg);\n                color: var(--button-toolbar-alt-hover-fg);\n            }\n\n            button.toolbar-alt:disabled {\n                background: var(--button-toolbar-alt-disabled-bg);\n                color: var(--button-toolbar-alt-disabled-fg);\n            }\n\n            :host([selected]) button.toolbar-alt {\n                background: var(--button-toolbar-alt-disabled-bg);\n                color: var(--button--toolbar-alt-disabled-fg);\n            }\n\n            button.menu {\n                background: var(--button-menu-bg);\n                color: var(--button-menu-fg);\n                padding: 0;\n            }\n\n            button.menu:hover {\n                background: var(--button-menu-hover-bg);\n                color: var(--button-menu-hover-fg);\n                outline: none;\n            }\n\n            button.menu:focus {\n                outline: none;\n            }\n\n            button.menu:disabled {\n                background: var(--button-menu-disabled-bg);\n                color: var(--button-menu-disabled-fg);\n            }\n\n            :host([selected]) button.menu {\n                background: var(--button-menu-disabled-bg);\n                color: var(--button--menu-disabled-fg);\n                outline: none;\n            }\n        `,\n    ];\n\n    @query(\"button\", true)\n    private button!: HTMLButtonElement;\n\n    @query(\"button_icon\", true)\n    private button_icon!: KCUIIconElement;\n\n    @attribute({ type: String })\n    name: string | null;\n\n    @attribute({ type: String })\n    icon: string | null;\n\n    @attribute({ type: String })\n    variant: string | null;\n\n    @attribute({ type: Boolean })\n    disabled: boolean;\n\n    @attribute({ type: Boolean })\n    selected: boolean;\n\n    static get observedAttributes() {\n        return [\"disabled\", \"icon\"];\n    }\n\n    attributeChangedCallback(\n        name: string,\n        old: string | null,\n        value: string | null,\n    ) {\n        if (!this.button) {\n            return;\n        }\n        switch (name) {\n            case \"disabled\":\n                this.button.disabled = value == null ? false : true;\n                break;\n            case \"icon\":\n                this.button_icon.innerText = value ?? \"\";\n                break;\n        }\n    }\n\n    override initialContentCallback() {\n        if (this.variant) {\n            this.button.classList.add(this.variant);\n        }\n\n        this.button.disabled = this.disabled;\n    }\n\n    override render() {\n        const icon = this.icon\n            ? html`<kc-ui-icon part=\"icon\">${this.icon}</kc-ui-icon>`\n            : undefined;\n        return html`<button part=\"base\">\n            ${icon}\n            <slot part=\"contents\"></slot>\n        </button>`;\n    }\n}\n\nwindow.customElements.define(\"kc-ui-button\", KCUIButtonElement);\n", "/*\n    Copyright (c) 2023 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nimport { delegate } from \"../base/events\";\nimport { attribute, css, html, query, query_all } from \"../base/web-components\";\nimport { KCUIButtonElement } from \"./button\";\nimport { KCUIElement } from \"./element\";\n\n/**\n * kc-ui-activity-bar is a vscode-style side bar with an action bar with icons\n * and a panel with various activities.\n */\nexport class KCUIActivitySideBarElement extends KCUIElement {\n    static override styles = [\n        ...KCUIElement.styles,\n        css`\n            :host {\n                flex-shrink: 0;\n                display: flex;\n                flex-direction: row;\n                height: 100%;\n                overflow: hidden;\n                min-width: calc(max(20%, 200px));\n                max-width: calc(max(20%, 200px));\n            }\n\n            div {\n                display: flex;\n                overflow: hidden;\n                flex-direction: column;\n            }\n\n            div.bar {\n                flex-grow: 0;\n                flex-shrink: 0;\n                height: 100%;\n                z-index: 1;\n                display: flex;\n                flex-direction: column;\n                background: var(--activity-bar-bg);\n                color: var(--activity-bar-fg);\n                padding: 0.2em;\n                user-select: none;\n            }\n\n            div.start {\n                flex: 1;\n            }\n\n            div.activities {\n                flex-grow: 1;\n            }\n\n            kc-ui-button {\n                --button-bg: transparent;\n                --button-fg: var(--activity-bar-fg);\n                --button-hover-bg: var(--activity-bar-active-bg);\n                --button-hover-fg: var(--activity-bar-active-fg);\n                --button-selected-bg: var(--activity-bar-active-bg);\n                --button-selected-fg: var(--activity-bar-active-fg);\n                --button-focus-outline: none;\n                margin-bottom: 0.25em;\n            }\n\n            kc-ui-button:last-child {\n                margin-bottom: 0;\n            }\n\n            ::slotted(kc-ui-activity) {\n                display: none;\n                height: 100%;\n            }\n\n            ::slotted(kc-ui-activity[active]) {\n                display: block;\n            }\n        `,\n    ];\n\n    #activity: string | null | undefined;\n\n    get #activities() {\n        // Slightly hacky: using querySelectorAll on light DOM instead of slots\n        // so this can be accessed before initial render.\n        return this.querySelectorAll<HTMLElement>(\"kc-ui-activity\");\n    }\n\n    get #activity_names() {\n        return Array.from(this.#activities).map((x) => {\n            return (x.getAttribute(\"name\") ?? \"\").toLowerCase();\n        });\n    }\n\n    get #default_activity_name() {\n        return (this.#activities[0]?.getAttribute(\"name\") ?? \"\").toLowerCase();\n    }\n\n    @query(\".activities\", true)\n    private activities_container!: HTMLElement;\n\n    @query_all(\"kc-ui-button\")\n    private buttons!: KCUIButtonElement[];\n\n    @attribute({ type: Boolean })\n    public collapsed: boolean;\n\n    override render() {\n        const top_buttons: HTMLElement[] = [];\n        const bottom_buttons: HTMLElement[] = [];\n\n        for (const activity of this.#activities) {\n            const name = activity.getAttribute(\"name\");\n            const icon = activity.getAttribute(\"icon\");\n            const button_location = activity.getAttribute(\"button-location\");\n            (button_location == \"bottom\" ? bottom_buttons : top_buttons).push(\n                html`\n                    <kc-ui-button\n                        type=\"button\"\n                        tooltip-left=\"${name}\"\n                        name=\"${name?.toLowerCase()}\"\n                        title=\"${name}\"\n                        icon=${icon}>\n                    </kc-ui-button>\n                ` as HTMLElement,\n            );\n        }\n\n        return html`<div class=\"bar\">\n                <div class=\"start\">${top_buttons}</div>\n                <div class=\"end\">${bottom_buttons}</div>\n            </div>\n            <div class=\"activities\">\n                <slot name=\"activities\"></slot>\n            </div>`;\n    }\n\n    override initialContentCallback() {\n        if (!this.collapsed) {\n            this.change_activity(this.#default_activity_name);\n        } else {\n            this.change_activity(null);\n        }\n\n        delegate(this.renderRoot, \"kc-ui-button\", \"click\", (e, source) => {\n            this.change_activity((source as KCUIButtonElement).name, true);\n        });\n\n        const observer = new MutationObserver(async (mutations) => {\n            await this.update();\n            // If the currently active activity just got removed, change to the\n            // new default one.\n            if (\n                this.#activity &&\n                !this.#activity_names.includes(this.#activity)\n            ) {\n                this.change_activity(this.#default_activity_name);\n            }\n        });\n\n        observer.observe(this, {\n            childList: true,\n        });\n    }\n\n    static get observedAttributes() {\n        return [\"collapsed\"];\n    }\n\n    attributeChangedCallback(\n        name: string,\n        old: string | null,\n        value: string | null | undefined,\n    ) {\n        switch (name) {\n            case \"collapsed\":\n                if (value == undefined) {\n                    this.show_activities();\n                } else {\n                    this.hide_activities();\n                }\n                break;\n            default:\n                break;\n        }\n    }\n\n    get activity() {\n        return this.#activity;\n    }\n\n    set activity(name: string | null | undefined) {\n        this.change_activity(name, false);\n    }\n\n    hide_activities() {\n        if (!this.activities_container) {\n            return;\n        }\n\n        // unset width and minWidth so the container can shrink.\n        this.style.width = \"unset\";\n        this.style.minWidth = \"unset\";\n        // clear maxWidth, since the resizer will changes it.\n        this.style.maxWidth = \"\";\n        // set the width to 0px so that css transition works as expected.\n        this.activities_container.style.width = \"0px\";\n    }\n\n    show_activities() {\n        if (!this.activities_container) {\n            return;\n        }\n\n        if (!this.#activity) {\n            this.change_activity(this.#default_activity_name);\n        }\n\n        this.style.minWidth = \"\";\n        this.activities_container.style.width = \"\";\n    }\n\n    change_activity(name: string | null | undefined, toggle = false) {\n        name = name?.toLowerCase();\n\n        if (this.#activity == name && toggle) {\n            // Clicking on the selected activity will deselect it.\n            this.#activity = null;\n        } else {\n            this.#activity = name;\n        }\n\n        // If there's no current activity, collapse the activity item\n        // container\n        if (!this.#activity) {\n            this.collapsed = true;\n        } else {\n            this.collapsed = false;\n        }\n\n        this.update_state();\n    }\n\n    private update_state() {\n        // Mark the selected activity icon button as selected, clearing\n        // the others.\n        for (const btn of this.buttons) {\n            btn.selected = btn.name == this.#activity;\n        }\n\n        // Mark the selected activity element active, clearing the others.\n        for (const activity of this.#activities) {\n            if (\n                activity.getAttribute(\"name\")?.toLowerCase() == this.#activity\n            ) {\n                activity.setAttribute(\"active\", \"\");\n            } else {\n                activity.removeAttribute(\"active\");\n            }\n        }\n    }\n}\n\nwindow.customElements.define(\n    \"kc-ui-activity-side-bar\",\n    KCUIActivitySideBarElement,\n);\n", "/*\n    Copyright (c) 2022 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\n/**\n * Common building blocks for KiCanvas's UI.\n *\n * These are basic, fundamental elements used to built KiCanvas's UI. These\n * elements are all named <kc-ui-*>, and must exist within a <kc-ui-app> parent\n *\n */\n\nimport { CustomElement } from \"../base/web-components\";\n\n/**\n * kc-ui-app is the parent container for all kc-ui-* elements.\n */\nexport class KCUIAppElement extends CustomElement {\n    static override useShadowRoot = false;\n}\n\nwindow.customElements.define(\"kc-ui-app\", KCUIAppElement);\n", "/*\n    Copyright (c) 2023 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nimport { css, html } from \"../base/web-components\";\nimport { KCUIElement } from \"./element\";\n\nexport class KCUIControlListElement extends KCUIElement {\n    static override styles = [\n        ...KCUIElement.styles,\n        css`\n            :host {\n                display: flex;\n                flex-direction: column;\n                flex-wrap: nowrap;\n                background: var(--list-item-bg);\n                color: var(--list-item-fg);\n                padding-top: 0.2em;\n            }\n        `,\n    ];\n\n    override render() {\n        return html`<slot></slot>`;\n    }\n}\n\nwindow.customElements.define(\"kc-ui-control-list\", KCUIControlListElement);\n\nexport class KCUIControlListItemElement extends KCUIElement {\n    static override styles = [\n        ...KCUIElement.styles,\n        css`\n            :host {\n                margin-top: 0.2em;\n                display: flex;\n                flex-direction: column;\n                flex-wrap: nowrap;\n                user-select: none;\n                background-color: transparent;\n                transition:\n                    color var(--transition-time-short) ease,\n                    background-color var(--transition-time-short) ease;\n            }\n\n            ::slotted(label) {\n                flex: 1 1 100%;\n                display: block;\n                margin: 0;\n                text-overflow: ellipsis;\n                white-space: nowrap;\n                overflow: hidden;\n            }\n\n            ::slotted(input),\n            ::slotted(select) {\n                margin: 0;\n                padding-left: 0;\n                padding-right: 0;\n            }\n        `,\n    ];\n\n    override render() {\n        return html`<slot></slot>`;\n    }\n}\n\nwindow.customElements.define(\n    \"kc-ui-control-list-item\",\n    KCUIControlListItemElement,\n);\n", "/*\n    Copyright (c) 2022 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nexport function no_self_recursion(\n    target: any,\n    propertyKey: string | symbol,\n    descriptor: PropertyDescriptor,\n) {\n    const fn = descriptor.value;\n\n    let _is_running = false;\n\n    descriptor.value = function (...args: any[]) {\n        if (_is_running) {\n            return;\n        }\n        _is_running = true;\n        try {\n            fn.apply(this, args);\n        } finally {\n            _is_running = false;\n        }\n    };\n}\n", "/*\n    Copyright (c) 2023 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nimport { delegate } from \"../base/events\";\nimport { no_self_recursion } from \"../base/functions\";\nimport { is_string } from \"../base/types\";\nimport { attribute, css, html } from \"../base/web-components\";\nimport { KCUIElement } from \"./element\";\n\n/**\n * kc-ui-menu and kc-ui-menu-item encompass a simple menu with selectable items.\n */\n\nexport class KCUIMenuElement extends KCUIElement {\n    static override styles = [\n        ...KCUIElement.styles,\n        css`\n            :host {\n                width 100%;\n                display: flex;\n                flex-direction: column;\n                flex-wrap: nowrap;\n                background: var(--list-item-bg);\n                color: var(--list-item-fg);\n            }\n\n            :host(.outline) ::slotted(kc-ui-menu-item) {\n                border-bottom: 1px solid var(--grid-outline);\n            }\n\n            :host(.dropdown) {\n                --list-item-padding: 0.3em 0.6em;\n                --list-item-bg: var(--dropdown-bg);\n                --list-item-fg: var(--dropdown-fg);\n                --list-item-hover-bg: var(--dropdown-hover-bg);\n                --list-item-hover-fg: var(--dropdown-hover-fg);\n                --list-item-active-bg: var(--dropdown-active-bg);\n                --list-item-active-fg: var(--dropdown-active-fg);\n                max-height: 50vh;\n                overflow-y: auto;\n            }\n        `,\n    ];\n\n    constructor() {\n        super();\n        this.role = \"menu\";\n    }\n\n    public items() {\n        return this.querySelectorAll<KCUIMenuItemElement>(`kc-ui-menu-item`);\n    }\n\n    public item_by_name(name: string): KCUIMenuItemElement | null {\n        for (const item of this.items()) {\n            if (item.name == name) {\n                return item;\n            }\n        }\n        return null;\n    }\n\n    public deselect() {\n        for (const item of this.items()) {\n            item.selected = false;\n        }\n    }\n\n    public get selected(): KCUIMenuItemElement | null {\n        for (const item of this.items()) {\n            if (item.selected) {\n                return item;\n            }\n        }\n        return null;\n    }\n\n    set selected(element_or_name: KCUIMenuItemElement | string | null) {\n        let new_selected: KCUIMenuItemElement | null;\n\n        if (is_string(element_or_name)) {\n            new_selected = this.item_by_name(element_or_name);\n        } else {\n            new_selected = element_or_name;\n        }\n\n        this.deselect();\n\n        if (!new_selected || !(new_selected instanceof KCUIMenuItemElement)) {\n            return;\n        }\n\n        new_selected.selected = true;\n\n        this.send_selected_event(new_selected);\n    }\n\n    @no_self_recursion\n    private send_selected_event(new_selected: KCUIMenuItemElement) {\n        this.dispatchEvent(\n            new CustomEvent(\"kc-ui-menu:select\", {\n                detail: new_selected,\n                bubbles: true,\n                composed: true,\n            }),\n        );\n    }\n\n    override initialContentCallback() {\n        super.initialContentCallback();\n\n        delegate(this, `kc-ui-menu-item`, \"click\", (e, source) => {\n            if ((e.target as HTMLElement).tagName == \"KC-UI-BUTTON\") {\n                return;\n            }\n\n            e.stopPropagation();\n            this.selected = source as KCUIMenuItemElement;\n        });\n    }\n\n    override render() {\n        return html`<slot></slot>`;\n    }\n}\n\nwindow.customElements.define(\"kc-ui-menu\", KCUIMenuElement);\n\nexport class KCUIMenuItemElement extends KCUIElement {\n    static override styles = [\n        ...KCUIElement.styles,\n        css`\n            :host {\n                display: flex;\n                align-items: center;\n                flex-wrap: nowrap;\n                padding: var(--list-item-padding, 0.2em 0.3em);\n                user-select: none;\n                background: transparent;\n                transition:\n                    color var(--transition-time-short) ease,\n                    background-color var(--transition-time-short) ease;\n                cursor: pointer;\n            }\n\n            :host(:hover) {\n                background: var(--list-item-hover-bg);\n                color: var(--list-item-hover-fg);\n            }\n\n            :host([selected]) {\n                background: var(--list-item-active-bg);\n                color: var(--list-item-active-fg);\n            }\n\n            :host([disabled]) {\n                background: var(--list-item-disabled-bg);\n                color: var(--list-item-disabled-fg);\n            }\n\n            ::slotted(*) {\n                flex: 1 1 100%;\n                display: block;\n                text-overflow: ellipsis;\n                white-space: nowrap;\n                overflow: hidden;\n            }\n\n            ::slotted(.narrow) {\n                max-width: 100px;\n            }\n\n            ::slotted(.very-narrow) {\n                max-width: 50px;\n            }\n\n            kc-ui-icon {\n                margin-right: 0.5em;\n                margin-left: -0.1em;\n            }\n        `,\n    ];\n\n    constructor() {\n        super();\n        this.role = \"menuitem\";\n    }\n\n    @attribute({ type: String })\n    name: string;\n\n    @attribute({ type: String })\n    icon: string;\n\n    @attribute({ type: Boolean })\n    selected: boolean;\n\n    @attribute({ type: Boolean })\n    disabled: boolean;\n\n    override render() {\n        const icon = this.icon\n            ? html`<kc-ui-icon>${this.icon}</kc-ui-icon>`\n            : undefined;\n        return html`${icon}<slot></slot>`;\n    }\n}\n\nwindow.customElements.define(\"kc-ui-menu-item\", KCUIMenuItemElement);\n\nexport class KCUIMenuLabelElement extends KCUIElement {\n    static override styles = [\n        ...KCUIElement.styles,\n        css`\n            :host {\n                width: 100%;\n                display: flex;\n                flex-wrap: nowrap;\n                padding: 0.2em 0.3em;\n                background: var(--panel-subtitle-bg);\n                color: var(--panel-subtitle-fg);\n            }\n        `,\n    ];\n\n    override render() {\n        return html`<slot></slot>`;\n    }\n}\n\nwindow.customElements.define(\"kc-ui-menu-label\", KCUIMenuLabelElement);\n", "/*\n    Copyright (c) 2023 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nimport { listen } from \"../base/events\";\nimport { attribute, css, html } from \"../base/web-components\";\nimport { KCUIElement } from \"./element\";\nimport { KCUIMenuElement } from \"./menu\";\n\n/**\n * kc-ui-dropdown is a basic dropdown menu.\n *\n * This can be used for dropdown menus or for context menus.\n *\n * It also makes sure not to immediately close the menu when the user mouses\n * out, instead relying on a buffer zone.\n */\nexport class KCUIDropdownElement extends KCUIElement {\n    static override styles = [\n        ...KCUIElement.styles,\n        css`\n            :host {\n                border-radius: 5px;\n                border: 1px solid transparent;\n                display: none;\n                flex-direction: column;\n                overflow: hidden;\n                user-select: none;\n                background: var(--dropdown-bg);\n                color: var(--dropdown-fg);\n                font-weight: 300;\n            }\n\n            :host([visible]) {\n                display: flex;\n            }\n        `,\n    ];\n\n    constructor() {\n        super();\n        this.mouseout_padding ??= 50;\n    }\n\n    public show() {\n        if (this.visible) {\n            return;\n        }\n\n        this.visible = true;\n        this.dispatchEvent(\n            new CustomEvent(\"kc-ui-dropdown:show\", {\n                bubbles: true,\n                composed: true,\n            }),\n        );\n    }\n\n    public hide() {\n        if (!this.visible) {\n            return;\n        }\n\n        this.visible = false;\n        this.dispatchEvent(\n            new CustomEvent(\"kc-ui-dropdown:hide\", {\n                bubbles: true,\n                composed: true,\n            }),\n        );\n    }\n\n    public toggle() {\n        if (this.visible) {\n            this.hide();\n        } else {\n            this.show();\n        }\n    }\n\n    @attribute({ type: Boolean })\n    visible: boolean;\n\n    @attribute({ type: Number })\n    mouseout_padding: number;\n\n    public get menu() {\n        return this.querySelector<KCUIMenuElement>(\"kc-ui-menu\")!;\n    }\n\n    override initialContentCallback() {\n        super.initialContentCallback();\n        if (this.hasAttribute(\"auto-hide\")) {\n            this.setup_leave_event();\n        }\n\n        this.menu.classList.add(\"invert-scrollbar\");\n    }\n\n    private setup_leave_event() {\n        // Handles closing the panel when the mouse is well outside of the\n        // bounding box.\n        this.addEventListener(\"mouseleave\", (e) => {\n            if (!this.visible) {\n                return;\n            }\n\n            const padding = this.mouseout_padding;\n            const rect = this.getBoundingClientRect();\n\n            const move_listener = listen(window, \"mousemove\", (e) => {\n                if (!this.visible) {\n                    move_listener.dispose();\n                }\n\n                const in_box =\n                    e.clientX > rect.left - padding &&\n                    e.clientX < rect.right + padding &&\n                    e.clientY > rect.top - padding &&\n                    e.clientY < rect.bottom + padding;\n                if (!in_box) {\n                    this.hide();\n                    move_listener.dispose();\n                }\n            });\n        });\n    }\n\n    override render() {\n        return html`<slot></slot>`;\n    }\n}\n\nwindow.customElements.define(\"kc-ui-dropdown\", KCUIDropdownElement);\n", "/*\n    Copyright (c) 2023 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nimport { later } from \"../base/async\";\nimport { css, html } from \"../base/web-components\";\nimport { KCUIElement } from \"./element\";\n\nexport class KCUIFilteredListElement extends KCUIElement {\n    static override styles = [\n        ...KCUIElement.styles,\n        css`\n            :host {\n                display: contents;\n            }\n        `,\n    ];\n\n    override render(): Element | DocumentFragment {\n        return html`<slot></slot>`;\n    }\n\n    #filter_text: string | null;\n\n    set filter_text(v) {\n        this.#filter_text = v?.toLowerCase() ?? null;\n        this.apply_filter();\n    }\n\n    get filter_text() {\n        return this.#filter_text;\n    }\n\n    private get item_selector() {\n        return this.getAttribute(\"item-selector\") ?? \"[data-match-text]\";\n    }\n\n    private *items() {\n        for (const parent of this.queryAssignedElements()) {\n            yield* parent.querySelectorAll<HTMLElement>(this.item_selector);\n        }\n    }\n\n    private apply_filter() {\n        later(() => {\n            for (const el of this.items()) {\n                if (\n                    this.#filter_text == null ||\n                    el.dataset[\"matchText\"]\n                        ?.toLowerCase()\n                        .includes(this.#filter_text)\n                ) {\n                    el.style.removeProperty(\"display\");\n                } else {\n                    el.style.display = \"none\";\n                }\n            }\n        });\n    }\n}\n\nwindow.customElements.define(\"kc-ui-filtered-list\", KCUIFilteredListElement);\n", "/*\n    Copyright (c) 2023 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nimport { css, html } from \"../base/web-components\";\nimport { KCUIElement } from \"./element\";\n\n/**\n * kc-ui-floating-toolbar is a toolbar that presents its elements on top of\n * another, such as a document viewer. It allows tools to take up minimal room\n * in the UI since unused areas of the toolbar are transparent and open to the\n * element belong.\n */\nexport class KCUIFloatingToolbarElement extends KCUIElement {\n    static override styles = [\n        ...KCUIElement.styles,\n        css`\n            :host {\n                z-index: 10;\n                user-select: none;\n                pointer-events: none;\n                position: absolute;\n                left: 0;\n                width: 100%;\n                padding: 0.5em;\n                display: flex;\n                flex-direction: row;\n                align-items: center;\n                justify-content: flex-start;\n            }\n\n            :host([location=\"top\"]) {\n                top: 0;\n            }\n\n            :host([location=\"bottom\"]) {\n                bottom: 0;\n            }\n\n            ::slotted(*) {\n                user-select: initial;\n                pointer-events: initial;\n            }\n\n            slot[name=\"left\"] {\n                flex-grow: 999;\n                display: flex;\n            }\n\n            slot[name=\"right\"] {\n                display: flex;\n            }\n\n            ::slotted(kc-ui-button) {\n                margin-left: 0.25em;\n            }\n        `,\n    ];\n\n    override render() {\n        return html`<slot name=\"left\"></slot><slot name=\"right\"></slot>`;\n    }\n}\n\nwindow.customElements.define(\n    \"kc-ui-floating-toolbar\",\n    KCUIFloatingToolbarElement,\n);\n", "/*\n    Copyright (c) 2023 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nimport { listen } from \"../base/events\";\nimport { css, html } from \"../base/web-components\";\nimport { KCUIElement } from \"./element\";\n\n/**\n * kc-ui-focus-overlay is an element that shows an overlay over its siblings\n * until the user clicks within.\n */\nexport class KCUIFocusOverlay extends KCUIElement {\n  static override styles = [\n    ...KCUIElement.styles,\n    css`\n            :host {\n                z-index: 10;\n                user-select: none;\n                position: absolute;\n                top: 0;\n                left: 0;\n                width: 100%;\n                height: 100%;\n                display: flex;\n                align-items: center;\n                justify-content: center;\n                pointer-events: initial;\n                background: transparent;\n                contain: paint;\n            }\n\n            :host(.has-focus) {\n                z-index: -10;\n                pointer-events: none;\n            }\n\n            .bg {\n                background: var(--focus-overlay-bg);\n                opacity: 0;\n                transition: opacity var(--transition-time-short);\n                position: absolute;\n                top: 0;\n                left: 0;\n                width: 100%;\n                height: 100%;\n                pointer-events: none;\n            }\n\n            :host(:hover) .bg {\n                opacity: var(--focus-overlay-opacity);\n            }\n\n            :host(.has-focus) .bg {\n                opacity: 0;\n            }\n\n            .fg {\n                position: absolute;\n                font-size: 1.5rem;\n                color: var(--focus-overlay-fg);\n                text-shadow: rgba(0, 0, 0, 0.5) 0px 0px 15px;\n                opacity: 0;\n                pointer-events: none;\n            }\n\n            :host(:hover) .fg {\n                opacity: 1;\n            }\n\n            :host(.has-focus) .fg {\n                opacity: 0;\n            }\n        `,\n  ];\n\n  #intersection_observer: IntersectionObserver;\n\n  override initialContentCallback(): void | undefined {\n    this.addEventListener(\"click\", () => {\n      this.classList.add(\"has-focus\");\n    });\n\n    this.addDisposable(\n      listen(document, \"click\", (e) => {\n        const outside = !e.composedPath().includes(this.parentElement!);\n        if (outside) {\n          this.classList.remove(\"has-focus\");\n        }\n      }),\n    );\n\n    this.#intersection_observer = new IntersectionObserver((entries) => {\n      for (const entry of entries) {\n        if (!entry.isIntersecting) {\n          this.classList.remove(\"has-focus\");\n        }\n      }\n    });\n\n    this.#intersection_observer.observe(this);\n\n    this.addDisposable({\n      dispose: () => {\n        this.#intersection_observer.disconnect();\n      },\n    });\n  }\n\n  override render() {\n    return html`\n            <div class=\"bg\"></div>\n            <div class=\"fg\">Click or tap to interact</div>\n        `;\n  }\n}\n\nwindow.customElements.define(\"kc-ui-focus-overlay\", KCUIFocusOverlay);\n", "/*\n    Copyright (c) 2023 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nimport { css, html } from \"../base/web-components\";\nimport { KCUIElement } from \"./element\";\n\n/**\n * kc-ui-panel and kc-ui-panel-body encompass basic\n * scrollable panels\n */\n\nexport class KCUIPanelElement extends KCUIElement {\n    static override styles = [\n        ...KCUIElement.styles,\n        css`\n            :host {\n                width: 100%;\n                height: 100%;\n                overflow: hidden;\n                display: flex;\n                flex-direction: column;\n                background: var(--panel-bg);\n                color: var(--panel-fg);\n                --bg: var(--panel-bg);\n            }\n\n            :host(:last-child) {\n                flex-grow: 1;\n            }\n        `,\n    ];\n\n    override render() {\n        return html`<slot></slot>`;\n    }\n}\n\nwindow.customElements.define(\"kc-ui-panel\", KCUIPanelElement);\n\nexport class KCUIPanelTitleElement extends KCUIElement {\n    static override styles = [\n        ...KCUIElement.styles,\n        css`\n            :host {\n                flex: 0;\n                width: 100%;\n                text-align: left;\n                padding: 0.2em 0.8em 0.2em 0.4em;\n                display: flex;\n                align-items: center;\n                background: var(--panel-title-bg);\n                color: var(--panel-title-fg);\n                border-top: var(--panel-title-border);\n                user-select: none;\n            }\n\n            div.title {\n                flex: 1;\n            }\n\n            div.actions {\n                flex: 0 1;\n                display: flex;\n                flex-direction: row;\n                /* cheeky hack to work around scrollbar causing placement to be off. */\n                padding-right: 6px;\n            }\n        `,\n    ];\n\n    override render() {\n        return html`<div class=\"title\">${this.title}</div>\n            <div class=\"actions\">\n                <slot name=\"actions\"></slot>\n            </div>`;\n    }\n}\n\nwindow.customElements.define(\"kc-ui-panel-title\", KCUIPanelTitleElement);\n\nexport class KCUIPanelBodyElement extends KCUIElement {\n    static override styles = [\n        ...KCUIElement.styles,\n        css`\n            :host {\n                width: 100%;\n                min-height: 0;\n                overflow-y: auto;\n                overflow-x: hidden;\n                flex: 1 0;\n                font-weight: 300;\n                font-size: 1em;\n            }\n\n            :host([padded]) {\n                padding: 0.1em 0.8em 0.1em 0.4em;\n            }\n        `,\n    ];\n\n    override render() {\n        return html`<slot></slot>`;\n    }\n}\n\nwindow.customElements.define(\"kc-ui-panel-body\", KCUIPanelBodyElement);\n\nexport class KCUIPanelLabelElement extends KCUIElement {\n    static override styles = [\n        ...KCUIElement.styles,\n        css`\n            :host {\n                width: 100%;\n                display: flex;\n                flex-wrap: nowrap;\n                padding: 0.2em 0.3em;\n                background: var(--panel-subtitle-bg);\n                color: var(--panel-subtitle-fg);\n            }\n        `,\n    ];\n\n    override render() {\n        return html`<slot></slot>`;\n    }\n}\n\nwindow.customElements.define(\"kc-ui-panel-label\", KCUIPanelLabelElement);\n", "/*\n    Copyright (c) 2023 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nimport { css, html, attribute } from \"../base/web-components\";\nimport { KCUIElement } from \"./element\";\n\nexport class KCUIPropertyList extends KCUIElement {\n    static override styles = [\n        ...KCUIElement.styles,\n        css`\n            :host {\n                display: grid;\n                gap: 1px;\n                grid-template-columns: fit-content(50%) 1fr;\n                background: var(--grid-outline);\n                border-bottom: 1px solid var(--grid-outline);\n            }\n        `,\n    ];\n\n    override render() {\n        return html`<slot></slot>`;\n    }\n}\n\nwindow.customElements.define(\"kc-ui-property-list\", KCUIPropertyList);\n\nexport class KCUIPropertyListItemElement extends KCUIElement {\n    static override styles = [\n        ...KCUIElement.styles,\n        css`\n            :host {\n                display: contents;\n            }\n\n            span {\n                padding: 0.2em;\n                background: var(--bg);\n                text-overflow: ellipsis;\n                white-space: nowrap;\n                overflow: hidden;\n                user-select: all;\n            }\n\n            :host(.label) span:first-child {\n                user-select: none;\n                grid-column-end: span 2;\n                background: var(--panel-subtitle-bg);\n                color: var(--panel-subtitle-fg);\n            }\n\n            :host(.label) span:last-child {\n                display: none;\n            }\n\n            ::slotted(*) {\n                vertical-align: middle;\n            }\n        `,\n    ];\n\n    @attribute({ type: String })\n    name: string;\n\n    override render() {\n        return html`<span title=\"${this.name}\">${this.name}</span\n            ><span><slot></slot></span>`;\n    }\n}\n\nwindow.customElements.define(\n    \"kc-ui-property-list-item\",\n    KCUIPropertyListItemElement,\n);\n", "/*\n    Copyright (c) 2023 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nimport { attribute, css, html, query } from \"../base/web-components\";\nimport { KCUIElement } from \"./element\";\n\n/**\n * kc-ui-range is a wrapper around <input type=\"range\">\n */\nexport class KCUIRangeElement extends KCUIElement {\n    static override styles = [\n        ...KCUIElement.styles,\n        css`\n            :host {\n                display: block;\n                width: 100%;\n                user-select: none;\n            }\n\n            input[type=\"range\"] {\n                all: unset;\n                box-sizing: border-box;\n                display: block;\n                width: 100%;\n                max-width: 100%;\n                padding-top: 0.25em;\n                padding-bottom: 0.25em;\n                -webkit-appearance: none;\n                appearance: none;\n                font: inherit;\n                cursor: grab;\n                background: transparent;\n                transition:\n                    color var(--transition-time-medium) ease,\n                    box-shadow var(--transition-time-medium) ease,\n                    outline var(--transition-time-medium) ease,\n                    background var(--transition-time-medium) ease,\n                    border var(--transition-time-medium) ease;\n            }\n\n            input[type=\"range\"]:hover {\n                z-index: 10;\n                box-shadow: var(--input-range-hover-shadow);\n            }\n\n            input[type=\"range\"]:focus {\n                box-shadow: none;\n                outline: none;\n            }\n\n            input[type=\"range\"]:disabled:hover {\n                cursor: unset;\n            }\n\n            input[type=\"range\"]::-webkit-slider-runnable-track {\n                box-sizing: border-box;\n                height: 0.5em;\n                border: 1px solid transparent;\n                border-radius: 0.5em;\n                background: var(--input-range-bg);\n            }\n            input[type=\"range\"]::-moz-range-track {\n                box-sizing: border-box;\n                height: 0.5em;\n                border: 1px solid transparent;\n                border-radius: 0.5em;\n                background: var(--input-range-bg);\n            }\n\n            input[type=\"range\"]:hover::-webkit-slider-runnable-track,\n            input[type=\"range\"]:focus::-webkit-slider-runnable-track {\n                border: 1px solid var(--input-range-hover-bg);\n            }\n            input[type=\"range\"]:hover::-moz-range-track,\n            input[type=\"range\"]:focus::-moz-range-track {\n                border: 1px solid var(--input-range-hover-bg);\n            }\n\n            input[type=\"range\"]:disabled::-webkit-slider-runnable-track {\n                background: var(--input-range-disabled-bg);\n            }\n            input[type=\"range\"]:disabled::-moz-range-track {\n                background: var(--input-range-disabled-bg);\n            }\n\n            input[type=\"range\"]::-webkit-slider-thumb {\n                -webkit-appearance: none;\n                appearance: none;\n                height: 1em;\n                width: 1em;\n                border-radius: 0.5em;\n                margin-top: -0.3em;\n                background: var(--input-range-fg);\n            }\n            input[type=\"range\"]::-moz-range-thumb {\n                border: none;\n                height: 1em;\n                width: 1em;\n                border-radius: 100%;\n                margin-top: -0.3em;\n                background: var(--input-range-fg);\n            }\n\n            input[type=\"range\"]:focus::-webkit-slider-thumb {\n                box-shadow: var(--input-range-handle-shadow);\n            }\n            input[type=\"range\"]:focus::-moz-range-thumb {\n                box-shadow: var(--input-range-handle-shadow);\n            }\n        `,\n    ];\n\n    @attribute({ type: String })\n    name: string;\n\n    @attribute({ type: String })\n    min: string;\n\n    @attribute({ type: String })\n    max: string;\n\n    @attribute({ type: String })\n    step: string;\n\n    @attribute({ type: Boolean })\n    disabled: boolean;\n\n    static get observedAttributes() {\n        return [\"disabled\", \"min\", \"max\", \"step\", \"value\"];\n    }\n\n    public get value(): string {\n        return this.input.value;\n    }\n\n    public set value(val: string) {\n        this.input.value = val;\n    }\n\n    public get valueAsNumber(): number {\n        return this.input.valueAsNumber;\n    }\n\n    @query(\"input\", true)\n    private input!: HTMLInputElement;\n\n    attributeChangedCallback(\n        name: string,\n        old: string | null,\n        value: string | null,\n    ) {\n        if (!this.input) {\n            return;\n        }\n        switch (name) {\n            case \"disabled\":\n                this.input.disabled = value == null ? false : true;\n                break;\n            case \"min\":\n                this.input.min = value ?? \"\";\n                break;\n            case \"max\":\n                this.input.max = value ?? \"\";\n                break;\n            case \"step\":\n                this.input.step = value ?? \"\";\n                break;\n            case \"value\":\n                this.value = value ?? \"\";\n                break;\n        }\n    }\n\n    override initialContentCallback() {\n        this.input.disabled = this.disabled;\n\n        this.input.addEventListener(\"input\", (e) => {\n            e.stopPropagation();\n            this.dispatchEvent(\n                new CustomEvent(\"kc-ui-range:input\", {\n                    composed: true,\n                    bubbles: true,\n                }),\n            );\n        });\n    }\n\n    override render() {\n        return html`<input\n            type=\"range\"\n            min=\"${this.min}\"\n            max=\"${this.max}\"\n            step=\"${this.step}\"\n            value=\"${this.getAttribute(\"value\")}\">\n        </input>`;\n    }\n}\n\nwindow.customElements.define(\"kc-ui-range\", KCUIRangeElement);\n", "/*\n    Copyright (c) 2023 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nimport { css } from \"../base/web-components\";\nimport { listen } from \"../base/events\";\nimport { KCUIElement } from \"./element\";\n\n/**\n * kc-ui-resizer allow re-sizing a kc-ui-view with the mouse.\n *\n * Presently it's only able to resize the element to its immediate right.\n */\nexport class KCUIResizerElement extends KCUIElement {\n    static override styles = [\n        ...KCUIElement.styles,\n        css`\n            :host {\n                z-index: 999;\n                user-select: none;\n                display: block;\n                width: 6px;\n                margin-left: -6px;\n                cursor: col-resize;\n                background: transparent;\n                opacity: 0;\n                transition: opacity var(--transition-time-medium, 500) ease;\n            }\n\n            :host(:hover) {\n                background: var(--resizer-bg, rebeccapurple);\n                opacity: 1;\n                transition: opacity var(--transition-time-short) ease;\n            }\n\n            :host(:hover.active),\n            :host(.active) {\n                background: var(--resizer-active-bg, rebeccapurple);\n            }\n        `,\n    ];\n\n    override initialContentCallback() {\n        const prev = this.previousElementSibling! as HTMLElement;\n        const next = this.nextElementSibling! as HTMLElement;\n\n        this.addEventListener(\"mousedown\", (e) => {\n            const mouse_x = e.clientX;\n            const width = next.getBoundingClientRect().width;\n\n            // prevent cursor flashing\n            document.body.style.cursor = \"col-resize\";\n\n            // prevent selection and pointer\n            prev.style.pointerEvents = \"none\";\n            prev.style.userSelect = \"none\";\n            next.style.pointerEvents = \"none\";\n            next.style.userSelect = \"none\";\n\n            next.style.width = `${width}px`;\n            next.style.maxWidth = \"unset\";\n\n            this.classList.add(\"active\");\n\n            // If the element we're resizing is collapsed, un-collapse it.\n            if (next.hasAttribute(\"collapsed\")) {\n                console.log(\"removing collapsed\");\n                next.removeAttribute(\"collapsed\");\n            }\n\n            const mouse_move = (e: MouseEvent) => {\n                const dx = mouse_x - e.clientX;\n                const new_width =\n                    ((width + dx) * 100) /\n                    this.parentElement!.getBoundingClientRect().width;\n                next.style.width = `${new_width}%`;\n            };\n\n            const mouse_move_listener = this.addDisposable(\n                listen(window, \"mousemove\", mouse_move),\n            );\n\n            const mouse_up = (e: MouseEvent) => {\n                document.body.style.cursor = \"\";\n                prev.style.pointerEvents = \"\";\n                prev.style.userSelect = \"\";\n                next.style.pointerEvents = \"\";\n                next.style.userSelect = \"\";\n                this.classList.remove(\"active\");\n                mouse_move_listener.dispose();\n            };\n\n            window.addEventListener(\"mouseup\", mouse_up, { once: true });\n        });\n    }\n}\n\nwindow.customElements.define(\"kc-ui-resizer\", KCUIResizerElement);\n", "/*\n    Copyright (c) 2023 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nimport { css, html } from \"../base/web-components\";\nimport { KCUIElement } from \"./element\";\n\nconst common_styles = css`\n    :host(.grow) {\n        flex-basis: unset;\n        flex-grow: 999;\n    }\n\n    :host(.shrink) {\n        flex-grow: 0;\n        flex-shrink: 1;\n        width: unset;\n    }\n\n    :host:(.fixed) {\n        flex-grow: 0;\n        flex-shrink: 0;\n    }\n`;\n\n/**\n * TODO\n */\nexport class KCUIView extends KCUIElement {\n    static override styles = [\n        ...KCUIElement.styles,\n        common_styles,\n        css`\n            :host {\n                flex-grow: 1;\n                display: flex;\n                overflow: hidden;\n                flex-direction: column;\n                position: relative;\n            }\n        `,\n    ];\n\n    override render(): Element | DocumentFragment {\n        return html`<slot></slot>`;\n    }\n}\n\nwindow.customElements.define(\"kc-ui-view\", KCUIView);\n\n/**\n * TODO\n */\nexport class KCUISplitView extends KCUIElement {\n    static override styles = [\n        ...KCUIElement.styles,\n        common_styles,\n        css`\n            :host {\n                display: flex;\n                height: 100%;\n                overflow: hidden;\n            }\n\n            :host([horizontal]) {\n                flex-direction: column;\n                max-height: 100%;\n            }\n\n            :host([vertical]) {\n                flex-direction: row;\n                max-width: 100%;\n            }\n        `,\n    ];\n\n    override render(): Element | DocumentFragment {\n        return html`<slot></slot>`;\n    }\n}\n\nwindow.customElements.define(\"kc-ui-split-view\", KCUISplitView);\n", "/*\n    Copyright (c) 2023 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nimport { css, html, query } from \"../base/web-components\";\nimport { KCUIElement } from \"./element\";\n\nexport class KCUITextFilterInputElement extends KCUIElement {\n    static override styles = [\n        ...KCUIElement.styles,\n        css`\n            :host {\n                display: flex;\n                align-items: center;\n                align-content: center;\n                position: relative;\n                border-bottom: 1px solid var(--grid-outline);\n            }\n\n            kc-ui-icon.before {\n                pointer-events: none;\n                position: absolute;\n                left: 0;\n                height: 100%;\n                display: flex;\n                align-items: center;\n                justify-content: center;\n                padding-left: 0.25em;\n            }\n\n            input {\n                all: unset;\n                display: block;\n                width: 100%;\n                max-width: 100%;\n                border-radius: 0;\n                padding: 0.4em;\n                padding-left: 1.5em;\n                text-align: left;\n                font: inherit;\n                background: var(--input-bg);\n                color: var(--input-fg);\n            }\n\n            input:placeholder-shown + button {\n                display: none;\n            }\n\n            button {\n                all: unset;\n                box-sizing: border-box;\n                display: flex;\n                align-items: center;\n                color: var(--input-fg);\n                padding: 0.25em;\n            }\n\n            button:hover {\n                cursor: pointer;\n                color: var(--input-accent);\n            }\n        `,\n    ];\n\n    @query(\"input\", true)\n    private input!: HTMLInputElement;\n\n    get value() {\n        return this.input.value;\n    }\n\n    set value(v) {\n        this.input.value = v;\n        this.input.dispatchEvent(\n            new Event(\"input\", { bubbles: true, composed: true }),\n        );\n    }\n\n    @query(\"button\", true)\n    private button: HTMLButtonElement;\n\n    override initialContentCallback(): void | undefined {\n        super.initialContentCallback();\n\n        this.button.addEventListener(\"click\", (e) => {\n            e.preventDefault();\n            e.stopPropagation();\n            this.value = \"\";\n        });\n    }\n\n    override render() {\n        return html`<kc-ui-icon class=\"flex before\">search</kc-ui-icon>\n            <input style=\"\" type=\"text\" placeholder=\"search\" name=\"search\" />\n            <button type=\"button\">\n                <kc-ui-icon>close</kc-ui-icon>\n            </button>`;\n    }\n}\n\nwindow.customElements.define(\n    \"kc-ui-text-filter-input\",\n    KCUITextFilterInputElement,\n);\n", "/*\n    Copyright (c) 2023 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nimport { css, html, attribute } from \"../base/web-components\";\nimport { KCUIDropdownElement } from \"./dropdown\";\nimport { KCUIElement } from \"./element\";\n\n/**\n * A toggle menu combines a button and a dropdown into a single element.\n *\n * This element holds a button and a kc-ui-dropdown, the button is used to\n * toggle the dropdown.\n */\nexport class KCUIToggleMenuElement extends KCUIElement {\n    static override styles = [\n        ...KCUIElement.styles,\n        css`\n            * {\n                box-sizing: border-box;\n            }\n\n            button {\n                all: unset;\n                box-sizing: border-box;\n                user-select: none;\n                width: 100%;\n                max-width: 100%;\n                margin: unset;\n                font: inherit;\n                padding: 0.3em 0.6em 0.3em 0.6em;\n                display: flex;\n                align-items: flex-end;\n                justify-content: left;\n                border: 1px solid transparent;\n                border-radius: 0.25em;\n                font-weight: 300;\n                font-size: 1em;\n                background: var(--dropdown-bg);\n                color: var(--dropdown-fg);\n                transition:\n                    color var(--transition-time-medium, 500) ease,\n                    background var(--transition-time-medium, 500) ease;\n            }\n\n            button:hover {\n                background: var(--dropdown-hover-bg);\n                color: var(--dropdown-hover-fg);\n                box-shadow: none;\n                outline: none;\n            }\n\n            button kc-ui-icon {\n                font-size: 1em;\n                margin-top: 0.1em;\n                margin-bottom: 0.1em;\n            }\n\n            button span {\n                display: none;\n                margin-left: 0.5em;\n            }\n\n            :host([visible]) button {\n                border-bottom-left-radius: 0;\n                border-bottom-right-radius: 0;\n            }\n\n            :host([visible]) button span {\n                display: revert;\n            }\n\n            ::slotted(kc-ui-dropdown) {\n                border-top-left-radius: 0;\n                border-top-right-radius: 0;\n            }\n        `,\n    ];\n\n    @attribute({ type: String })\n    icon: string;\n\n    @attribute({ type: Boolean })\n    visible: boolean;\n\n    get dropdown() {\n        return this.queryAssignedElements<KCUIDropdownElement>(\n            \"dropdown\",\n            \"kc-ui-dropdown\",\n        )[0]!;\n    }\n\n    get button() {\n        return this.renderRoot.querySelector(\"button\")!;\n    }\n\n    override initialContentCallback() {\n        this.button.addEventListener(\"click\", (e) => {\n            this.dropdown.toggle();\n        });\n\n        this.addEventListener(\"kc-ui-dropdown:show\", () => {\n            this.visible = true;\n        });\n\n        this.addEventListener(\"kc-ui-dropdown:hide\", () => {\n            this.visible = false;\n        });\n    }\n\n    override render() {\n        return html`<button name=\"toggle\" type=\"button\" title=\"${this.title}\">\n                <kc-ui-icon>${this.icon ?? \"question-mark\"}</kc-ui-icon>\n                <span>${this.title}</span>\n            </button>\n            <slot name=\"dropdown\"></slot>`;\n    }\n}\n\nwindow.customElements.define(\"kc-ui-toggle-menu\", KCUIToggleMenuElement);\n", "<?xml version=\"1.0\" encoding=\"UTF-8\"?><!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\"><svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs/><symbol id=\"pcb_file\" viewBox=\"0 0 48 48\">\n    <path d=\"M11,44C10.2,44 9.5,43.7 8.9,43.1C8.3,42.5 8,41.8 8,41L8,7C8,6.2 8.3,5.5 8.9,4.9C9.5,4.3 10.2,4 11,4L29.05,4L40,14.95L40,41C40,41.8 39.7,42.5 39.1,43.1C38.5,43.7 37.8,44 37,44L11,44ZM27.55,16.3L27.55,7L11,7L11,41L37,41L37,16.3L27.55,16.3ZM11,7L11,16.3L11,7L11,41L11,7Z\"/>\n    <path d=\"M20.231,37.681C20.231,37.681 20.231,36.001 20.231,36.001L18.007,36.001C17.437,36.001 16.936,35.792 16.509,35.365C16.081,34.937 15.872,34.437 15.872,33.867L15.872,31.643L13.693,31.643L13.693,29.008C13.693,29.008 15.872,29.008 15.872,29.008L15.872,26.63L13.693,26.63L13.693,23.995C13.693,23.995 15.872,23.995 15.872,23.995L15.872,21.771C15.872,21.201 16.081,20.701 16.509,20.273C16.936,19.846 17.437,19.636 18.007,19.636C18.007,19.636 20.231,19.636 20.231,19.636L20.231,17.566L22.865,17.566C22.865,17.566 22.865,19.636 22.865,19.636C22.865,19.636 25.244,19.636 25.244,19.636L25.244,17.566L27.878,17.566C27.878,17.566 27.878,19.636 27.878,19.636L30.102,19.636C30.672,19.636 31.173,19.846 31.6,20.273C32.028,20.701 32.237,21.201 32.237,21.771C32.237,21.771 32.237,23.995 32.237,23.995L34.307,23.995L34.307,26.63C34.307,26.63 32.237,26.63 32.237,26.63C32.237,26.63 32.237,29.008 32.237,29.008L34.307,29.008L34.307,31.643C34.307,31.643 32.237,31.643 32.237,31.643L32.237,33.867C32.237,34.437 32.028,34.937 31.6,35.365C31.173,35.792 30.672,36.001 30.102,36.001L27.878,36.001L27.878,38.181L25.244,38.181C25.244,38.181 25.244,36.001 25.244,36.001L22.865,36.001L22.865,38.181L20.231,38.181L20.231,37.681ZM29.602,33.367L29.602,22.271L18.507,22.271L18.507,33.367L29.602,33.367ZM20.694,24.595L27.279,24.595L27.279,31.179L20.694,31.179L20.694,24.595ZM23.329,28.545C23.329,28.545 24.644,28.545 24.644,28.545C24.644,28.545 24.644,27.229 24.644,27.229C24.644,27.229 23.329,27.229 23.329,27.229L23.329,28.545Z\"/>\n</symbol><symbol id=\"schematic_file\" viewBox=\"0 0 48 48\">\n    <path d=\"M11,44C10.2,44 9.5,43.7 8.9,43.1C8.3,42.5 8,41.8 8,41L8,7C8,6.2 8.3,5.5 8.9,4.9C9.5,4.3 10.2,4 11,4L29.05,4L40,14.95L40,41C40,41.8 39.7,42.5 39.1,43.1C38.5,43.7 37.8,44 37,44L11,44ZM27.55,16.3L27.55,7L11,7L11,41L37,41L37,16.3L27.55,16.3ZM11,7L11,16.3L11,7L11,41L11,7Z\"/>\n    <path d=\"M18.256,26.367L15.377,26.367L15.377,23.367L18.256,23.367L18.256,23.184C18.256,22.155 18.784,21.198 19.654,20.648C20.524,20.098 21.615,20.033 22.544,20.475L24.69,21.494L24.69,19.353L27.69,19.353L27.69,22.92L32.411,25.164C33.457,25.661 34.123,26.715 34.123,27.873C34.123,29.031 33.457,30.086 32.411,30.583L27.69,32.827L27.69,36.394L24.69,36.394L24.69,34.252L22.544,35.272C21.615,35.714 20.524,35.648 19.654,35.099C18.784,34.549 18.256,33.592 18.256,32.563L18.256,32.38L15.377,32.38L15.377,29.38L18.256,29.38L18.256,26.367ZM21.256,32.563L31.123,27.873L21.256,23.184L21.256,32.563Z\"/>\n</symbol><symbol id=\"zoom_footprint\" viewBox=\"0 0 48 48\">\n    <g>\n        <path d=\"M33,38.5C34.567,38.5 35.875,37.975 36.925,36.925C37.975,35.875 38.5,34.567 38.5,33C38.5,31.433 37.975,30.125 36.925,29.075C35.875,28.025 34.567,27.5 33,27.5C31.433,27.5 30.125,28.025 29.075,29.075C28.025,30.125 27.5,31.433 27.5,33C27.5,34.567 28.025,35.875 29.075,36.925C30.125,37.975 31.433,38.5 33,38.5ZM43.2,45.3L37.842,39.95C37.147,40.417 36.392,40.792 35.575,41.075C34.758,41.358 33.9,41.5 33,41.5C30.639,41.5 28.632,40.673 26.979,39.019C25.326,37.365 24.5,35.357 24.5,32.994C24.5,30.631 25.327,28.625 26.981,26.975C28.635,25.325 30.643,24.5 33.006,24.5C35.369,24.5 37.375,25.326 39.025,26.979C40.675,28.632 41.5,30.639 41.5,33C41.5,33.9 41.358,34.758 41.075,35.575C40.792,36.392 40.417,37.147 39.95,37.842L45.3,43.2L43.2,45.3Z\"/>\n        <path d=\"M22.597,38L21,38L21,42L18,42L18,38L13,38C12.2,38 11.5,37.7 10.9,37.1C10.3,36.5 10,35.8 10,35L10,30L6,30L6,27L10,27L10,20.8L6,20.8L6,17.8L10,17.8L10,12.8C10,12 10.3,11.3 10.9,10.7C11.5,10.1 12.2,9.8 13,9.8L18,9.8L18,6L21,6L21,9.8L27.2,9.8L27.2,6L30.2,6L30.2,9.8L35.2,9.8C36,9.8 36.7,10.1 37.3,10.7C37.9,11.3 38.2,12 38.2,12.8L38.2,17.8L42,17.8L42,20.8L38.2,20.8L38.2,22.691C37.262,22.214 36.262,21.88 35.2,21.69L35.2,12.8L13,12.8L13,35L21.657,35C21.83,36.06 22.143,37.06 22.597,38ZM22.119,29.15L18.85,29.15L18.85,18.9L29.1,18.9L29.1,22.139C28.029,22.515 27.029,23.058 26.1,23.767L26.1,21.9L21.85,21.9L21.85,26.15L23.727,26.15C23.025,27.079 22.489,28.079 22.119,29.15Z\"/>\n    </g>\n</symbol><symbol id=\"zoom_page\" viewBox=\"0 0 48 48\">\n    <g>\n        <path d=\"M9,41L24.75,41C25.417,41.7 26.158,42.3 26.975,42.8C27.792,43.3 28.683,43.7 29.65,44L9,44C8.2,44 7.5,43.7 6.9,43.1C6.3,42.5 6,41.8 6,41L6.02,9.006C6.02,8.206 6.32,7.506 6.92,6.906C7.52,6.306 8.22,6.006 9.02,6.006L27.07,6.006L38,14.95L38,22.65C37.533,22.417 37.05,22.217 36.55,22.05C36.05,21.883 35.533,21.75 35,21.65L35,16.3L25.55,16.3L25.57,9.006L9.02,9.006L9,16.3L9,41Z\"/>\n        <path d=\"M43.2,45.3L37.842,39.95C37.147,40.417 36.392,40.792 35.575,41.075C34.758,41.358 33.9,41.5 33,41.5C30.639,41.5 28.632,40.673 26.979,39.019C25.326,37.365 24.5,35.357 24.5,32.994C24.5,30.631 25.327,28.625 26.981,26.975C28.635,25.325 30.643,24.5 33.006,24.5C35.369,24.5 37.375,25.326 39.025,26.979C40.675,28.632 41.5,30.639 41.5,33C41.5,33.9 41.358,34.758 41.075,35.575C40.792,36.392 40.417,37.147 39.95,37.842L45.3,43.2L43.2,45.3ZM33,38.5C34.567,38.5 35.875,37.975 36.925,36.925C37.975,35.875 38.5,34.567 38.5,33C38.5,31.433 37.975,30.125 36.925,29.075C35.875,28.025 34.567,27.5 33,27.5C31.433,27.5 30.125,28.025 29.075,29.075C28.025,30.125 27.5,31.433 27.5,33C27.5,34.567 28.025,35.875 29.075,36.925C30.125,37.975 31.433,38.5 33,38.5Z\"/>\n    </g>\n</symbol></svg>", "/*\n    Copyright (c) 2023 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nimport sprites_src from \"./sprites.svg\";\n\nexport const sprites_url = URL.createObjectURL(\n    new Blob([sprites_src], { type: \"image/svg+xml\" }),\n);\n", "/*\n    Copyright (c) 2022 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nexport function first<T>(iterable: Iterable<T>): T | undefined {\n    return iterable[Symbol.iterator]().next().value;\n}\n\nexport type MapCallbackFn<T, U> = (value: T, index: number) => U;\n\nexport function* map<T, U>(\n    iterable: Iterable<T>,\n    callback: MapCallbackFn<T, U>,\n): Generator<U, any, undefined> {\n    let n = 0;\n    for (const i of iterable) {\n        yield callback(i, n);\n        n++;\n    }\n}\n\nexport function isEmpty(iterable: Iterable<unknown>) {\n    for (const _ of iterable) {\n        return false;\n    }\n    return true;\n}\n\nexport function length(iterable: Iterable<unknown>) {\n    let n = 0;\n    for (const _ of iterable) {\n        n++;\n    }\n    return n;\n}\n", "/*\n    Copyright (c) 2023 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nexport enum LogLevel {\n    ERROR,\n    INFO,\n    DEBUG,\n}\n\nexport class Logger {\n    constructor(\n        public readonly name: string,\n        public level: LogLevel = LogLevel.INFO,\n    ) {}\n\n    #log(method: CallableFunction, ...args: any[]) {\n        method(\n            `%c${this.name}:%c`,\n            `color: ButtonText`,\n            `color: inherit`,\n            ...args,\n        );\n    }\n\n    public debug(...args: any[]) {\n        if (this.level >= LogLevel.DEBUG) {\n            this.#log(console.debug, ...args);\n        }\n    }\n\n    public info(...args: any[]) {\n        if (this.level >= LogLevel.INFO) {\n            this.#log(console.info.bind(window.console), ...args);\n        }\n    }\n\n    public warn(...args: any[]) {\n        if (this.level >= LogLevel.ERROR) {\n            this.#log(console.warn, ...args);\n        }\n    }\n\n    public error(...args: any[]) {\n        if (this.level >= LogLevel.ERROR) {\n            this.#log(console.error, ...args);\n        }\n    }\n}\n\nconst default_logger = new Logger(\"kicanvas\");\n\nexport function debug(...args: any[]) {\n    default_logger.debug(...args);\n}\n\nexport function info(...args: any[]) {\n    default_logger.info(...args);\n}\n\nexport function warn(...args: any[]) {\n    default_logger.warn(...args);\n}\n\nexport function error(...args: any[]) {\n    default_logger.error(...args);\n}\n", "/*\n    Copyright (c) 2022 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nimport { Vec2 } from \"./vec2\";\nimport { Angle, type AngleLike } from \"./angle\";\n\ntype ElementArray = [\n    number,\n    number,\n    number,\n    number,\n    number,\n    number,\n    number,\n    number,\n    number,\n];\n\n/**\n * A 3x3 transformation matrix\n */\nexport class Matrix3 {\n    elements: Float32Array;\n\n    /**\n     * Create a new Matrix\n     * @param elements the 9 matrix elements\n     */\n    constructor(elements: ElementArray | Float32Array) {\n        if (elements.length != 9) {\n            throw new Error(`Matrix3 requires 9 elements, got ${elements}`);\n        }\n        this.elements = new Float32Array(elements);\n    }\n\n    /**\n     * Create a Matrix3 from a DOMMatrix\n     */\n    static from_DOMMatrix(m: DOMMatrix): Matrix3 {\n        // prettier-ignore\n        return new Matrix3([\n            m.m11, m.m12, m.m14,\n            m.m21, m.m22, m.m24,\n            m.m41, m.m42, m.m44,\n        ]);\n    }\n\n    /**\n     * Create a DOMMatrix from this Matrix3\n     */\n    to_DOMMatrix(): DOMMatrix {\n        const e = this.elements;\n        // prettier-ignore\n        return new DOMMatrix([\n            e[0]!, e[3]!,\n            e[1]!, e[4]!,\n            e[6]!, e[7]!,\n        ]);\n    }\n\n    /**\n     * Create a 4x4 DOMMatrix from this Matrix3\n     */\n    to_4x4_DOMMatrix(): DOMMatrix {\n        const e = this.elements;\n        // prettier-ignore\n        return new DOMMatrix([\n            e[0]!, e[1]!, 0, e[2]!,\n            e[3]!, e[4]!, 0, e[5]!,\n            0, 0, 1, 0,\n            e[6]!, e[7]!, 0, 1\n        ]);\n    }\n\n    /**\n     * @returns a new identity matrix\n     */\n    static identity(): Matrix3 {\n        // prettier-ignore\n        return new Matrix3([\n            1, 0, 0,\n            0, 1, 0,\n            0, 0, 1,\n        ]);\n    }\n\n    /**\n     * @returns a new matrix representing a 2d orthographic projection\n     */\n    static orthographic(width: number, height: number): Matrix3 {\n        // prettier-ignore\n        return new Matrix3([\n            2 / width, 0, 0,\n            0, -2 / height, 0,\n            -1, 1, 1\n        ]);\n    }\n\n    /**\n     * @returns a copy of this matrix\n     */\n    copy() {\n        return new Matrix3(this.elements);\n    }\n\n    /**\n     * Update this matrix's elements\n     */\n    set(elements: Float32Array | ElementArray) {\n        if (elements.length != 9) {\n            throw new Error(`Matrix3 requires 9 elements, got ${elements}`);\n        }\n        this.elements.set(elements);\n    }\n\n    /**\n     * Transform a vector by multiplying it with this matrix.\n     * @returns A new Vec2\n     */\n    transform(vec: Vec2): Vec2 {\n        const x1 = this.elements[0 * 3 + 0]!;\n        const x2 = this.elements[0 * 3 + 1]!;\n        const y1 = this.elements[1 * 3 + 0]!;\n        const y2 = this.elements[1 * 3 + 1]!;\n        const z1 = this.elements[2 * 3 + 0]!;\n        const z2 = this.elements[2 * 3 + 1]!;\n        const px = vec.x;\n        const py = vec.y;\n\n        const x = px * x1 + py * y1 + z1;\n        const y = px * x2 + py * y2 + z2;\n\n        return new Vec2(x, y);\n    }\n\n    /**\n     * Transforms a list of vectors\n     * @yields new transformed vectors\n     */\n    *transform_all(vecs: Iterable<Vec2>) {\n        for (const vec of vecs) {\n            yield this.transform(vec);\n        }\n    }\n\n    /**\n     * Transforms a list of vector by a given matrix, which may be null.\n     */\n    static transform_all(mat: Matrix3 | null, vecs: Vec2[]): Vec2[] {\n        if (!mat) {\n            return vecs;\n        }\n        return Array.from(mat.transform_all(vecs));\n    }\n\n    /**\n     * Multiply this matrix by another and store the result\n     * in this matrix.\n     * @returns this matrix\n     */\n    multiply_self(b: Matrix3) {\n        const a00 = this.elements[0 * 3 + 0]!;\n        const a01 = this.elements[0 * 3 + 1]!;\n        const a02 = this.elements[0 * 3 + 2]!;\n        const a10 = this.elements[1 * 3 + 0]!;\n        const a11 = this.elements[1 * 3 + 1]!;\n        const a12 = this.elements[1 * 3 + 2]!;\n        const a20 = this.elements[2 * 3 + 0]!;\n        const a21 = this.elements[2 * 3 + 1]!;\n        const a22 = this.elements[2 * 3 + 2]!;\n        const b00 = b.elements[0 * 3 + 0]!;\n        const b01 = b.elements[0 * 3 + 1]!;\n        const b02 = b.elements[0 * 3 + 2]!;\n        const b10 = b.elements[1 * 3 + 0]!;\n        const b11 = b.elements[1 * 3 + 1]!;\n        const b12 = b.elements[1 * 3 + 2]!;\n        const b20 = b.elements[2 * 3 + 0]!;\n        const b21 = b.elements[2 * 3 + 1]!;\n        const b22 = b.elements[2 * 3 + 2]!;\n\n        this.elements[0] = b00 * a00 + b01 * a10 + b02 * a20;\n        this.elements[1] = b00 * a01 + b01 * a11 + b02 * a21;\n        this.elements[2] = b00 * a02 + b01 * a12 + b02 * a22;\n        this.elements[3] = b10 * a00 + b11 * a10 + b12 * a20;\n        this.elements[4] = b10 * a01 + b11 * a11 + b12 * a21;\n        this.elements[5] = b10 * a02 + b11 * a12 + b12 * a22;\n        this.elements[6] = b20 * a00 + b21 * a10 + b22 * a20;\n        this.elements[7] = b20 * a01 + b21 * a11 + b22 * a21;\n        this.elements[8] = b20 * a02 + b21 * a12 + b22 * a22;\n\n        return this;\n    }\n\n    /**\n     * Create a new matrix by multiplying this matrix with another\n     * @returns a new matrix\n     */\n    multiply(b: Matrix3) {\n        return this.copy().multiply_self(b);\n    }\n\n    /**\n     * @returns A new matrix that is the inverse of this matrix\n     */\n    inverse(): Matrix3 {\n        const a00 = this.elements[0 * 3 + 0]!;\n        const a01 = this.elements[0 * 3 + 1]!;\n        const a02 = this.elements[0 * 3 + 2]!;\n        const a10 = this.elements[1 * 3 + 0]!;\n        const a11 = this.elements[1 * 3 + 1]!;\n        const a12 = this.elements[1 * 3 + 2]!;\n        const a20 = this.elements[2 * 3 + 0]!;\n        const a21 = this.elements[2 * 3 + 1]!;\n        const a22 = this.elements[2 * 3 + 2]!;\n\n        const b01 = a22 * a11 - a12 * a21;\n        const b11 = -a22 * a10 + a12 * a20;\n        const b21 = a21 * a10 - a11 * a20;\n\n        const det = a00 * b01 + a01 * b11 + a02 * b21;\n        const inv_det = 1.0 / det;\n\n        return new Matrix3([\n            b01 * inv_det,\n            (-a22 * a01 + a02 * a21) * inv_det,\n            (a12 * a01 - a02 * a11) * inv_det,\n            b11 * inv_det,\n            (a22 * a00 - a02 * a20) * inv_det,\n            (-a12 * a00 + a02 * a10) * inv_det,\n            b21 * inv_det,\n            (-a21 * a00 + a01 * a20) * inv_det,\n            (a11 * a00 - a01 * a10) * inv_det,\n        ]);\n    }\n\n    /**\n     * @returns A new matrix representing a 2d translation\n     */\n    static translation(x: number, y: number): Matrix3 {\n        // prettier-ignore\n        return new Matrix3([\n            1, 0, 0,\n            0, 1, 0,\n            x, y, 1,\n        ]);\n    }\n\n    /**\n     * Translate this matrix by the given amounts\n     * @returns this matrix\n     */\n    translate_self(x: number, y: number) {\n        return this.multiply_self(Matrix3.translation(x, y));\n    }\n\n    /**\n     * Creates a new matrix representing this matrix translated by the given amount\n     * @returns a new matrix\n     */\n    translate(x: number, y: number): Matrix3 {\n        return this.copy().translate_self(x, y);\n    }\n\n    /**\n     * @returns {Matrix3} A new matrix representing a 2d scale\n     */\n    static scaling(x: number, y: number): Matrix3 {\n        // prettier-ignore\n        return new Matrix3([\n            x, 0, 0,\n            0, y, 0,\n            0, 0, 1,\n        ]);\n    }\n\n    /**\n     * Scale this matrix by the given amounts\n     * @returns this matrix\n     */\n    scale_self(x: number, y: number) {\n        return this.multiply_self(Matrix3.scaling(x, y));\n    }\n\n    /**\n     * Creates a new matrix representing this matrix scaled by the given amount\n     * @returns a new matrix\n     */\n    scale(x: number, y: number): Matrix3 {\n        return this.copy().scale_self(x, y);\n    }\n\n    /**\n     * @returns A new matrix representing a 2d rotation\n     */\n    static rotation(angle: AngleLike): Matrix3 {\n        const theta = new Angle(angle).radians;\n        const cos = Math.cos(theta);\n        const sin = Math.sin(theta);\n        // prettier-ignore\n        return new Matrix3([\n            cos, -sin, 0,\n            sin, cos, 0,\n            0, 0, 1\n        ]);\n    }\n\n    /**\n     * Rotate this matrix by the given angle\n     * @returns this matrix\n     */\n    rotate_self(angle: AngleLike) {\n        return this.multiply_self(Matrix3.rotation(angle));\n    }\n\n    /**\n     * Creates a new matrix representing this matrix rotated by the given angle\n     * @returns a new matrix\n     */\n    rotate(angle: AngleLike) {\n        return this.copy().rotate_self(angle);\n    }\n\n    /**\n     * Returns the total translation (relative to identity) applied via this matrix.\n     */\n    get absolute_translation() {\n        return this.transform(new Vec2(0, 0));\n    }\n\n    /**\n     * Retruns the total rotation (relative to identity) applied via this matrix.\n     */\n    get absolute_rotation() {\n        const p0 = this.transform(new Vec2(0, 0));\n        const p1 = this.transform(new Vec2(1, 0));\n        const pn = p1.sub(p0);\n        return pn.angle.normalize();\n    }\n}\n", "/*\n    Copyright (c) 2022 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nimport { is_number } from \"../types\";\nimport { Angle, type AngleLike } from \"./angle\";\nimport { Matrix3 } from \"./matrix3\";\n\nexport type Vec2Like =\n    | Vec2\n    | { x: number; y: number }\n    | [number, number]\n    | number;\n\n/**\n * A 2-dimensional point vector\n *\n * All operations except for set() return new vectors and do not modify the existing vector\n */\nexport class Vec2 {\n    x: number;\n    y: number;\n\n    /**\n     * Create a Vec2\n     */\n    constructor(x: Vec2Like = 0, y?: number) {\n        this.set(x, y);\n    }\n\n    /**\n     * Copy this vector\n     */\n    copy() {\n        return new Vec2(...this);\n    }\n\n    /**\n     * Update this vector's values\n     */\n    set(x: Vec2Like, y?: number) {\n        let x_prime: number | null = null;\n\n        if (is_number(x) && is_number(y)) {\n            x_prime = x;\n        } else if (x instanceof Vec2) {\n            x_prime = x.x;\n            y = x.y;\n        } else if (x instanceof Array) {\n            x_prime = x[0];\n            y = x[1];\n        } else if (x instanceof Object && Object.hasOwn(x, \"x\")) {\n            x_prime = x.x;\n            y = x.y;\n        } else if (x == 0 && y == undefined) {\n            x_prime = 0;\n            y = 0;\n        }\n\n        if (x_prime == null || y == undefined) {\n            throw new Error(`Invalid parameters x: ${x}, y: ${y}.`);\n        }\n\n        this.x = x_prime;\n        this.y = y;\n    }\n\n    /** Iterate through [x, y] */\n    *[Symbol.iterator]() {\n        yield this.x;\n        yield this.y;\n    }\n\n    get magnitude(): number {\n        return Math.sqrt(this.x ** 2 + this.y ** 2);\n    }\n\n    get squared_magnitude(): number {\n        return this.x ** 2 + this.y ** 2;\n    }\n\n    /**\n     * @returns the perpendicular normal of this vector\n     */\n    get normal(): Vec2 {\n        return new Vec2(-this.y, this.x);\n    }\n\n    /**\n     * @returns the direction (angle) of this vector\n     */\n    get angle(): Angle {\n        return new Angle(Math.atan2(this.y, this.x));\n    }\n\n    /**\n     * KiCAD has to be weird about this, ofc.\n     */\n    get kicad_angle(): Angle {\n        // See explicit EDA_ANGLE( const VECTOR2D& aVector )\n        if (this.x == 0 && this.y == 0) {\n            return new Angle(0);\n        } else if (this.y == 0) {\n            if (this.x >= 0) {\n                return new Angle(0);\n            } else {\n                return Angle.from_degrees(-180);\n            }\n        } else if (this.x == 0) {\n            if (this.y >= 0) {\n                return Angle.from_degrees(90);\n            } else {\n                return Angle.from_degrees(-90);\n            }\n        } else if (this.x == this.y) {\n            if (this.x >= 0) {\n                return Angle.from_degrees(45);\n            } else {\n                return Angle.from_degrees(-135);\n            }\n        } else if (this.x == -this.y) {\n            if (this.x >= 0) {\n                return Angle.from_degrees(-45);\n            } else {\n                return Angle.from_degrees(135);\n            }\n        } else {\n            return this.angle;\n        }\n    }\n\n    /**\n     * @returns A new unit vector in the same direction as this vector\n     */\n    normalize(): Vec2 {\n        if (this.x == 0 && this.y == 0) {\n            return new Vec2(0, 0);\n        }\n        const l = this.magnitude;\n        const x = (this.x /= l);\n        const y = (this.y /= l);\n        return new Vec2(x, y);\n    }\n\n    equals(b?: Vec2) {\n        return this.x == b?.x && this.y == b?.y;\n    }\n\n    add(b: Vec2) {\n        return new Vec2(this.x + b.x, this.y + b.y);\n    }\n\n    sub(b: Vec2) {\n        return new Vec2(this.x - b.x, this.y - b.y);\n    }\n\n    scale(b: Vec2) {\n        return new Vec2(this.x * b.x, this.y * b.y);\n    }\n\n    rotate(angle: AngleLike) {\n        const m = Matrix3.rotation(angle);\n        return m.transform(this);\n    }\n\n    multiply(s: Vec2 | number) {\n        if (is_number(s)) {\n            return new Vec2(this.x * s, this.y * s);\n        } else {\n            return new Vec2(this.x * s.x, this.y * s.y);\n        }\n    }\n\n    resize(len: number) {\n        return this.normalize().multiply(len);\n    }\n\n    cross(b: Vec2) {\n        return this.x * b.y - this.y * b.x;\n    }\n\n    static segment_intersect(a1: Vec2, b1: Vec2, a2: Vec2, b2: Vec2) {\n        const ray_1 = b1.sub(a1);\n        const ray_2 = b2.sub(a2);\n        const delta = a2.sub(a1);\n\n        const d = ray_2.cross(ray_1);\n        const t1 = ray_2.cross(delta);\n        const t2 = ray_1.cross(delta);\n\n        if (d == 0) {\n            return null;\n        }\n\n        if (d > 0 && (t2 < 0 || t2 > d || t1 < 0 || t1 > d)) {\n            return null;\n        }\n\n        if (d < 0 && (t2 < d || t1 < d || t1 > 0 || t2 > 0)) {\n            return null;\n        }\n\n        return new Vec2(a2.x + (t2 / d) * ray_2.x, a2.y + (t2 / d) * ray_2.y);\n    }\n}\n", "/*\n    Copyright (c) 2022 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nimport { Vec2 } from \"./vec2\";\n\nexport type AngleLike = Angle | number;\n\n/**\n * An angle for rotation and orientation\n */\nexport class Angle {\n    #theta_rad: number;\n    #theta_deg: number;\n\n    /**\n     * Convert radians to degrees\n     */\n    static rad_to_deg(radians: number) {\n        return (radians / Math.PI) * 180;\n    }\n\n    /**\n     * Convert degrees to radians\n     */\n    static deg_to_rad(degrees: number) {\n        return (degrees / 180) * Math.PI;\n    }\n\n    /** Round degrees to two decimal places\n     *\n     * A lot of math involving angles is done with degrees to two decimal places\n     * instead of radians to match KiCAD's behavior and to avoid floating point\n     * nonsense.\n     */\n    static round(degrees: number): number {\n        return Math.round((degrees + Number.EPSILON) * 100) / 100;\n    }\n\n    /**\n     * Create an Angle\n     */\n    constructor(radians: AngleLike) {\n        if (radians instanceof Angle) {\n            return radians;\n        }\n        this.radians = radians;\n    }\n\n    copy() {\n        return new Angle(this.radians);\n    }\n\n    get radians() {\n        return this.#theta_rad;\n    }\n\n    set radians(v) {\n        this.#theta_rad = v;\n        this.#theta_deg = Angle.round(Angle.rad_to_deg(v));\n    }\n\n    get degrees() {\n        return this.#theta_deg;\n    }\n\n    set degrees(v) {\n        this.#theta_deg = v;\n        this.#theta_rad = Angle.deg_to_rad(v);\n    }\n\n    static from_degrees(v: number) {\n        return new Angle(Angle.deg_to_rad(v));\n    }\n\n    /**\n     * Returns a new Angle representing the sum of this angle and the given angle.\n     */\n    add(other: AngleLike) {\n        const sum = this.radians + new Angle(other).radians;\n        return new Angle(sum);\n    }\n\n    /**\n     * Returns a new Angle representing the different of this angle and the given angle.\n     */\n    sub(other: AngleLike) {\n        const diff = this.radians - new Angle(other).radians;\n        return new Angle(diff);\n    }\n\n    /**\n     * @returns a new Angle constrained to 0 to 360 degrees.\n     */\n    normalize() {\n        let deg = Angle.round(this.degrees);\n\n        while (deg < 0) {\n            deg += 360;\n        }\n        while (deg >= 360) {\n            deg -= 360;\n        }\n\n        return Angle.from_degrees(deg);\n    }\n\n    /**\n     * @returns a new Angle constrained to -180 to 180 degrees.\n     */\n    normalize180() {\n        let deg = Angle.round(this.degrees);\n\n        while (deg <= -180) {\n            deg += 360;\n        }\n        while (deg > 180) {\n            deg -= 360;\n        }\n\n        return Angle.from_degrees(deg);\n    }\n\n    /**\n     * @returns a new Angle constrained to -360 to +360 degrees.\n     */\n    normalize720() {\n        let deg = Angle.round(this.degrees);\n\n        while (deg < -360) {\n            deg += 360;\n        }\n        while (deg >= 360) {\n            deg -= 360;\n        }\n\n        return Angle.from_degrees(deg);\n    }\n\n    /**\n     * @returns a new Angle that's reflected in the other direction, for\n     * example, 90 degrees ends up being -90 or 270 degrees (when normalized).\n     */\n    negative(): Angle {\n        return new Angle(-this.radians);\n    }\n\n    get is_vertical() {\n        return this.degrees == 90 || this.degrees == 270;\n    }\n\n    get is_horizontal() {\n        return this.degrees == 0 || this.degrees == 180;\n    }\n\n    rotate_point(point: Vec2, origin: Vec2 = new Vec2(0, 0)): Vec2 {\n        let x = point.x - origin.x;\n        let y = point.y - origin.y;\n\n        const angle = this.normalize();\n\n        // shortcuts for 0, 90, 180, and 270\n        if (angle.degrees == 0) {\n            // do nothing\n        } else if (angle.degrees == 90) {\n            [x, y] = [y, -x];\n        } else if (angle.degrees == 180) {\n            [x, y] = [-x, -y];\n        } else if (angle.degrees == 270) {\n            [x, y] = [-y, x];\n        }\n        // no shortcut, do the actual math.\n        else {\n            const sina = Math.sin(angle.radians);\n            const cosa = Math.cos(angle.radians);\n            const [x0, y0] = [x, y];\n\n            x = y0 * sina + x0 * cosa;\n            y = y0 * cosa - x0 * sina;\n        }\n\n        x += origin.x;\n        y += origin.y;\n\n        return new Vec2(x, y);\n    }\n}\n", "/*\n    Copyright (c) 2022 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nimport { Matrix3 } from \"./matrix3\";\nimport { Vec2 } from \"./vec2\";\n\n/**\n * An axis-alignment bounding box (AABB)\n */\nexport class BBox {\n    /**\n     * Create a bounding box\n     */\n    constructor(\n        public x: number = 0,\n        public y: number = 0,\n        public w: number = 0,\n        public h: number = 0,\n        public context?: any,\n    ) {\n        if (this.w < 0) {\n            this.w *= -1;\n            this.x -= this.w;\n        }\n        if (this.h < 0) {\n            this.h *= -1;\n            this.y -= this.h;\n        }\n    }\n\n    copy() {\n        return new BBox(this.x, this.y, this.w, this.h, this.context);\n    }\n\n    /**\n     * Create a BBox given the top left and bottom right corners\n     */\n    static from_corners(\n        x1: number,\n        y1: number,\n        x2: number,\n        y2: number,\n        context?: any,\n    ) {\n        if (x2 < x1) {\n            [x1, x2] = [x2, x1];\n        }\n        if (y2 < y1) {\n            [y1, y2] = [y2, y1];\n        }\n\n        return new BBox(x1, y1, x2 - x1, y2 - y1, context);\n    }\n\n    /**\n     * Create a BBox that contains all the given points\n     */\n    static from_points(points: Vec2[], context?: any) {\n        if (points.length == 0) {\n            return new BBox(0, 0, 0, 0);\n        }\n\n        const first_pt = points[0]!;\n        const start = first_pt.copy();\n        const end = first_pt.copy();\n\n        for (const p of points) {\n            start.x = Math.min(start.x, p.x);\n            start.y = Math.min(start.y, p.y);\n            end.x = Math.max(end.x, p.x);\n            end.y = Math.max(end.y, p.y);\n        }\n\n        return BBox.from_corners(start.x, start.y, end.x, end.y, context);\n    }\n\n    /**\n     * Combine two or more BBoxes into a new BBox that contains both\n     */\n    static combine(boxes: Iterable<BBox>, context?: any) {\n        let min_x = Number.POSITIVE_INFINITY;\n        let min_y = Number.POSITIVE_INFINITY;\n        let max_x = Number.NEGATIVE_INFINITY;\n        let max_y = Number.NEGATIVE_INFINITY;\n\n        for (const box of boxes) {\n            if (!box.valid) {\n                continue;\n            }\n\n            min_x = Math.min(min_x, box.x);\n            min_y = Math.min(min_y, box.y);\n            max_x = Math.max(max_x, box.x2);\n            max_y = Math.max(max_y, box.y2);\n        }\n\n        if (\n            min_x == Number.POSITIVE_INFINITY ||\n            min_y == Number.POSITIVE_INFINITY ||\n            max_x == Number.NEGATIVE_INFINITY ||\n            max_y == Number.NEGATIVE_INFINITY\n        ) {\n            return new BBox(0, 0, 0, 0, context);\n        }\n\n        return BBox.from_corners(min_x, min_y, max_x, max_y, context);\n    }\n\n    /**\n     * @returns true if the bbox has a non-zero area\n     */\n    get valid() {\n        return (\n            (this.w !== 0 || this.h !== 0) &&\n            this.w !== undefined &&\n            this.h !== undefined\n        );\n    }\n\n    get start() {\n        return new Vec2(this.x, this.y);\n    }\n\n    set start(v: Vec2) {\n        this.x = v.x;\n        this.y = v.y;\n    }\n\n    get end() {\n        return new Vec2(this.x + this.w, this.y + this.h);\n    }\n\n    set end(v: Vec2) {\n        this.x2 = v.x;\n        this.y2 = v.y;\n    }\n\n    get top_left() {\n        return this.start;\n    }\n\n    get top_right() {\n        return new Vec2(this.x + this.w, this.y);\n    }\n\n    get bottom_left() {\n        return new Vec2(this.x, this.y + this.h);\n    }\n\n    get bottom_right() {\n        return this.end;\n    }\n\n    get x2() {\n        return this.x + this.w;\n    }\n\n    set x2(v: number) {\n        this.w = v - this.x;\n        if (this.w < 0) {\n            this.w *= -1;\n            this.x -= this.w;\n        }\n    }\n\n    get y2() {\n        return this.y + this.h;\n    }\n\n    set y2(v: number) {\n        this.h = v - this.y;\n        if (this.h < 0) {\n            this.h *= -1;\n            this.y -= this.h;\n        }\n    }\n\n    get center() {\n        return new Vec2(this.x + this.w / 2, this.y + this.h / 2);\n    }\n\n    /**\n     * @returns A new BBox transformed by the given matrix.\n     */\n    transform(mat: Matrix3) {\n        const start = mat.transform(this.start);\n        const end = mat.transform(this.end);\n        return BBox.from_corners(start.x, start.y, end.x, end.y, this.context);\n    }\n\n    /**\n     * @returns A new BBox with the size uniformly modified from the center\n     */\n    grow(dx: number, dy?: number) {\n        dy ??= dx;\n        return new BBox(\n            this.x - dx,\n            this.y - dy,\n            this.w + dx * 2,\n            this.h + dy * 2,\n            this.context,\n        );\n    }\n\n    scale(s: number) {\n        return BBox.from_points(\n            [this.start.multiply(s), this.end.multiply(s)],\n            this.context,\n        );\n    }\n\n    /**\n     * @returns a BBox flipped around the X axis (mirrored Y)\n     */\n    mirror_vertical() {\n        return new BBox(this.x, -this.y, this.w, -this.h);\n    }\n\n    /** returns true if this box contains the other */\n    contains(other: BBox) {\n        return (\n            this.contains_point(other.start) && this.contains_point(other.end)\n        );\n    }\n\n    /**\n     * @returns true if the point is within the bounding box.\n     */\n    contains_point(v: Vec2) {\n        return (\n            v.x >= this.x && v.x <= this.x2 && v.y >= this.y && v.y <= this.y2\n        );\n    }\n\n    /**\n     * @returns A new Vec2 constrained within this bounding box\n     */\n    constrain_point(v: Vec2): Vec2 {\n        const x = Math.min(Math.max(v.x, this.x), this.x2);\n        const y = Math.min(Math.max(v.y, this.y), this.y2);\n        return new Vec2(x, y);\n    }\n\n    intersect_segment(a: Vec2, b: Vec2) {\n        if (this.contains_point(a)) {\n            return null;\n        }\n\n        const left: [Vec2, Vec2] = [this.top_left, this.bottom_left];\n        const right: [Vec2, Vec2] = [this.top_right, this.bottom_right];\n        const top: [Vec2, Vec2] = [this.top_left, this.top_right];\n        const bottom: [Vec2, Vec2] = [this.bottom_left, this.bottom_right];\n\n        const start = a;\n        const end = b;\n\n        for (const seg of [left, right, top, bottom]) {\n            const intersection = Vec2.segment_intersect(a, b, ...seg);\n\n            if (!intersection) {\n                continue;\n            }\n\n            if (\n                intersection.sub(start).squared_magnitude <\n                end.sub(start).squared_magnitude\n            ) {\n                end.set(intersection);\n            }\n        }\n\n        if (start.equals(end)) {\n            return null;\n        }\n\n        return end;\n    }\n}\n", "/*\n    Copyright (c) 2022 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nimport { Angle } from \"./angle\";\nimport { BBox } from \"./bbox\";\nimport { Vec2 } from \"./vec2\";\n\n/**\n * A circular arc\n */\nexport class Arc {\n    /**\n     * Create a new Arc\n     */\n    constructor(\n        public center: Vec2,\n        public radius: number,\n        public start_angle: Angle,\n        public end_angle: Angle,\n        public width: number,\n    ) {}\n\n    /**\n     * Create an Arc given three points on a circle\n     */\n    static from_three_points(start: Vec2, mid: Vec2, end: Vec2, width = 1) {\n        const u = 1000000;\n        const center = arc_center_from_three_points(\n            new Vec2(start.x * u, start.y * u),\n            new Vec2(mid.x * u, mid.y * u),\n            new Vec2(end.x * u, end.y * u),\n        );\n        center.x /= u;\n        center.y /= u;\n        const radius = center.sub(mid).magnitude;\n        const start_radial = start.sub(center);\n        const mid_radial = mid.sub(center);\n        const end_radial = end.sub(center);\n        const start_angle = start_radial.angle;\n        const mid_angle = mid_radial.angle;\n        let end_angle = end_radial.angle;\n\n        const angle1 = mid_angle.sub(start_angle).normalize180();\n        const angle2 = end_angle.sub(mid_angle).normalize180();\n        const arc_angle = angle1.add(angle2);\n\n        end_angle = start_angle.add(arc_angle);\n\n        return new Arc(center, radius, start_angle, end_angle, width);\n    }\n\n    static from_center_start_end(\n        center: Vec2,\n        start: Vec2,\n        end: Vec2,\n        width: number,\n    ) {\n        // See EDA_SHAPE::CalcArcAngles - normalizes the start and end angle so\n        // that start < end and their values are between -360 and +360.\n        const radius = start.sub(center).magnitude;\n        const start_radial = start.sub(center);\n        const end_radial = end.sub(center);\n        let start_angle = start_radial.kicad_angle;\n        let end_angle = end_radial.kicad_angle;\n\n        if (end_angle.degrees == start_angle.degrees) {\n            // This is a circle, not a zero-length arc.\n            end_angle.degrees = start_angle.degrees + 360;\n        }\n\n        if (start_angle.degrees > end_angle.degrees) {\n            if (end_angle.degrees < 0) {\n                end_angle = end_angle.normalize();\n            } else {\n                start_angle = start_angle\n                    .normalize()\n                    .sub(Angle.from_degrees(-360));\n            }\n        }\n\n        return new Arc(center, radius, start_angle, end_angle, width);\n    }\n\n    get start_radial() {\n        return this.start_angle.rotate_point(new Vec2(this.radius, 0));\n    }\n\n    get start_point() {\n        return this.center.add(this.start_radial);\n    }\n\n    get end_radial() {\n        return this.end_angle.rotate_point(new Vec2(this.radius, 0));\n    }\n\n    get end_point() {\n        return this.center.add(this.end_radial);\n    }\n\n    get mid_angle() {\n        return new Angle(\n            (this.start_angle.radians + this.end_angle.radians) / 2,\n        );\n    }\n\n    get mid_radial() {\n        return this.mid_angle.rotate_point(new Vec2(this.radius, 0));\n    }\n\n    get mid_point() {\n        return this.center.add(this.mid_radial);\n    }\n\n    get arc_angle(): Angle {\n        return this.end_angle.sub(this.start_angle);\n    }\n\n    /**\n     * Approximate the Arc using a polyline\n     */\n    to_polyline(): Vec2[] {\n        const points: Vec2[] = [];\n        let start = this.start_angle.radians;\n        let end = this.end_angle.radians;\n\n        if (start > end) {\n            [end, start] = [start, end];\n        }\n\n        // TODO: Pull KiCAD's logic for this, since it adds more segments the\n        // larger the arc is.\n        for (let theta = start; theta < end; theta += Math.PI / 32) {\n            points.push(\n                new Vec2(\n                    this.center.x + Math.cos(theta) * this.radius,\n                    this.center.y + Math.sin(theta) * this.radius,\n                ),\n            );\n        }\n\n        // Add the last point if needed.\n        const last_point = new Vec2(\n            this.center.x + Math.cos(end) * this.radius,\n            this.center.y + Math.sin(end) * this.radius,\n        );\n\n        if (!last_point.equals(points[points.length - 1])) {\n            points.push(last_point);\n        }\n\n        return points;\n    }\n\n    /**\n     * Same as to_polyline, but includes the arc center\n     */\n    to_polygon(): Vec2[] {\n        const points = this.to_polyline();\n        points.push(this.center);\n        return points;\n    }\n\n    /**\n     * Get a bounding box that encloses the entire arc.\n     */\n    get bbox(): BBox {\n        // An arc's bbox contains at least three points: the radial for the\n        // start angle, the radial for the end angle, and the radial inbetween.\n        // However, that doesn't cover all cases. Whenever the arc crosses an\n        // axis, the radial at that axis must also be included.\n        const points = [this.start_point, this.mid_point, this.end_point];\n\n        if (this.start_angle.degrees < 0 && this.end_angle.degrees >= 0) {\n            points.push(this.center.add(new Vec2(this.radius, 0)));\n        }\n\n        if (this.start_angle.degrees < 90 && this.end_angle.degrees >= 90) {\n            points.push(this.center.add(new Vec2(0, this.radius)));\n        }\n\n        if (this.start_angle.degrees < 180 && this.end_angle.degrees >= 180) {\n            points.push(this.center.add(new Vec2(-this.radius, 0)));\n        }\n\n        if (this.start_angle.degrees < 270 && this.end_angle.degrees >= 270) {\n            points.push(this.center.add(new Vec2(0, this.radius)));\n        }\n\n        if (this.start_angle.degrees < 360 && this.end_angle.degrees >= 360) {\n            points.push(this.center.add(new Vec2(0, this.radius)));\n        }\n\n        return BBox.from_points(points);\n    }\n}\n\n/**\n * Figure out the center point of a circular arc given three points along the circle.\n *\n * Ported from KiCAD's KiMATH trigo\n */\nfunction arc_center_from_three_points(start: Vec2, mid: Vec2, end: Vec2): Vec2 {\n    const sqrt_1_2 = Math.SQRT1_2;\n    const center = new Vec2(0, 0);\n    const y_delta_21 = mid.y - start.y;\n    let x_delta_21 = mid.x - start.x;\n    const y_delta_32 = end.y - mid.y;\n    let x_delta_32 = end.x - mid.x;\n\n    // This is a special case for mid as the half-way point when aSlope = 0 and bSlope = inf\n    // or the other way around.  In that case, the center lies in a straight line between\n    // start and end\n    if (\n        (x_delta_21 == 0.0 && y_delta_32 == 0.0) ||\n        (y_delta_21 == 0.0 && x_delta_32 == 0.0)\n    ) {\n        center.x = (start.x + end.x) / 2.0;\n        center.y = (start.y + end.y) / 2.0;\n        return center;\n    }\n\n    // Prevent div=0 errors\n    if (x_delta_21 == 0.0) {\n        x_delta_21 = Number.EPSILON;\n    }\n\n    if (x_delta_32 == 0.0) x_delta_32 = -Number.EPSILON;\n\n    let slope_a = y_delta_21 / x_delta_21;\n    let slope_b = y_delta_32 / x_delta_32;\n\n    const d_slope_a =\n        slope_a * new Vec2(0.5 / y_delta_21, 0.5 / x_delta_21).magnitude;\n    const d_slope_b =\n        slope_b * new Vec2(0.5 / y_delta_32, 0.5 / x_delta_32).magnitude;\n\n    if (slope_a == slope_b) {\n        if (start == end) {\n            // This is a special case for a 360 degrees arc.  In this case, the center is halfway between\n            // the midpoint and either end point\n            center.x = (start.x + mid.x) / 2.0;\n            center.y = (start.y + mid.y) / 2.0;\n            return center;\n        } else {\n            // If the points are colinear, the center is at infinity, so offset\n            // the slope by a minimal amount\n            // Warning: This will induce a small error in the center location\n            slope_a += Number.EPSILON;\n            slope_b -= Number.EPSILON;\n        }\n    }\n\n    // Prevent divide by zero error\n    if (slope_a == 0.0) {\n        slope_a = Number.EPSILON;\n    }\n\n    // What follows is the calculation of the center using the slope of the two lines as well as\n    // the propagated error that occurs when rounding to the nearest nanometer.  The error can be\n    // \u00B10.5 units but can add up to multiple nanometers after the full calculation is performed.\n    // All variables starting with `d` are the delta of that variable.  This is approximately equal\n    // to the standard deviation.\n    // We ignore the possible covariance between variables.  We also truncate our series expansion\n    // at the first term.  These are reasonable assumptions as the worst-case scenario is that we\n    // underestimate the potential uncertainty, which would potentially put us back at the status quo\n    const slope_ab_start_end_y = slope_a * slope_b * (start.y - end.y);\n    const d_slope_ab_start_end_y =\n        slope_ab_start_end_y *\n        Math.sqrt(\n            ((d_slope_a / slope_a) * d_slope_a) / slope_a +\n                ((d_slope_b / slope_b) * d_slope_b) / slope_b +\n                (sqrt_1_2 / (start.y - end.y)) * (sqrt_1_2 / (start.y - end.y)),\n        );\n\n    const slope_b_start_mid_x = slope_b * (start.x + mid.x);\n    const d_slope_b_start_mid_x =\n        slope_b_start_mid_x *\n        Math.sqrt(\n            ((d_slope_b / slope_b) * d_slope_b) / slope_b +\n                ((sqrt_1_2 / (start.x + mid.x)) * sqrt_1_2) / (start.x + mid.x),\n        );\n\n    const slope_a_mid_end_x = slope_a * (mid.x + end.x);\n    const d_slope_a_mid_end_x =\n        slope_a_mid_end_x *\n        Math.sqrt(\n            ((d_slope_a / slope_a) * d_slope_a) / slope_a +\n                ((sqrt_1_2 / (mid.x + end.x)) * sqrt_1_2) / (mid.x + end.x),\n        );\n\n    const twice_b_a_slope_diff = 2 * (slope_b - slope_a);\n    const d_twice_b_a_slope_diff =\n        2 * Math.sqrt(d_slope_b * d_slope_b + d_slope_a * d_slope_a);\n\n    const center_numerator_x =\n        slope_ab_start_end_y + slope_b_start_mid_x - slope_a_mid_end_x;\n    const d_center_numerator_x = Math.sqrt(\n        d_slope_ab_start_end_y * d_slope_ab_start_end_y +\n            d_slope_b_start_mid_x * d_slope_b_start_mid_x +\n            d_slope_a_mid_end_x * d_slope_a_mid_end_x,\n    );\n\n    const center_x =\n        (slope_ab_start_end_y + slope_b_start_mid_x - slope_a_mid_end_x) /\n        twice_b_a_slope_diff;\n\n    const d_center_x =\n        center_x *\n        Math.sqrt(\n            ((d_center_numerator_x / center_numerator_x) *\n                d_center_numerator_x) /\n                center_numerator_x +\n                ((d_twice_b_a_slope_diff / twice_b_a_slope_diff) *\n                    d_twice_b_a_slope_diff) /\n                    twice_b_a_slope_diff,\n        );\n\n    const center_numerator_y = (start.x + mid.x) / 2.0 - center_x;\n    const d_center_numerator_y = Math.sqrt(1.0 / 8.0 + d_center_x * d_center_x);\n\n    const center_first_term = center_numerator_y / slope_a;\n    const d_center_first_term_y =\n        center_first_term *\n        Math.sqrt(\n            ((d_center_numerator_y / center_numerator_y) *\n                d_center_numerator_y) /\n                center_numerator_y +\n                ((d_slope_a / slope_a) * d_slope_a) / slope_a,\n        );\n\n    const center_y = center_first_term + (start.y + mid.y) / 2.0;\n    const d_center_y = Math.sqrt(\n        d_center_first_term_y * d_center_first_term_y + 1.0 / 8.0,\n    );\n\n    const rounded_100_center_x = Math.floor((center_x + 50.0) / 100.0) * 100.0;\n    const rounded_100_center_y = Math.floor((center_y + 50.0) / 100.0) * 100.0;\n    const rounded_10_center_x = Math.floor((center_x + 5.0) / 10.0) * 10.0;\n    const rounded_10_center_y = Math.floor((center_y + 5.0) / 10.0) * 10.0;\n\n    // The last step is to find the nice, round numbers near our baseline estimate and see if they are within our uncertainty\n    // range  If they are, then we use this round value as the true value.  This is justified because ALL values within the\n    // uncertainty range are equally true. Using a round number will make sure that we are on a multiple of 1mil or 100nm\n    // when calculating centers.\n    if (\n        Math.abs(rounded_100_center_x - center_x) < d_center_x &&\n        Math.abs(rounded_100_center_y - center_y) < d_center_y\n    ) {\n        center.x = rounded_100_center_x;\n        center.y = rounded_100_center_y;\n    } else if (\n        Math.abs(rounded_10_center_x - center_x) < d_center_x &&\n        Math.abs(rounded_10_center_y - center_y) < d_center_y\n    ) {\n        center.x = rounded_10_center_x;\n        center.y = rounded_10_center_y;\n    } else {\n        center.x = center_x;\n        center.y = center_y;\n    }\n\n    return center;\n}\n", "/*\n    Copyright (c) 2022 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nimport { Vec2 } from \"./vec2\";\nimport { Matrix3 } from \"./matrix3\";\nimport { Angle, type AngleLike } from \"./angle\";\nimport { BBox } from \"./bbox\";\n\n/**\n * A camera in 2d space.\n *\n * This manages the minimal state required to pan, zoom, and rotate. It's\n * abstract and isn't integrated into any specific graphics backend. Use\n * .matrix to get the complete transformation matrix to pass to whichever\n * graphics backend you're using.\n */\nexport class Camera2 {\n    /**\n     * Create a camera\n     * @param {Vec2} viewport_size - The width and height of the viewport\n     * @param {Vec2} center - The point at which the camera's view is centered\n     * @param {number} zoom - Scale factor, increasing numbers zoom the camera in.\n     * @param {number|Angle} rotation - Rotation (roll) in radians.\n     */\n    constructor(\n        public viewport_size: Vec2 = new Vec2(0, 0),\n        public center: Vec2 = new Vec2(0, 0),\n        public zoom: number = 1,\n        public rotation: Angle = new Angle(0),\n    ) {}\n\n    /**\n     * Relative translation\n     * @param v\n     */\n    translate(v: Vec2) {\n        this.center.x += v.x;\n        this.center.y += v.y;\n    }\n\n    /**\n     * Relative rotation\n     * @param {Angle|number} a - rotation in radians\n     */\n    rotate(a: AngleLike) {\n        this.rotation = this.rotation.add(a);\n    }\n\n    /**\n     * Complete transformation matrix.\n     */\n    get matrix(): Matrix3 {\n        const mx = this.viewport_size.x / 2;\n        const my = this.viewport_size.y / 2;\n        const dx = this.center.x - this.center.x * this.zoom;\n        const dy = this.center.y - this.center.y * this.zoom;\n        const left = -(this.center.x - mx) + dx;\n        const top = -(this.center.y - my) + dy;\n        return Matrix3.translation(left, top)\n            .rotate_self(this.rotation)\n            .scale_self(this.zoom, this.zoom);\n    }\n\n    /**\n     * Bounding box representing the camera's view\n     * */\n    get bbox(): BBox {\n        const m = this.matrix.inverse();\n        const start = m.transform(new Vec2(0, 0));\n        const end = m.transform(\n            new Vec2(this.viewport_size.x, this.viewport_size.y),\n        );\n        return new BBox(start.x, start.y, end.x - start.x, end.y - start.y);\n    }\n\n    /**\n     * Move the camera and adjust zoom so that the given bounding box is in\n     * view.\n     */\n    set bbox(bbox: BBox) {\n        const zoom_w = this.viewport_size.x / bbox.w;\n        const zoom_h = this.viewport_size.y / bbox.h;\n        const center_x = bbox.x + bbox.w / 2;\n        const center_y = bbox.y + bbox.h / 2;\n        this.zoom = Math.min(zoom_w, zoom_h);\n        this.center.set(center_x, center_y);\n    }\n\n    get top() {\n        return this.bbox.y;\n    }\n\n    get bottom() {\n        return this.bbox.y2;\n    }\n\n    get left() {\n        return this.bbox.x;\n    }\n\n    get right() {\n        return this.bbox.x2;\n    }\n\n    /**\n     * Apply this camera to a 2d canvas\n     *\n     * A simple convenience method that sets the canvas's transform to\n     * the camera's transformation matrix.\n     */\n    apply_to_canvas(ctx: CanvasRenderingContext2D) {\n        this.viewport_size.set(ctx.canvas.clientWidth, ctx.canvas.clientHeight);\n        const m = Matrix3.from_DOMMatrix(ctx.getTransform());\n        m.multiply_self(this.matrix);\n        ctx.setTransform(m.to_DOMMatrix());\n    }\n\n    /**\n     * Transform screen coordinates to world coordinates\n     */\n    screen_to_world(v: Vec2): Vec2 {\n        return this.matrix.inverse().transform(v);\n    }\n\n    /**\n     * Transform world coordinates to screen coordinates\n     */\n    world_to_screen(v: Vec2): Vec2 {\n        return this.matrix.transform(v);\n    }\n}\n", "/*\n    Copyright (c) 2022 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nexport class Color {\n    constructor(\n        public r: number,\n        public g: number,\n        public b: number,\n        public a: number = 1,\n    ) {}\n\n    copy() {\n        return new Color(this.r, this.g, this.b, this.a);\n    }\n\n    static get transparent_black() {\n        return new Color(0, 0, 0, 0);\n    }\n\n    static get black() {\n        return new Color(0, 0, 0, 1);\n    }\n\n    static get white() {\n        return new Color(1, 1, 1, 1);\n    }\n\n    static from_css(str: string) {\n        let r, g, b, a;\n\n        /* Hex color */\n        if (str[0] == \"#\") {\n            str = str.slice(1);\n            // #ABC -> #AABBCC\n            if (str.length == 3) {\n                str = `${str[0]}${str[0]}${str[1]}${str[1]}${str[2]}${str[2]}`;\n            }\n\n            // #AABBCC -> #AABBCCDD\n            if (str.length == 6) {\n                str = `${str}FF`;\n            }\n\n            [r, g, b, a] = [\n                parseInt(str.slice(0, 2), 16) / 255,\n                parseInt(str.slice(2, 4), 16) / 255,\n                parseInt(str.slice(4, 6), 16) / 255,\n                parseInt(str.slice(6, 8), 16) / 255,\n            ];\n        } else if (str.startsWith(\"rgb\")) {\n            // rgb(0, 0, 0) -> rgba(0, 0, 0, 1);\n            if (!str.startsWith(\"rgba\")) {\n                str = `rgba(${str.slice(4, -1)}, 1)`;\n            }\n            str = str.trim().slice(5, -1);\n\n            const parts = str.split(\",\");\n\n            if (parts.length != 4) {\n                throw new Error(`Invalid color ${str}`);\n            }\n\n            [r, g, b, a] = [\n                parseFloat(parts[0]!) / 255,\n                parseFloat(parts[1]!) / 255,\n                parseFloat(parts[2]!) / 255,\n                parseFloat(parts[3]!),\n            ];\n        } else {\n            throw new Error(`Unable to parse CSS color string ${str}`);\n        }\n\n        return new Color(r, g, b, a);\n    }\n\n    to_css(): string {\n        return `rgba(${this.r_255}, ${this.g_255}, ${this.b_255}, ${this.a})`;\n    }\n\n    to_array(): [number, number, number, number] {\n        return [this.r, this.g, this.b, this.a];\n    }\n\n    get r_255() {\n        return Math.round(this.r * 255);\n    }\n\n    set r_255(v) {\n        this.r = v / 255;\n    }\n\n    get g_255(): number {\n        return Math.round(this.g * 255);\n    }\n\n    set g_255(v) {\n        this.g = v / 255;\n    }\n\n    get b_255(): number {\n        return Math.round(this.b * 255);\n    }\n\n    set b_255(v) {\n        this.b = v / 255;\n    }\n\n    get is_transparent_black() {\n        return this.r == 0 && this.g == 0 && this.b == 0 && this.a == 0;\n    }\n\n    with_alpha(a: number) {\n        const c = this.copy();\n        c.a = a;\n        return c;\n    }\n\n    desaturate() {\n        // From KiCAD's COLOR4D::Desaturate\n        if (this.r == this.g && this.r == this.b) {\n            return this;\n        }\n\n        const [h, _, l] = rgb_to_hsl(this.r, this.g, this.b);\n\n        return new Color(...hsl_to_rgb(h, 0.0, l));\n    }\n\n    mix(other: Color, amount: number) {\n        return new Color(\n            other.r * (1 - amount) + this.r * amount,\n            other.g * (1 - amount) + this.g * amount,\n            other.b * (1 - amount) + this.b * amount,\n            this.a,\n        );\n    }\n}\n\n/**\n * Convert normalized RGB to HSL\n */\nexport function rgb_to_hsl(\n    r: number,\n    g: number,\n    b: number,\n): [number, number, number] {\n    const max = Math.max(...[r, g, b]);\n    const min = Math.min(...[r, g, b]);\n    const l = (min + max) / 2;\n    const d = max - min;\n    let [h, s] = [NaN, 0];\n\n    if (d !== 0) {\n        s = l === 0 || l === 1 ? 0 : (max - l) / Math.min(l, 1 - l);\n\n        switch (max) {\n            case r:\n                h = (g - b) / d + (g < b ? 6 : 0);\n                break;\n            case g:\n                h = (b - r) / d + 2;\n                break;\n            case b:\n                h = (r - g) / d + 4;\n        }\n\n        h = h * 60;\n    }\n\n    return [h, s * 100, l * 100];\n}\n\n/**\n * Convert normalized HSL to RGB\n */\nexport function hsl_to_rgb(\n    h: number,\n    s: number,\n    l: number,\n): [number, number, number] {\n    h = h % 360;\n\n    if (h < 0) {\n        h += 360;\n    }\n\n    s /= 100;\n    l /= 100;\n\n    function f(n: number) {\n        const k = (n + h / 30) % 12;\n        const a = s * Math.min(l, 1 - l);\n        return l - a * Math.max(-1, Math.min(k - 3, 9 - k, 1));\n    }\n\n    return [f(0), f(8), f(4)];\n}\n", "/*\n    Copyright (c) 2022 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\n/*\n    References:\n    - https://dev-docs.kicad.org/en/file-formats/sexpr-intro/\n    - https://gitlab.com/edea-dev/edea/-/tree/main/edea\n*/\n\nconst EOF = \"\\x04\";\n\nexport class Token {\n    static OPEN = Symbol(\"opn\");\n    static CLOSE = Symbol(\"clo\");\n    static ATOM = Symbol(\"atm\");\n    static NUMBER = Symbol(\"num\");\n    static STRING = Symbol(\"str\");\n\n    /**\n     * Create a new Token\n     */\n    constructor(\n        public type: symbol,\n        public value: any = null,\n    ) {}\n}\n\nfunction is_digit(c: string) {\n    return c >= \"0\" && c <= \"9\";\n}\n\nfunction is_alpha(c: string) {\n    return (c >= \"A\" && c <= \"Z\") || (c >= \"a\" && c <= \"z\");\n}\n\nfunction is_whitespace(c: string) {\n    return c === EOF || c === \" \" || c === \"\\n\" || c === \"\\r\" || c === \"\\t\";\n}\n\nfunction is_atom(c: string) {\n    return (\n        is_alpha(c) ||\n        is_digit(c) ||\n        [\n            \"_\",\n            \"-\",\n            \":\",\n            \"!\",\n            \".\",\n            \"[\",\n            \"]\",\n            \"{\",\n            \"}\",\n            \"@\",\n            \"*\",\n            \"/\",\n            \"&\",\n            \"#\",\n            \"%\",\n            \"+\",\n            \"=\",\n            \"~\",\n            \"$\",\n            \"|\",\n        ].includes(c)\n    );\n}\n\nfunction error_context(input: string, index: number) {\n    let start = input.slice(0, index).lastIndexOf(\"\\n\");\n    if (start < 0) start = 0;\n    let end = input.slice(index).indexOf(\"\\n\");\n    if (end < 0) end = 20;\n    return input.slice(start, index + end);\n}\n\nenum State {\n    none,\n    string,\n    number,\n    atom,\n    hex,\n}\n\nexport function* tokenize(input: string) {\n    const open_token = new Token(Token.OPEN);\n    const close_token = new Token(Token.CLOSE);\n    let state: State = State.none;\n    let start_idx = 0;\n    let escaping = false;\n\n    for (let i = 0; i < input.length + 1; i++) {\n        const c: string = i < input.length ? input[i]! : EOF;\n\n        if (state == State.none) {\n            if (c === \"(\") {\n                yield open_token;\n                continue;\n            } else if (c === \")\") {\n                yield close_token;\n                continue;\n            } else if (c === '\"') {\n                state = State.string;\n                start_idx = i;\n                continue;\n            } else if (c === \"-\" || c == \"+\" || is_digit(c)) {\n                state = State.number;\n                start_idx = i;\n                continue;\n            } else if (\n                is_alpha(c) ||\n                [\"*\", \"&\", \"$\", \"/\", \"%\", \"|\"].includes(c)\n            ) {\n                state = State.atom;\n                start_idx = i;\n                continue;\n            } else if (is_whitespace(c)) {\n                continue;\n            } else {\n                throw new Error(\n                    `Unexpected character at index ${i}: ${c}\\nContext: ${error_context(\n                        input,\n                        i,\n                    )}`,\n                );\n            }\n        } else if (state == State.atom) {\n            if (is_atom(c)) {\n                continue;\n            } else if (c === \")\" || is_whitespace(c)) {\n                yield new Token(Token.ATOM, input.substring(start_idx, i));\n                state = State.none;\n                if (c === \")\") {\n                    yield close_token;\n                }\n            } else {\n                throw new Error(\n                    `Unexpected character while tokenizing atom at index ${i}: ${c}\\nContext: ${error_context(\n                        input,\n                        i,\n                    )}`,\n                );\n            }\n        } else if (state == State.number) {\n            if (c === \".\" || is_digit(c)) {\n                continue;\n            } else if (c.toLowerCase() === \"x\") {\n                /* Hex number */\n                state = State.hex;\n                continue;\n            } else if (\n                [\"+\", \"-\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\"].includes(\n                    c.toLowerCase(),\n                )\n            ) {\n                /* Special case of UUID value */\n                state = State.atom;\n                continue;\n            } else if (is_atom(c)) {\n                /* It's actually an atom, e.g. +3V3 */\n                state = State.atom;\n                continue;\n            } else if (c === \")\" || is_whitespace(c)) {\n                yield new Token(\n                    Token.NUMBER,\n                    parseFloat(input.substring(start_idx, i)),\n                );\n                state = State.none;\n                if (c === \")\") {\n                    yield close_token;\n                }\n                continue;\n            } else {\n                throw new Error(\n                    `Unexpected character at index ${i}: ${c}, expected numeric.\\nContext: ${error_context(\n                        input,\n                        i,\n                    )}`,\n                );\n            }\n        } else if (state == State.hex) {\n            if (\n                is_digit(c) ||\n                [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"_\"].includes(c.toLowerCase())\n            ) {\n                continue;\n            } else if (c === \")\" || is_whitespace(c)) {\n                const hexstr = input.substring(start_idx, i).replace(\"_\", \"\");\n                yield new Token(Token.NUMBER, Number.parseInt(hexstr, 16));\n                state = State.none;\n                if (c === \")\") {\n                    yield close_token;\n                }\n                continue;\n            } else if (is_atom(c)) {\n                // It was actually an atom.\n                state = State.atom;\n                continue;\n            } else {\n                throw new Error(\n                    `Unexpected character at index ${i}: ${c}, expected hexadecimal.\\nContext: ${error_context(\n                        input,\n                        i,\n                    )}`,\n                );\n            }\n        } else if (state == State.string) {\n            if (!escaping && c === '\"') {\n                yield new Token(\n                    Token.STRING,\n                    input\n                        .substring((start_idx ?? 0) + 1, i)\n                        .replaceAll(\"\\\\n\", \"\\n\")\n                        .replaceAll(\"\\\\\\\\\", \"\\\\\"),\n                );\n                state = State.none;\n                escaping = false;\n                continue;\n            } else if (!escaping && c === \"\\\\\") {\n                escaping = true;\n                continue;\n            } else {\n                escaping = false;\n                continue;\n            }\n        } else {\n            throw new Error(\n                `Unknown tokenizer state ${state}\\nContext: ${error_context(\n                    input,\n                    i,\n                )}`,\n            );\n        }\n    }\n}\n\nexport type List = (string | number | List)[];\n\nfunction* listify_tokens(tokens: Generator<Token>): Generator<List> {\n    let token;\n    let it;\n\n    while (true) {\n        it = tokens.next();\n        token = it.value;\n\n        switch (token?.type) {\n            case Token.ATOM:\n            case Token.STRING:\n            case Token.NUMBER:\n                yield token.value;\n                break;\n            case Token.OPEN:\n                yield Array.from(listify_tokens(tokens)) as any;\n                break;\n            case Token.CLOSE:\n            case undefined:\n                return;\n        }\n    }\n}\n\nexport function listify(src: string): List {\n    const tokens = tokenize(src);\n    return Array.from(listify_tokens(tokens));\n}\n", "/*\n    Copyright (c) 2023 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nimport { as_array } from \"../base/array\";\nimport { Color } from \"../base/color\";\nimport { Vec2 } from \"../base/math\";\nimport { Logger } from \"../base/log\";\nimport { is_number, is_string } from \"../base/types\";\nimport { listify, type List } from \"./tokenizer\";\n\nconst log = new Logger(\"kicanvas:parser\");\n\nenum Kind {\n  // the first token in the expr (kind ...)\n  start,\n  // (1 2 3) -> {name: value}\n  positional,\n  // ((name value)) -> {name: value}\n  pair,\n  // ((name value value value ...)) -> {name: [value, value, value]}\n  list,\n  // (locked [he]) or mutually exclusively flags like (a | b | c)\n  atom,\n  // (name (kind 1) (kind 2) ...) -> {name: [item1, item2]}\n  item_list,\n  // generic expression (name 1 [2 3]) -> {name: [name, 1, [2, 3]]}\n  expr,\n}\n\ntype ListOrAtom = number | string | List;\ntype Obj = Record<string, any>;\ntype Item = {\n  new(e: Parseable, ...args: any[]): any;\n};\ntype TypeProcessor = (obj: Obj, name: string, e: ListOrAtom) => any;\ntype PropertyDefinition = {\n  name: string;\n  kind: Kind;\n  accepts?: string[];\n  fn: TypeProcessor;\n};\n\n/**\n * Type processors.\n * They transform an extracted value from the s-expr into the appropriate\n * data type requested by the property definition.\n */\nexport const T = {\n  any(obj: Obj, name: string, e: ListOrAtom): any {\n    return e;\n  },\n  boolean(obj: Obj, name: string, e: ListOrAtom): boolean {\n    switch (e) {\n      case \"false\":\n      case \"no\":\n        return false;\n      case \"true\":\n      case \"yes\":\n        return true;\n      default:\n        return e ? true : false;\n    }\n  },\n  string(obj: Obj, name: string, e: ListOrAtom): string | undefined {\n    if (is_string(e)) {\n      return e;\n    } else {\n      return undefined;\n    }\n  },\n  number(obj: Obj, name: string, e: ListOrAtom): number | undefined {\n    if (is_number(e)) {\n      return e;\n    } else {\n      return undefined;\n    }\n  },\n  item(type: Item, ...args: any[]): TypeProcessor {\n    return (obj: Obj, name: string, e: ListOrAtom): any => {\n      return new type(e as Parseable, ...args);\n    };\n  },\n  object(start: any, ...defs: PropertyDefinition[]): TypeProcessor {\n    return (obj: Obj, name: string, e: ListOrAtom) => {\n      let existing = {};\n      if (start !== null) {\n        existing = obj[name] ?? start ?? {};\n      }\n      return {\n        ...existing,\n        ...parse_expr(e as List, P.start(name), ...defs),\n      };\n    };\n  },\n  vec2(obj: Obj, name: string, e: ListOrAtom): Vec2 {\n    const el = e as number[];\n    return new Vec2(el[1], el[2]);\n  },\n  color(obj: Obj, name: string, e: ListOrAtom): Color {\n    const el = e as [string, number, number, number, number?];\n    return new Color(el[1] / 255, el[2] / 255, el[3] / 255, el[4]);\n  },\n};\n\n/**\n * Property definitions\n * These are used to describe the *shape* of the expected data along with the\n * type processor needed to convert it to the right value.\n */\nexport const P = {\n  /**\n   * Checks that the first item in the list is \"name\". For example,\n   * (thing 1 2 3) would use start(\"thing\").\n   */\n  start(name: string): PropertyDefinition {\n    return {\n      kind: Kind.start,\n      name: name,\n      fn: T.string,\n    };\n  },\n  /**\n   * Accepts a positional argument. For example,\n   * (1 2 3) with positional(\"first\", T.number) would end up with {first: 1}.\n   */\n  positional(\n    name: string,\n    typefn: TypeProcessor = T.any,\n  ): PropertyDefinition {\n    return {\n      kind: Kind.positional,\n      name: name,\n      fn: typefn,\n    };\n  },\n  /**\n   * Accepts a pair. For example, ((a 1)) with pair(a) would end up with {a: 1}.\n   */\n  pair(name: string, typefn: TypeProcessor = T.any): PropertyDefinition {\n    return {\n      kind: Kind.pair,\n      name: name,\n      accepts: [name],\n      fn: (obj: Obj, name: string, e: ListOrAtom) => {\n        return typefn(obj, name, (e as any[])[1]);\n      },\n    };\n  },\n  /**\n   * Accepts a list. For example ((a 1 2 3)) with list(a) would end up with {a: [1, 2, 3]}.\n   */\n  list(name: string, typefn: TypeProcessor = T.any): PropertyDefinition {\n    return {\n      kind: Kind.list,\n      name: name,\n      accepts: [name],\n      fn: (obj: Obj, name: string, e: ListOrAtom) => {\n        return (e as List[]).slice(1).map((n) => typefn(obj, name, n));\n      },\n    };\n  },\n  /**\n   * Accepts a collection. For example ((a 1) (a 2) (a 3)) with collection(\"items\", \"a\")\n   * would end up with {items: [[a, 1], [a, 2], [a, 3]]}.\n   */\n  collection(\n    name: string,\n    accept: string,\n    typefn: TypeProcessor = T.any,\n  ): PropertyDefinition {\n    return {\n      kind: Kind.item_list,\n      name: name,\n      accepts: [accept],\n      fn: (obj: Obj, name: string, e: ListOrAtom) => {\n        const list = obj[name] ?? [];\n        list.push(typefn(obj, name, e));\n        return list;\n      },\n    };\n  },\n  /**\n   * Like collection but creates a map instead of an array.. For example\n   * ((a key1 1) (a key2 2) (a key3 3)) with collection_map(\"items\", \"a\")\n   * would end up with {items: {key1: [a, key1, 2], ...}.\n   */\n  mapped_collection(\n    name: string,\n    accept: string,\n    keyfn: (obj: any) => string,\n    typefn: TypeProcessor = T.any,\n  ): PropertyDefinition {\n    return {\n      kind: Kind.item_list,\n      name: name,\n      accepts: [accept],\n      fn: (obj: Obj, name: string, e: ListOrAtom) => {\n        const map = obj[name] ?? new Map();\n        const val = typefn(obj, name, e);\n        const key = keyfn(val);\n        map.set(key, val);\n        return map;\n      },\n    };\n  },\n  /**\n   * Accepts a dictionary. For example ((thing a 1) (thing b 2) (thing c 3)) with\n   * dict(\"things\", \"thing\") would end up with {things: {a: 1, b: 2, c: 3}}.\n   */\n  dict(\n    name: string,\n    accept: string,\n    typefn: TypeProcessor = T.any,\n  ): PropertyDefinition {\n    return {\n      kind: Kind.item_list,\n      name: name,\n      accepts: [accept],\n      fn: (obj: Obj, name: string, e: ListOrAtom) => {\n        const el = e as [string, string, any];\n        const rec = obj[name] ?? {};\n        rec[el[1]] = typefn(obj, name, el[2]);\n        return rec;\n      },\n    };\n  },\n  /**\n   * Accepts an atom. For example (locked) and ((locked)) with atom(\"locked\")\n   * would end up with {locked: true}. Atoms can also be mutually exclusive\n   * options, for example atom(\"align\", [\"left\", \"right\"]) would process\n   * (left) as {align: \"left\"} and (right) as {align: \"right\"}.\n   */\n  atom(name: string, values?: string[]): PropertyDefinition {\n    let typefn: TypeProcessor;\n\n    if (values) {\n      typefn = T.string;\n    } else {\n      typefn = T.boolean;\n      values = [name];\n    }\n\n    return {\n      kind: Kind.atom,\n      name: name,\n      accepts: values,\n      fn(obj: Obj, name: string, e: ListOrAtom) {\n        // Handle \"(atom)\" as \"atom\".\n        if (Array.isArray(e) && e.length == 1) {\n          e = e[0]!;\n        }\n        return typefn(obj, name, e);\n      },\n    };\n  },\n  /**\n   * Accepts an expression. For example ((thing a 1 b)) with expr(\"thing\")\n   * would end up with {thing: [\"thing\", a, 1, b]}.\n   */\n  expr(name: string, typefn: TypeProcessor = T.any): PropertyDefinition {\n    return {\n      kind: Kind.expr,\n      name: name,\n      accepts: [name],\n      fn: typefn,\n    };\n  },\n  /**\n   * Accepts an expression that describes a simple object with the given\n   * property definitions. For example ((thing (a 1) (b 2))) with\n   * object(\"thing\", P.pair(\"a\"), P.pair(\"b\")) would end up with\n   * {thing: {a: 1, b: 2}}.\n   */\n  object(\n    name: string,\n    start: any,\n    ...defs: PropertyDefinition[]\n  ): PropertyDefinition {\n    return P.expr(name, T.object(start, ...defs));\n  },\n  /**\n   * Accepts an expression that describes an object that can be used to\n   * construct the given Item type. An Item is any class that takes\n   * a List as its first constructor parameter.\n   */\n  item(name: string, item_type: Item, ...args: any[]): PropertyDefinition {\n    return P.expr(name, T.item(item_type, ...args));\n  },\n  /**\n   * Accepts an expression that describes a 2d vector. For example,\n   * ((xy 1 2)) with vec2(\"xy\") would end up with {xy: Vec2(1, 2)}.\n   */\n  vec2(name: string) {\n    return P.expr(name, T.vec2);\n  },\n  color(name = \"color\") {\n    return P.expr(name, T.color);\n  },\n};\n\nexport type Parseable = string | List;\n\nexport function parse_expr(expr: string | List, ...defs: PropertyDefinition[]) {\n  if (is_string(expr)) {\n    log.info(`Parsing expression with ${expr.length} chars`);\n    expr = listify(expr);\n    if (expr.length == 1 && Array.isArray(expr[0])) {\n      expr = expr[0];\n    }\n  }\n\n  const defs_map = new Map();\n\n  let start_def;\n  let n = 0;\n\n  for (const def of defs) {\n    if (def.kind == Kind.start) {\n      start_def = def;\n    } else if (def.kind == Kind.positional) {\n      defs_map.set(n, def);\n      n++;\n    } else {\n      for (const a of def.accepts!) {\n        defs_map.set(a, def);\n      }\n    }\n  }\n\n  if (start_def) {\n    const acceptable_start_strings = as_array(start_def.name);\n    const first = expr.at(0) as string;\n\n    if (!acceptable_start_strings.includes(first)) {\n      throw new Error(\n        `Expression must start with ${start_def.name} found ${first} in ${expr}`,\n      );\n    }\n\n    expr = expr.slice(1);\n  }\n\n  const out: Record<string, any> = {};\n\n  n = 0;\n  for (const element of expr) {\n    let def: PropertyDefinition | null = null;\n\n    // bare string value can be an atom\n    if (is_string(element)) {\n      def = defs_map.get(element);\n    }\n\n    // If not an atom, a bare string or number can be a positional\n    if (!def && (is_string(element) || is_number(element))) {\n      def = defs_map.get(n);\n\n      if (!def) {\n        log.warn(\n          `no def for bare element ${element} at position ${n} in expression ${expr}`,\n        );\n        continue;\n      }\n\n      n++;\n    }\n\n    // list of elements\n    if (!def && Array.isArray(element)) {\n      def = defs_map.get(element[0]);\n    }\n\n    if (!def) {\n      // log.warn(\n      //   `No def found for element ${element} in expression ${expr}`,\n      // );\n      continue;\n    }\n\n    const value = def.fn(out, def.name, element);\n\n    out[def.name] = value;\n  }\n\n  return out;\n}\n", "/*\n    Copyright (c) 2023 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nimport { Color } from \"../base/color\";\nimport { Vec2 } from \"../base/math\";\nimport { P, T, parse_expr, type Parseable } from \"./parser\";\n\nexport function unescape_string(str: string): string {\n    const escape_vars = {\n        dblquote: '\"',\n        quote: \"'\",\n        lt: \"<\",\n        gt: \">\",\n        backslash: \"\\\\\",\n        slash: \"/\",\n        bar: \"|\",\n        comma: \",\",\n        colon: \":\",\n        space: \" \",\n        dollar: \"$\",\n        tab: \"\\t\",\n        return: \"\\n\",\n        brace: \"{\",\n    };\n\n    for (const [k, v] of Object.entries(escape_vars)) {\n        str = str.replaceAll(\"{\" + k + \"}\", v);\n    }\n\n    return str;\n}\n\nexport type HasResolveTextVars = {\n    resolve_text_var: (name: string) => string | undefined;\n};\n\nexport function expand_text_vars(\n    text: string,\n    resolveable: HasResolveTextVars | undefined,\n): string {\n    text = unescape_string(text);\n\n    if (resolveable === undefined) {\n        return text;\n    }\n\n    text = text.replaceAll(\n        /(\\$\\{(.+?)\\})/g,\n        (substring: string, all: string, name: string) => {\n            const val = resolveable.resolve_text_var(name);\n\n            if (val === undefined) {\n                return all;\n            }\n\n            return val;\n        },\n    );\n\n    return text;\n}\n\nexport class At {\n    position = new Vec2(0, 0);\n    rotation = 0;\n    unlocked = false;\n\n    constructor(expr?: Parseable) {\n        if (expr) {\n            const parsed = parse_expr(\n                expr,\n                P.start(\"at\"),\n                P.positional(\"x\", T.number),\n                P.positional(\"y\", T.number),\n                P.positional(\"rotation\", T.number),\n                P.atom(\"unlocked\"),\n            ) as {\n                x: number;\n                y: number;\n                rotation?: number;\n                unlocked?: boolean;\n            };\n            this.position.set(parsed.x, parsed.y);\n            this.rotation = parsed.rotation ?? this.rotation;\n            this.unlocked = parsed.unlocked ?? this.unlocked;\n        }\n    }\n\n    copy() {\n        const at = new At();\n        at.position = this.position.copy();\n        at.rotation = this.rotation;\n        at.unlocked = this.unlocked;\n        return at;\n    }\n}\n\nexport const PaperSize = {\n    User: [431.8, 279.4] as const,\n    A0: [1189, 841] as const,\n    A1: [841, 594] as const,\n    A2: [594, 420] as const,\n    A3: [420, 297] as const,\n    A4: [297, 210] as const,\n    A5: [210, 148] as const,\n    A: [279.4, 215.9] as const,\n    B: [431.8, 279.4] as const,\n    C: [558.8, 431.8] as const,\n    D: [863.6, 558.8] as const,\n    E: [1117.6, 863.6] as const,\n    USLetter: [279.4, 215.9] as const,\n    USLegal: [355.6, 215.9] as const,\n    USLedger: [431.8, 279.4] as const,\n};\n\nexport type PaperSizeName = keyof typeof PaperSize;\n\nexport class Paper {\n    size: PaperSizeName;\n    width?: number;\n    height?: number;\n    portrait = false;\n\n    constructor(expr: Parseable) {\n        Object.assign(\n            this,\n            parse_expr(\n                expr,\n                P.start(\"paper\"),\n                P.atom(\"size\", Object.keys(PaperSize)),\n                P.positional(\"width\", T.number),\n                P.positional(\"height\", T.number),\n                P.atom(\"portrait\"),\n            ),\n        );\n\n        const paper_size = PaperSize[this.size];\n\n        if (!this.width && paper_size) {\n            this.width = paper_size[0];\n        }\n\n        if (!this.height && paper_size) {\n            this.height = paper_size[1];\n        }\n\n        if (this.size != \"User\" && this.portrait) {\n            [this.width, this.height] = [this.height, this.width];\n        }\n    }\n}\n\nexport class TitleBlock {\n    title = \"\";\n    date = \"\";\n    rev = \"\";\n    company = \"\";\n    comment: Record<string, string> = {};\n\n    constructor(expr?: Parseable) {\n        /*\n        (title_block\n            (title \"Starfish\")\n            (date \"2022-12-18\")\n            (rev \"v2\")\n            (company \"Winterbloom\")\n            (comment 1 \"Alethea Flowers\")\n            (comment 2 \"CERN-OHL-S V2\")\n            (comment 3 \"starfish.wntr.dev\")\n        )\n        */\n        if (expr) {\n            Object.assign(\n                this,\n                parse_expr(\n                    expr,\n                    P.start(\"title_block\"),\n                    P.pair(\"title\", T.string),\n                    P.pair(\"date\", T.string),\n                    P.pair(\"rev\", T.string),\n                    P.pair(\"company\", T.string),\n                    P.expr(\"comment\", (obj, name, e) => {\n                        const ep = e as [string, string, string];\n                        const record: Record<string, any> = obj[name] ?? {};\n                        record[ep[1]] = ep[2];\n                        return record;\n                    }),\n                ),\n            );\n        }\n    }\n\n    resolve_text_var(name: string): string | undefined {\n        return new Map([\n            [\"ISSUE_DATE\", this.date],\n            [\"REVISION\", this.rev],\n            [\"TITLE\", this.title],\n            [\"COMPANY\", this.company],\n            [\"COMMENT1\", this.comment[1] ?? \"\"],\n            [\"COMMENT2\", this.comment[2] ?? \"\"],\n            [\"COMMENT3\", this.comment[3] ?? \"\"],\n            [\"COMMENT4\", this.comment[4] ?? \"\"],\n            [\"COMMENT5\", this.comment[5] ?? \"\"],\n            [\"COMMENT6\", this.comment[6] ?? \"\"],\n            [\"COMMENT7\", this.comment[7] ?? \"\"],\n            [\"COMMENT8\", this.comment[8] ?? \"\"],\n            [\"COMMENT9\", this.comment[9] ?? \"\"],\n        ]).get(name);\n    }\n}\n\nexport class Effects {\n    font = new Font();\n    justify = new Justify();\n    hide = false;\n\n    constructor(expr?: Parseable) {\n        if (expr) {\n            Object.assign(\n                this,\n                parse_expr(\n                    expr,\n                    P.start(\"effects\"),\n                    P.item(\"font\", Font),\n                    P.item(\"justify\", Justify),\n                    P.atom(\"hide\"),\n                    P.color(),\n                ),\n            );\n        }\n    }\n\n    copy() {\n        const e = new Effects();\n        e.font = this.font.copy();\n        e.justify = this.justify.copy();\n        e.hide = this.hide;\n        return e;\n    }\n}\n\nexport class Font {\n    face?: string;\n    size: Vec2 = new Vec2(1.27, 1.27);\n    thickness = 0;\n    bold = false;\n    italic = false;\n    color: Color = Color.transparent_black;\n\n    constructor(expr?: Parseable) {\n        if (expr) {\n            Object.assign(\n                this,\n                parse_expr(\n                    expr,\n                    P.start(\"font\"),\n                    P.pair(\"face\", T.string),\n                    P.vec2(\"size\"),\n                    P.pair(\"thickness\", T.number),\n                    P.atom(\"bold\"),\n                    P.atom(\"italic\"),\n                    P.pair(\"line_spacing\", T.number),\n                    P.color(),\n                ),\n            );\n\n            // Note: KiCAD saves height as the first number and width as the\n            // second. I have no fucking idea why they did that.\n            [this.size.x, this.size.y] = [this.size.y, this.size.x];\n        }\n    }\n\n    copy() {\n        const f = new Font();\n        f.face = this.face;\n        f.size = this.size.copy();\n        f.thickness = this.thickness;\n        f.bold = this.bold;\n        f.italic = this.italic;\n        return f;\n    }\n}\n\nexport class Justify {\n    horizontal: \"left\" | \"center\" | \"right\" = \"center\";\n    vertical: \"top\" | \"center\" | \"bottom\" = \"center\";\n    mirror = false;\n\n    constructor(expr?: Parseable) {\n        if (expr) {\n            Object.assign(\n                this,\n                parse_expr(\n                    expr,\n                    P.start(\"justify\"),\n                    P.atom(\"horizontal\", [\"left\", \"right\"]),\n                    P.atom(\"vertical\", [\"top\", \"bottom\"]),\n                    P.atom(\"mirror\"),\n                ),\n            );\n        }\n    }\n\n    copy() {\n        const j = new Justify();\n        j.horizontal = this.horizontal;\n        j.vertical = this.vertical;\n        j.mirror = this.mirror;\n        return j;\n    }\n}\n\nexport class Stroke {\n    width: number;\n    type: \"dash\" | \"dot\" | \"dash_dot\" | \"dash_dot_dot\" | \"solid\" | \"default\" =\n        \"default\";\n    color: Color;\n\n    constructor(expr: Parseable) {\n        /* (stroke (width 0.508) (type default) (color 0 0 0 0)) */\n        Object.assign(\n            this,\n            parse_expr(\n                expr,\n                P.start(\"stroke\"),\n                P.pair(\"width\", T.number),\n                P.pair(\"type\", T.string),\n                P.color(),\n            ),\n        );\n    }\n}\n", "/*\n  Copyright (c) 2023 Alethea Katherine Flowers.\n  Published under the standard MIT License.\n  Full text available at: https://opensource.org/licenses/MIT\n*/\n\nimport { Angle, BBox, Arc as MathArc, Matrix3, Vec2 } from \"../base/math\";\nimport type { Project } from \"../kicanvas/project\";\nimport {\n  At,\n  Effects,\n  Paper,\n  Stroke,\n  TitleBlock,\n  expand_text_vars,\n} from \"./common\";\nimport { P, T, parse_expr, type Parseable } from \"./parser\";\nimport type { List } from \"./tokenizer\";\n\nexport class TextRenderCache {\n  text: string;\n  angle: 0;\n  polygons: Poly[];\n\n  constructor(expr: Parseable) {\n    Object.assign(\n      this,\n      parse_expr(\n        expr,\n        P.start(\"render_cache\"),\n        P.positional(\"text\", T.string),\n        P.positional(\"angle\", T.number),\n        P.collection(\"polygons\", \"polygon\", T.item(Poly)),\n      ),\n    );\n\n    for (const poly of this.polygons) {\n      poly.fill = \"solid\";\n    }\n  }\n}\n\nexport class Text {\n  parent?: Footprint | Dimension | KicadPCB;\n  text: string;\n  at: At;\n  layer: { name: string; knockout: boolean };\n  unlocked = false;\n  hide = false;\n  effects = new Effects();\n  tstamp: string;\n  render_cache: TextRenderCache;\n\n  static common_expr_defs = [\n    P.item(\"at\", At),\n    P.atom(\"hide\"),\n    P.atom(\"unlocked\"),\n    P.object(\n      \"layer\",\n      {},\n      P.positional(\"name\", T.string),\n      P.atom(\"knockout\"),\n    ),\n    P.pair(\"tstamp\", T.string),\n    P.item(\"effects\", Effects),\n    P.item(\"render_cache\", TextRenderCache),\n  ];\n\n  get shown_text() {\n    return expand_text_vars(this.text, this.parent);\n  }\n}\n\nexport type Drawing =\n  | GrLine\n  | GrCircle\n  | GrArc\n  | GrPoly\n  | GrRect\n  | GrText\n  | Dimension;\n\nexport class KicadPCB {\n  project?: Project;\n  version: number;\n  generator?: string;\n  general?: { thickness: number };\n  paper?: Paper;\n  title_block = new TitleBlock();\n  setup?: Setup;\n  properties = new Map<string, Property>();\n  layers: Layer[] = [];\n  nets: Net[] = [];\n  footprints: Footprint[] = [];\n  zones: Zone[] = [];\n  segments: (LineSegment | ArcSegment)[] = [];\n  vias: Via[] = [];\n  drawings: Drawing[] = [];\n  groups: Group[] = [];\n\n  constructor(\n    public filename: string,\n    expr: Parseable,\n  ) {\n    Object.assign(\n      this,\n      parse_expr(\n        expr,\n        P.start(\"kicad_pcb\"),\n        P.pair(\"version\", T.number),\n        P.pair(\"generator\", T.string),\n        P.object(\"general\", {}, P.pair(\"thickness\", T.number)),\n        P.item(\"paper\", Paper),\n        P.item(\"title_block\", TitleBlock),\n        P.list(\"layers\", T.item(Layer)),\n        P.item(\"setup\", Setup),\n        P.mapped_collection(\n          \"properties\",\n          \"property\",\n          (p: Property) => p.name,\n          T.item(Property, this),\n        ),\n        P.collection(\"nets\", \"net\", T.item(Net)),\n        P.collection(\n          \"footprints\",\n          \"footprint\",\n          T.item(Footprint, this),\n        ),\n        P.collection(\"zones\", \"zone\", T.item(Zone)),\n        P.collection(\"segments\", \"segment\", T.item(LineSegment)),\n        P.collection(\"segments\", \"arc\", T.item(ArcSegment)),\n        P.collection(\"vias\", \"via\", T.item(Via)),\n        P.collection(\"drawings\", \"dimension\", T.item(Dimension, this)),\n        P.collection(\"drawings\", \"gr_line\", T.item(GrLine)),\n        P.collection(\"drawings\", \"gr_circle\", T.item(GrCircle)),\n        P.collection(\"drawings\", \"gr_arc\", T.item(GrArc)),\n        P.collection(\"drawings\", \"gr_poly\", T.item(GrPoly)),\n        P.collection(\"drawings\", \"gr_rect\", T.item(GrRect)),\n        P.collection(\"drawings\", \"gr_text\", T.item(GrText, this)),\n        P.collection(\"groups\", \"group\", T.item(Group)),\n      ),\n    );\n  }\n\n  *items() {\n    yield* this.drawings;\n    yield* this.vias;\n    yield* this.segments;\n    yield* this.zones;\n    yield* this.footprints;\n  }\n\n  resolve_text_var(name: string): string | undefined {\n    if (name == \"FILENAME\") {\n      return this.filename;\n    }\n\n    if (this.properties.has(name)) {\n      return this.properties.get(name)!.value;\n    }\n\n    return this.title_block.resolve_text_var(name);\n  }\n\n  get edge_cuts_bbox(): BBox {\n    let bbox = new BBox(0, 0, 0, 0);\n    for (const item of this.drawings) {\n      if (item.layer != \"Edge.Cuts\" || !(item instanceof GraphicItem)) {\n        continue;\n      }\n      bbox = BBox.combine([bbox, item.bbox]);\n    }\n    return bbox;\n  }\n\n  find_footprint(uuid_or_ref: string) {\n    for (const fp of this.footprints) {\n      if (fp.uuid == uuid_or_ref || fp.reference == uuid_or_ref) {\n        return fp;\n      }\n    }\n    return null;\n  }\n}\n\nexport class Property extends Text {\n  name: string;\n  value: string;\n\n  type: \"reference\" | \"value\" | \"user\" = \"value\";\n  locked: boolean = false;\n\n  constructor(\n    expr: Parseable,\n    public override parent?: Footprint,\n  ) {\n    super();\n\n    Object.assign(\n      this,\n      parse_expr(\n        expr,\n        P.start(\"property\"),\n        P.positional(\"name\", T.string),\n        P.positional(\"value\", T.string),\n        ...Text.common_expr_defs,\n      ),\n    );\n\n    this.text = this.value;\n  }\n}\n\nexport class LineSegment {\n  start: Vec2;\n  end: Vec2;\n  width: number;\n  layer: string;\n  net: number;\n  locked = false;\n  tstamp: string;\n\n  constructor(expr: Parseable) {\n    /*\n      (segment\n      (start 119.1 82.943)\n      (end 120.0075 82.943)\n      (width 0.5)\n      (layer \"F.Cu\")\n      (net 1)\n      (tstamp 0766ea9a-c430-4922-b68d-6ad9f33e6672))\n    */\n    Object.assign(\n      this,\n      parse_expr(\n        expr,\n        P.start(\"segment\"),\n        P.vec2(\"start\"),\n        P.vec2(\"end\"),\n        P.pair(\"width\", T.number),\n        P.pair(\"layer\", T.string),\n        P.pair(\"net\", T.number),\n        P.atom(\"locked\"),\n        P.pair(\"tstamp\", T.string),\n      ),\n    );\n  }\n}\n\nexport class ArcSegment {\n  start: Vec2;\n  mid: Vec2;\n  end: Vec2;\n  width: number;\n  layer: string;\n  net: number;\n  locked = false;\n  tstamp: string;\n\n  constructor(expr: Parseable) {\n    /*\n      (arc\n      (start 115.25 59.05)\n      (mid 115.301256 58.926256)\n      (end 115.425 58.875)\n      (width 0.3)\n      (layer \"F.Cu\")\n      (net 1)\n      (tstamp 1c993ada-29b1-41b2-8ac1-a7f99ad99281))\n    */\n    Object.assign(\n      this,\n      parse_expr(\n        expr,\n        P.start(\"arc\"),\n        P.vec2(\"start\"),\n        P.vec2(\"mid\"),\n        P.vec2(\"end\"),\n        P.pair(\"width\", T.number),\n        P.pair(\"layer\", T.string),\n        P.pair(\"net\", T.number),\n        P.atom(\"locked\"),\n        P.pair(\"tstamp\", T.string),\n      ),\n    );\n  }\n}\n\nexport class Via {\n  type: \"blind\" | \"micro\" | \"through-hole\" = \"through-hole\";\n  at: At;\n  size: number;\n  drill: number;\n  layers: string[];\n  remove_unused_layers = false;\n  keep_end_layers = false;\n  locked = false;\n  free = false;\n  net: number;\n  tstamp: string;\n\n  constructor(expr: Parseable) {\n    Object.assign(\n      this,\n      parse_expr(\n        expr,\n        P.start(\"via\"),\n        P.atom(\"type\", [\"blind\", \"micro\", \"through-hole\"]),\n        P.item(\"at\", At),\n        P.pair(\"size\", T.number),\n        P.pair(\"drill\", T.number),\n        P.list(\"layers\", T.string),\n        P.pair(\"net\", T.number),\n        P.atom(\"locked\"),\n        P.atom(\"free\"),\n        P.atom(\"remove_unused_layers\"),\n        P.atom(\"keep_end_layers\"),\n        P.pair(\"tstamp\", T.string),\n      ),\n    );\n  }\n}\n\nexport class Zone {\n  locked = false;\n  net: number;\n  net_name: string;\n  name: string;\n  layer: string;\n  layers: string[];\n  hatch: { style: \"none\" | \"edge\" | \"full\"; pitch: number };\n  priority: number;\n  connect_pads: {\n    type?: \"yes\" | \"thru_hole_only\" | \"full\" | \"no\";\n    clearance: number;\n  };\n  min_thickness: number;\n  filled_areas_thickness: boolean;\n  keepout: ZoneKeepout;\n  fill: ZoneFill;\n  polygons: Poly[];\n  filled_polygons: FilledPolygon[];\n  tstamp: string;\n\n  constructor(\n    expr: Parseable,\n    public parent?: KicadPCB | Footprint,\n  ) {\n    Object.assign(\n      this,\n      parse_expr(\n        expr,\n        P.start(\"zone\"),\n        P.atom(\"locked\"),\n        P.pair(\"net\", T.number),\n        P.pair(\"net_name\", T.string),\n        P.pair(\"net_name\", T.string),\n        P.pair(\"name\", T.string),\n        P.pair(\"layer\", T.string),\n        P.list(\"layers\", T.string),\n        P.object(\n          \"hatch\",\n          {},\n          P.positional(\"style\", T.string),\n          P.positional(\"pitch\", T.number),\n        ),\n        P.pair(\"priority\", T.number),\n        P.object(\n          \"connect_pads\",\n          {},\n          P.positional(\"type\", T.string),\n          P.pair(\"clearance\", T.number),\n        ),\n        P.pair(\"min_thickness\", T.number),\n        P.pair(\"filled_areas_thickness\", T.boolean),\n        P.item(\"keepout\", ZoneKeepout),\n        P.item(\"fill\", ZoneFill),\n        P.collection(\"polygons\", \"polygon\", T.item(Poly)),\n        P.collection(\n          \"filled_polygons\",\n          \"filled_polygon\",\n          T.item(FilledPolygon),\n        ),\n        P.pair(\"tstamp\", T.string),\n      ),\n    );\n  }\n}\n\nexport class ZoneKeepout {\n  tracks: \"allowed\" | \"not_allowed\";\n  vias: \"allowed\" | \"not_allowed\";\n  pads: \"allowed\" | \"not_allowed\";\n  copperpour: \"allowed\" | \"not_allowed\";\n  footprints: \"allowed\" | \"not_allowed\";\n\n  constructor(expr: Parseable) {\n    Object.assign(\n      this,\n      parse_expr(\n        expr,\n        P.start(\"keepout\"),\n        P.pair(\"tracks\", T.string),\n        P.pair(\"vias\", T.string),\n        P.pair(\"pads\", T.string),\n        P.pair(\"copperpour\", T.string),\n        P.pair(\"footprints\", T.string),\n      ),\n    );\n  }\n}\n\nexport class ZoneFill {\n  fill = false;\n  mode: \"solid\" | \"hatch\" = \"solid\";\n  thermal_gap: number;\n  thermal_bridge_width: number;\n  smoothing: {\n    style: \"none\" | \"chamfer\" | \"fillet\";\n    radius: number;\n  };\n  radius: number;\n  island_removal_mode: 0 | 1 | 2;\n  island_area_min: number;\n  hatch_thickness: number;\n  hatch_gap: number;\n  hatch_orientation: number;\n  hatch_smoothing_level: 0 | 1 | 2 | 3;\n  hatch_smoothing_value: number;\n  hatch_border_algorithm: \"hatch_thickness\" | \"min_thickness\";\n  hatch_min_hole_area: number;\n\n  constructor(expr: Parseable) {\n    Object.assign(\n      this,\n      parse_expr(\n        expr,\n        P.start(\"fill\"),\n        P.positional(\"fill\", T.boolean),\n        P.pair(\"mode\", T.string),\n        P.pair(\"thermal_gap\", T.number),\n        P.pair(\"thermal_bridge_width\", T.number),\n        P.expr(\n          \"smoothing\",\n          T.object(\n            {},\n            P.positional(\"style\", T.string),\n            P.pair(\"radius\", T.number),\n          ),\n        ),\n        P.pair(\"radius\", T.number),\n        P.pair(\"island_removal_mode\", T.number),\n        P.pair(\"island_area_min\", T.number),\n        P.pair(\"hatch_thickness\", T.number),\n        P.pair(\"hatch_gap\", T.number),\n        P.pair(\"hatch_orientation\", T.number),\n        P.pair(\"hatch_smoothing_level\", T.number),\n        P.pair(\"hatch_smoothing_value\", T.number),\n        P.pair(\"hatch_border_algorithm\", T.string),\n        P.pair(\"hatch_min_hole_area\", T.number),\n      ),\n    );\n  }\n}\n\nexport class Layer {\n  ordinal: number;\n  canonical_name: string;\n  type: \"jumper\" | \"mixed\" | \"power\" | \"signal\" | \"user\";\n  user_name?: string;\n\n  constructor(expr: Parseable) {\n    Object.assign(\n      this,\n      parse_expr(\n        expr,\n        P.positional(\"ordinal\", T.number),\n        P.positional(\"canonical_name\", T.string),\n        P.positional(\"type\", T.string),\n        P.positional(\"user_name\", T.string),\n      ),\n    );\n  }\n}\n\nexport class Setup {\n  // stackup: Stackup;\n  pad_to_mask_clearance: number;\n  solder_mask_min_width: number;\n  pad_to_paste_clearance: number;\n  pad_to_paste_clearance_ratio: number;\n  aux_axis_origin: Vec2;\n  grid_origin: Vec2;\n  pcbplotparams: PCBPlotParams;\n  stackup: Stackup;\n\n  constructor(expr: Parseable) {\n    Object.assign(\n      this,\n      parse_expr(\n        expr,\n        P.start(\"setup\"),\n        P.pair(\"pad_to_mask_clearance\", T.number),\n        P.pair(\"solder_mask_min_width\", T.number),\n        P.pair(\"pad_to_paste_clearance\", T.number),\n        P.pair(\"pad_to_paste_clearance_ratio\", T.number),\n        P.vec2(\"aux_axis_origin\"),\n        P.vec2(\"grid_origin\"),\n        P.item(\"pcbplotparams\", PCBPlotParams),\n        P.item(\"stackup\", Stackup),\n      ),\n    );\n  }\n}\n\nexport class PCBPlotParams {\n  layerselection: number;\n  disableapertmacros = false;\n  usegerberextensions = false;\n  usegerberattributes = false;\n  usegerberadvancedattributes = false;\n  creategerberjobfile = false;\n  gerberprecision: number;\n  svguseinch = false;\n  svgprecision: number;\n  excludeedgelayer = false;\n  plotframeref = false;\n  viasonmask = false;\n  mode: number;\n  useauxorigin = false;\n  hpglpennumber: number;\n  hpglpenspeed: number;\n  hpglpendiameter: number;\n  dxfpolygonmode = false;\n  dxfimperialunits = false;\n  dxfusepcbnewfont = false;\n  psnegative = false;\n  psa4output = false;\n  plotreference = false;\n  plotvalue = false;\n  plotinvisibletext = false;\n  sketchpadsonfab = false;\n  subtractmaskfromsilk = false;\n  outputformat: number;\n  mirror = false;\n  drillshape: number;\n  scaleselection: number;\n  outputdirectory: string;\n  plot_on_all_layers_selection: number;\n  dashed_line_dash_ratio: number;\n  dashed_line_gap_ratio: number;\n\n  constructor(expr: Parseable) {\n    Object.assign(\n      this,\n      parse_expr(\n        expr,\n        P.start(\"pcbplotparams\"),\n        P.pair(\"layerselection\", T.number),\n        P.pair(\"disableapertmacros\", T.boolean),\n        P.pair(\"usegerberextensions\", T.boolean),\n        P.pair(\"usegerberattributes\", T.boolean),\n        P.pair(\"usegerberadvancedattributes\", T.boolean),\n        P.pair(\"creategerberjobfile\", T.boolean),\n        P.pair(\"gerberprecision\", T.number),\n        P.pair(\"svguseinch\", T.boolean),\n        P.pair(\"svgprecision\", T.number),\n        P.pair(\"excludeedgelayer\", T.boolean),\n        P.pair(\"plotframeref\", T.boolean),\n        P.pair(\"viasonmask\", T.boolean),\n        P.pair(\"mode\", T.number),\n        P.pair(\"useauxorigin\", T.boolean),\n        P.pair(\"hpglpennumber\", T.number),\n        P.pair(\"hpglpenspeed\", T.number),\n        P.pair(\"hpglpendiameter\", T.number),\n        P.pair(\"dxfpolygonmode\", T.boolean),\n        P.pair(\"dxfimperialunits\", T.boolean),\n        P.pair(\"dxfusepcbnewfont\", T.boolean),\n        P.pair(\"psnegative\", T.boolean),\n        P.pair(\"psa4output\", T.boolean),\n        P.pair(\"plotreference\", T.boolean),\n        P.pair(\"plotvalue\", T.boolean),\n        P.pair(\"plotinvisibletext\", T.boolean),\n        P.pair(\"sketchpadsonfab\", T.boolean),\n        P.pair(\"subtractmaskfromsilk\", T.boolean),\n        P.pair(\"outputformat\", T.number),\n        P.pair(\"mirror\", T.boolean),\n        P.pair(\"drillshape\", T.number),\n        P.pair(\"scaleselection\", T.number),\n        P.pair(\"outputdirectory\", T.string),\n        P.pair(\"plot_on_all_layers_selection\", T.number),\n        P.pair(\"dashed_line_dash_ratio\", T.number),\n        P.pair(\"dashed_line_gap_ratio\", T.number),\n      ),\n    );\n  }\n}\n\nexport class Stackup {\n  layers: StackupLayer[];\n  copper_finish: string;\n  dielectric_constraints = false;\n  edge_connector: string;\n  castellated_pads = false;\n  edge_plating = false;\n\n  constructor(expr: Parseable) {\n    Object.assign(\n      this,\n      parse_expr(\n        expr,\n        P.start(\"stackup\"),\n        P.pair(\"copper_finish\", T.string),\n        P.pair(\"dielectric_constraints\", T.boolean),\n        P.pair(\"edge_connector\", T.string),\n        P.pair(\"castellated_pads\", T.boolean),\n        P.pair(\"edge_plating\", T.boolean),\n        P.collection(\"layers\", \"layer\", T.item(StackupLayer)),\n      ),\n    );\n  }\n}\n\nexport class StackupLayer {\n  name: string;\n  type: string;\n  color: string;\n  thickness: number;\n  material: string;\n  epsilon_r: number;\n  loss_tangent: number;\n\n  constructor(expr: Parseable) {\n    Object.assign(\n      this,\n      parse_expr(\n        expr,\n        P.start(\"layer\"),\n        P.positional(\"name\", T.string),\n        P.pair(\"type\", T.string),\n        P.pair(\"color\", T.string),\n        P.pair(\"thickness\", T.number),\n        P.pair(\"material\", T.string),\n        P.pair(\"epsilon_r\", T.number),\n        P.pair(\"loss_tangent\", T.number),\n      ),\n    );\n  }\n}\n\nexport class Net {\n  number: number;\n  name: string;\n\n  constructor(expr: Parseable) {\n    // (net 2 \"+3V3\")\n    Object.assign(\n      this,\n      parse_expr(\n        expr,\n        P.start(\"net\"),\n        P.positional(\"number\", T.number),\n        P.positional(\"name\", T.string),\n      ),\n    );\n  }\n}\n\nexport class Dimension {\n  locked = false;\n  type: \"aligned\" | \"leader\" | \"center\" | \"orthogonal\" | \"radial\";\n  layer: string;\n  tstamp: string;\n  pts: Vec2[];\n  height: number;\n  orientation: number;\n  leader_length: number;\n  gr_text: GrText;\n  format: DimensionFormat;\n  style: DimensionStyle;\n\n  constructor(\n    expr: Parseable,\n    public parent: KicadPCB,\n  ) {\n    Object.assign(\n      this,\n      parse_expr(\n        expr,\n        P.start(\"dimension\"),\n        P.atom(\"locked\"),\n        P.pair(\"type\", T.string),\n        P.pair(\"layer\", T.string),\n        P.pair(\"tstamp\", T.string),\n        P.list(\"pts\", T.vec2),\n        P.pair(\"height\", T.number),\n        P.pair(\"orientation\", T.number),\n        P.pair(\"leader_length\", T.number),\n        P.item(\"gr_text\", GrText, this),\n        P.item(\"format\", DimensionFormat),\n        P.item(\"style\", DimensionStyle),\n      ),\n    );\n  }\n\n  resolve_text_var(name: string): string | undefined {\n    return this.parent.resolve_text_var(name);\n  }\n\n  get start(): Vec2 {\n    return this.pts.at(0) ?? new Vec2(0, 0);\n  }\n\n  get end(): Vec2 {\n    return this.pts.at(-1) ?? new Vec2(0, 0);\n  }\n}\n\nexport enum DimensionFormatUnits {\n  inches,\n  mils,\n  millimeters,\n  automatic,\n}\n\nexport enum DimensionFormatUnitsFormat {\n  none,\n  bare,\n  parenthesis,\n}\n\nexport class DimensionFormat {\n  prefix: string;\n  suffix: string;\n  units: DimensionFormatUnits;\n  units_format: DimensionFormatUnitsFormat;\n  precision: number;\n  override_value: string;\n  suppress_zeroes = false;\n\n  constructor(expr: Parseable) {\n    Object.assign(\n      this,\n      parse_expr(\n        expr,\n        P.start(\"format\"),\n        P.pair(\"prefix\", T.string),\n        P.pair(\"suffix\", T.string),\n        P.pair(\"units\", T.number),\n        P.pair(\"units_format\", T.number),\n        P.pair(\"precision\", T.number),\n        P.pair(\"override_value\", T.string),\n        P.atom(\"suppress_zeroes\"),\n      ),\n    );\n  }\n}\n\nexport enum DimensionStyleTextPositionMode {\n  outside,\n  inline,\n  manual,\n}\n\nexport enum DimensionStyleTextFrame {\n  none,\n  rect,\n  circle,\n  roundrect,\n}\n\nexport class DimensionStyle {\n  thickness: number;\n  arrow_length: number;\n  text_position_mode: DimensionStyleTextPositionMode;\n  extension_height: number;\n  text_frame: DimensionStyleTextFrame;\n  extension_offset: number;\n  keep_text_aligned: boolean;\n\n  constructor(expr: Parseable) {\n    Object.assign(\n      this,\n      parse_expr(\n        expr,\n        P.start(\"style\"),\n        P.pair(\"thickness\", T.number),\n        P.pair(\"arrow_length\", T.number),\n        P.pair(\"text_position_mode\", T.number),\n        P.pair(\"extension_height\", T.number),\n        P.pair(\"text_frame\", T.number),\n        P.pair(\"extension_offset\", T.number),\n        P.atom(\"keep_text_aligned\"),\n      ),\n    );\n  }\n}\n\ntype FootprintDrawings = FpLine | FpCircle | FpArc | FpPoly | FpRect | FpText;\n\nexport class Footprint {\n  at: At;\n  reference: string;\n  value: string;\n  library_link: string;\n  version: number;\n  generator: string;\n  locked = false;\n  placed = false;\n  layer: string;\n  tedit: string;\n  tstamp: string;\n  descr: string;\n  tags: string;\n  path: string;\n  autoplace_cost90: number;\n  autoplace_cost180: number;\n  solder_mask_margin: number;\n  solder_paste_margin: number;\n  solder_paste_ratio: number;\n  clearance: number;\n  zone_connect: number;\n  thermal_width: number;\n  thermal_gap: number;\n  attr: {\n    through_hole: boolean;\n    smd: boolean;\n    virtual: boolean;\n    board_only: boolean;\n    exclude_from_pos_files: boolean;\n    exclude_from_bom: boolean;\n    allow_solder_mask_bridges: boolean;\n    allow_missing_courtyard: boolean;\n  } = {\n      through_hole: false,\n      smd: false,\n      virtual: false,\n      board_only: false,\n      exclude_from_pos_files: false,\n      exclude_from_bom: false,\n      allow_solder_mask_bridges: false,\n      allow_missing_courtyard: false,\n    };\n  properties = new Map<string, Property>();\n  drawings: FootprintDrawings[] = [];\n  pads: Pad[] = [];\n  #pads_by_number = new Map<string, Pad>();\n  zones: Zone[] = [];\n  models: Model[] = [];\n  #bbox: BBox;\n\n  constructor(\n    expr: Parseable,\n    public parent: KicadPCB,\n  ) {\n    Object.assign(\n      this,\n      parse_expr(\n        expr,\n        P.start(\"footprint\"),\n        P.positional(\"library_link\", T.string),\n        P.pair(\"version\", T.number),\n        P.pair(\"generator\", T.string),\n        P.atom(\"locked\"),\n        P.atom(\"placed\"),\n        P.pair(\"layer\", T.string),\n        P.pair(\"tedit\", T.string),\n        P.pair(\"tstamp\", T.string),\n        P.item(\"at\", At),\n        P.pair(\"descr\", T.string),\n        P.pair(\"tags\", T.string),\n        P.pair(\"path\", T.string),\n        P.pair(\"autoplace_cost90\", T.number),\n        P.pair(\"autoplace_cost180\", T.number),\n        P.pair(\"solder_mask_margin\", T.number),\n        P.pair(\"solder_paste_margin\", T.number),\n        P.pair(\"solder_paste_ratio\", T.number),\n        P.pair(\"clearance\", T.number),\n        P.pair(\"zone_connect\", T.number),\n        P.pair(\"thermal_width\", T.number),\n        P.pair(\"thermal_gap\", T.number),\n        P.object(\n          \"attr\",\n          this.attr,\n          P.atom(\"through_hole\"),\n          P.atom(\"smd\"),\n          P.atom(\"virtual\"),\n          P.atom(\"board_only\"),\n          P.atom(\"exclude_from_pos_files\"),\n          P.atom(\"exclude_from_bom\"),\n          P.atom(\"allow_solder_mask_bridges\"),\n          P.atom(\"allow_missing_courtyard\"),\n        ),\n        //P.dict(\"properties\", \"property\", T.string),\n        P.mapped_collection(\n          \"properties\",\n          \"property\",\n          (p: Property) => p.name,\n          T.item(Property, this),\n        ),\n        P.collection(\"drawings\", \"fp_line\", T.item(FpLine, this)),\n        P.collection(\"drawings\", \"fp_circle\", T.item(FpCircle, this)),\n        P.collection(\"drawings\", \"fp_arc\", T.item(FpArc, this)),\n        P.collection(\"drawings\", \"fp_poly\", T.item(FpPoly, this)),\n        P.collection(\"drawings\", \"fp_rect\", T.item(FpRect, this)),\n        P.collection(\"drawings\", \"fp_text\", T.item(FpText, this)),\n        P.collection(\"zones\", \"zone\", T.item(Zone, this)),\n        P.collection(\"models\", \"model\", T.item(Model)),\n        P.collection(\"pads\", \"pad\", T.item(Pad, this)),\n      ),\n    );\n\n    for (const pad of this.pads) {\n      this.#pads_by_number.set(pad.number, pad);\n    }\n\n    for (const d of this.drawings) {\n      if (!(d instanceof FpText)) {\n        continue;\n      }\n\n      if (d.type == \"reference\") {\n        this.reference = d.text;\n      }\n      if (d.type == \"value\") {\n        this.value = d.text;\n      }\n    }\n  }\n\n  get uuid() {\n    return this.tstamp;\n  }\n\n  *items(): Generator<FootprintDrawings | Pad | Zone | Text, void, undefined> {\n    yield* this.drawings ?? [];\n    yield* this.zones ?? [];\n    yield* this.pads.values() ?? [];\n    if (this.properties.has(\"Value\")) {\n      yield* [this.properties.get(\"Value\")!];\n    }\n  }\n\n  resolve_text_var(name: string): string | undefined {\n    switch (name) {\n      case \"REFERENCE\":\n        return this.properties.get('Reference')?.value ?? this.reference;\n      case \"VALUE\":\n        return this.properties.get('Value')?.value ?? this.value;\n      case \"LAYER\":\n        return this.layer;\n      case \"FOOTPRINT_LIBRARY\":\n        return this.library_link.split(\":\").at(0);\n      case \"FOOTPRINT_NAME\":\n        return this.library_link.split(\":\").at(-1);\n    }\n\n    const pad_expr = /^(NET_NAME|NET_CLASS|PIN_NAME)\\(.+?\\)$/.exec(name);\n\n    if (pad_expr?.length == 3) {\n      const [_, expr_type, pad_name] = pad_expr as unknown as [\n        string,\n        string,\n        string,\n      ];\n      switch (expr_type) {\n        case \"NET_NAME\":\n          return this.pad_by_number(pad_name)?.net.number.toString();\n        case \"NET_CLASS\":\n          return this.pad_by_number(pad_name)?.net.name;\n        case \"PIN_NAME\":\n          return this.pad_by_number(pad_name)?.pinfunction;\n      }\n    }\n\n    if (this.properties.has(name)) {\n      return this.properties.get(name)!.value;\n    }\n\n    return this.parent.resolve_text_var(name);\n  }\n\n  pad_by_number(number: string): Pad {\n    return this.#pads_by_number.get(number)!;\n  }\n\n  /**\n   * Get the nominal bounding box for this footprint.\n   *\n   * This does not take into account text drawings.\n   */\n  get bbox() {\n    if (!this.#bbox) {\n      // Based on FOOTPRINT::GetBoundingBox, excludes text items.\n\n      // start with a small bbox centered on the footprint's position,\n      // so that even if there aren't any items there's still *some*\n      // footprint.\n      let bbox = new BBox(\n        this.at.position.x - 0.25,\n        this.at.position.y - 0.25,\n        0.5,\n        0.5,\n      );\n\n      const matrix = Matrix3.translation(\n        this.at.position.x,\n        this.at.position.y,\n      ).rotate_self(Angle.deg_to_rad(this.at.rotation));\n\n      for (const item of this.drawings) {\n        if (item instanceof FpText) {\n          continue;\n        }\n\n        bbox = BBox.combine([bbox, item.bbox.transform(matrix)]);\n      }\n\n      bbox.context = this;\n      this.#bbox = bbox;\n    }\n    return this.#bbox;\n  }\n}\n\nclass GraphicItem {\n  parent?: Footprint;\n  layer: string;\n  tstamp: string;\n  locked = false;\n\n  /**\n   * Get the nominal bounding box for the item. This does not include any\n   * stroke or other expansion.\n   */\n  get bbox() {\n    return new BBox(0, 0, 0, 0);\n  }\n}\n\nexport class Line extends GraphicItem {\n  static expr_start = \"unset\";\n\n  start: Vec2;\n  end: Vec2;\n  width: number;\n  stroke: Stroke;\n\n  constructor(\n    expr: Parseable,\n    public override parent?: Footprint,\n  ) {\n    super();\n\n    const static_this = this.constructor as typeof Line;\n\n    Object.assign(\n      this,\n      parse_expr(\n        expr,\n        P.start(static_this.expr_start),\n        P.atom(\"locked\"),\n        P.pair(\"layer\", T.string),\n        P.vec2(\"start\"),\n        P.vec2(\"end\"),\n        P.pair(\"width\", T.number),\n        P.pair(\"tstamp\", T.string),\n        P.item(\"stroke\", Stroke),\n      ),\n    );\n\n    this.width ??= this.stroke?.width || 0;\n  }\n\n  override get bbox() {\n    return BBox.from_points([this.start, this.end]);\n  }\n}\n\nexport class GrLine extends Line {\n  static override expr_start = \"gr_line\";\n}\n\nexport class FpLine extends Line {\n  static override expr_start = \"fp_line\";\n}\n\nexport class Circle extends GraphicItem {\n  static expr_start = \"unset\";\n  center: Vec2;\n  end: Vec2;\n  width: number;\n  fill: string;\n  stroke: Stroke;\n\n  constructor(\n    expr: Parseable,\n    public override parent?: Footprint,\n  ) {\n    super();\n\n    const static_this = this.constructor as typeof Circle;\n\n    Object.assign(\n      this,\n      parse_expr(\n        expr,\n        P.start(static_this.expr_start),\n        P.atom(\"locked\"),\n        P.vec2(\"center\"),\n        P.vec2(\"end\"),\n        P.pair(\"width\", T.number),\n        P.pair(\"fill\", T.string),\n        P.pair(\"layer\", T.string),\n        P.pair(\"tstamp\", T.string),\n        P.item(\"stroke\", Stroke),\n      ),\n    );\n\n    this.width ??= this.stroke?.width || 0;\n  }\n\n  override get bbox() {\n    const radius = this.center.sub(this.end).magnitude;\n    const radial = new Vec2(radius, radius);\n    return BBox.from_points([\n      this.center.sub(radial),\n      this.center.add(radial),\n    ]);\n  }\n}\n\nexport class GrCircle extends Circle {\n  static override expr_start = \"gr_circle\";\n}\n\nexport class FpCircle extends Circle {\n  static override expr_start = \"fp_circle\";\n}\n\nexport class Arc extends GraphicItem {\n  static expr_start = \"unset\";\n  start: Vec2;\n  mid: Vec2;\n  end: Vec2;\n  width: number;\n  stroke: Stroke;\n  #arc: MathArc;\n\n  constructor(\n    expr: Parseable,\n    public override parent?: Footprint,\n  ) {\n    super();\n\n    const static_this = this.constructor as typeof Arc;\n\n    const parsed = parse_expr(\n      expr,\n      P.start(static_this.expr_start),\n      P.atom(\"locked\"),\n      P.pair(\"layer\", T.string),\n      P.vec2(\"start\"),\n      P.vec2(\"mid\"),\n      P.vec2(\"end\"),\n      P.pair(\"angle\", T.number),\n      P.pair(\"width\", T.number),\n      P.pair(\"tstamp\", T.string),\n      P.item(\"stroke\", Stroke),\n    );\n\n    // Handle old format.\n    // See LEGACY_ARC_FORMATTING and EDA_SHAPE::SetArcAngleAndEnd\n    if (parsed[\"angle\"] !== undefined) {\n      const angle = Angle.from_degrees(parsed[\"angle\"]).normalize720();\n      const center = parsed[\"start\"];\n      let start = parsed[\"end\"];\n\n      let end = angle.negative().rotate_point(start, center);\n\n      if (angle.degrees < 0) {\n        [start, end] = [end, start];\n      }\n\n      this.#arc = MathArc.from_center_start_end(\n        center,\n        start,\n        end,\n        parsed[\"width\"],\n      );\n\n      parsed[\"start\"] = this.#arc.start_point;\n      parsed[\"mid\"] = this.#arc.mid_point;\n      parsed[\"end\"] = this.#arc.end_point;\n\n      delete parsed[\"angle\"];\n    } else {\n      this.#arc = MathArc.from_three_points(\n        parsed[\"start\"],\n        parsed[\"mid\"],\n        parsed[\"end\"],\n        parsed[\"width\"],\n      );\n    }\n\n    Object.assign(this, parsed);\n\n    this.width ??= this.stroke?.width ?? this.#arc.width;\n    this.#arc.width = this.width;\n  }\n\n  get arc() {\n    return this.#arc;\n  }\n\n  override get bbox() {\n    return this.arc.bbox;\n  }\n}\n\nexport class GrArc extends Arc {\n  static override expr_start = \"gr_arc\";\n}\n\nexport class FpArc extends Arc {\n  static override expr_start = \"fp_arc\";\n}\n\nexport class Poly extends GraphicItem {\n  static expr_start = \"polygon\";\n\n  pts: Vec2[];\n  width: number;\n  fill: string;\n  island: boolean;\n  stroke: Stroke;\n\n  constructor(\n    expr: Parseable,\n    public override parent?: Footprint,\n  ) {\n    super();\n\n    const static_this = this.constructor as typeof Poly;\n\n    Object.assign(\n      this,\n      parse_expr(\n        expr,\n        P.start(static_this.expr_start),\n        P.atom(\"locked\"),\n        P.pair(\"layer\", T.string),\n        P.atom(\"island\"),\n        P.list(\"pts\", T.vec2),\n        P.pair(\"width\", T.number),\n        P.pair(\"fill\", T.string),\n        P.pair(\"tstamp\", T.string),\n        P.item(\"stroke\", Stroke),\n      ),\n    );\n\n    this.width ??= this.stroke?.width || 0;\n  }\n\n  override get bbox(): BBox {\n    return BBox.from_points(this.pts);\n  }\n}\n\nexport class FilledPolygon extends Poly {\n  static override expr_start = \"filled_polygon\";\n}\n\nexport class GrPoly extends Poly {\n  static override expr_start = \"gr_poly\";\n}\n\nexport class FpPoly extends Poly {\n  static override expr_start = \"fp_poly\";\n}\n\nexport class Rect extends GraphicItem {\n  static expr_start = \"rect\";\n\n  start: Vec2;\n  end: Vec2;\n  width: number;\n  fill: string;\n  stroke: Stroke;\n\n  constructor(\n    expr: Parseable,\n    public override parent?: Footprint,\n  ) {\n    super();\n\n    const static_this = this.constructor as typeof Rect;\n\n    Object.assign(\n      this,\n      parse_expr(\n        expr,\n        P.start(static_this.expr_start),\n        P.atom(\"locked\"),\n        P.vec2(\"start\"),\n        P.vec2(\"end\"),\n        P.pair(\"layer\", T.string),\n        P.pair(\"width\", T.number),\n        P.pair(\"fill\", T.string),\n        P.pair(\"tstamp\", T.string),\n        P.item(\"stroke\", Stroke),\n      ),\n    );\n\n    this.width ??= this.stroke?.width || 0;\n  }\n\n  override get bbox(): BBox {\n    return BBox.from_points([this.start, this.end]);\n  }\n}\n\nexport class GrRect extends Rect {\n  static override expr_start = \"gr_rect\";\n}\n\nexport class FpRect extends Rect {\n  static override expr_start = \"fp_rect\";\n}\n\nexport class FpText extends Text {\n  type: \"reference\" | \"value\" | \"user\";\n  locked: boolean = false;\n\n  constructor(\n    expr: Parseable,\n    public override parent?: Footprint,\n  ) {\n    super();\n\n    Object.assign(\n      this,\n      parse_expr(\n        expr,\n        P.start(\"fp_text\"),\n        P.atom(\"locked\"),\n        P.positional(\"type\", T.string),\n        P.positional(\"text\", T.string),\n        ...Text.common_expr_defs,\n      ),\n    );\n  }\n}\n\nexport class GrText extends Text {\n  locked: boolean = false;\n\n  constructor(\n    expr: Parseable,\n    public override parent: Footprint | Dimension | KicadPCB,\n  ) {\n    super();\n\n    Object.assign(\n      this,\n      parse_expr(\n        expr,\n        P.start(\"gr_text\"),\n        P.atom(\"locked\"),\n        P.positional(\"text\", T.string),\n        ...Text.common_expr_defs,\n      ),\n    );\n  }\n}\n\nexport class Pad {\n  number: string; // I hate this\n  type: \"thru_hole\" | \"smd\" | \"connect\" | \"np_thru_hole\" = \"thru_hole\";\n  shape: \"circle\" | \"rect\" | \"oval\" | \"trapezoid\" | \"roundrect\" | \"custom\";\n  locked = false;\n  at: At;\n  size: Vec2;\n  rect_delta: Vec2;\n  layers: string[];\n  roundrect_rratio: number;\n  chamfer_ratio: number;\n  chamfer?: {\n    top_left?: boolean;\n    top_right?: boolean;\n    bottom_right?: boolean;\n    bottom_left?: boolean;\n  };\n  pinfunction: string;\n  pintype: string;\n  solder_mask_margin: number;\n  solder_paste_margin: number;\n  solder_paste_margin_ratio: number;\n  clearance: number;\n  thermal_width: number;\n  thermal_gap: number;\n  thermal_bridge_angle: number;\n  zone_connect: number;\n  drill: PadDrill;\n  net: Net;\n  options: PadOptions;\n  primitives: (GrLine | GrCircle | GrArc | GrRect | GrPoly)[];\n\n  constructor(\n    expr: Parseable,\n    public parent: Footprint,\n  ) {\n    const parsed = parse_expr(\n      expr,\n      P.start(\"pad\"),\n      P.positional(\"number\", T.string),\n      P.positional(\"type\", T.string),\n      P.positional(\"shape\", T.string),\n      P.item(\"at\", At),\n      P.atom(\"locked\"),\n      P.vec2(\"size\"),\n      P.vec2(\"rect_delta\"),\n      P.list(\"layers\", T.string),\n      P.pair(\"roundrect_rratio\", T.number),\n      P.pair(\"chamfer_ratio\", T.number),\n      P.expr(\n        \"chamfer\",\n        T.object(\n          {},\n          P.atom(\"top_right\"),\n          P.atom(\"top_left\"),\n          P.atom(\"bottom_right\"),\n          P.atom(\"bottom_left\"),\n        ),\n      ),\n      P.pair(\"pinfunction\", T.string),\n      P.pair(\"pintype\", T.string),\n      P.pair(\"solder_mask_margin\", T.number),\n      P.pair(\"solder_paste_margin\", T.number),\n      P.pair(\"solder_paste_margin_ratio\", T.number),\n      P.pair(\"clearance\", T.number),\n      P.pair(\"thermal_width\", T.number),\n      P.pair(\"thermal_gap\", T.number),\n      P.pair(\"thermal_bridge_angle\", T.number),\n      P.pair(\"zone_connect\", T.number),\n      P.pair(\"tstamp\", T.string),\n      P.item(\"drill\", PadDrill),\n      P.item(\"net\", Net),\n      P.item(\"options\", PadOptions),\n      P.expr(\"primitives\", (obj, name, expr) => {\n        const parsed = parse_expr(\n          expr as List,\n          P.start(\"primitives\"),\n          P.collection(\"items\", \"gr_line\", T.item(GrLine, this)),\n          P.collection(\"items\", \"gr_circle\", T.item(GrCircle, this)),\n          P.collection(\"items\", \"gr_arc\", T.item(GrArc, this)),\n          P.collection(\"items\", \"gr_rect\", T.item(GrRect, this)),\n          P.collection(\"items\", \"gr_poly\", T.item(GrPoly, this)),\n        );\n        return (parsed as { items: any[] })?.[\"items\"];\n      }),\n    );\n\n    Object.assign(this, parsed);\n  }\n}\n\nexport class PadDrill {\n  oval = false;\n  diameter = 0;\n  width = 0;\n  offset: Vec2 = new Vec2(0, 0);\n\n  constructor(expr: Parseable) {\n    Object.assign(\n      this,\n      parse_expr(\n        expr,\n        P.start(\"drill\"),\n        P.atom(\"oval\"),\n        P.positional(\"diameter\", T.number),\n        P.positional(\"width\", T.number),\n        P.vec2(\"offset\"),\n      ),\n    );\n  }\n}\n\nexport class PadOptions {\n  clearance: \"outline\" | \"convexhull\";\n  anchor: \"rect\" | \"circle\";\n\n  constructor(expr: Parseable) {\n    Object.assign(\n      this,\n      parse_expr(\n        expr,\n        P.start(\"options\"),\n        P.pair(\"clearance\", T.string),\n        P.pair(\"anchor\", T.string),\n      ),\n    );\n  }\n}\n\nexport class Model {\n  filename: string;\n  offset: { xyz: number[] };\n  scale: { xyz: number[] };\n  rotate: { xyz: number[] };\n  hide = false;\n  opacity = 1;\n\n  constructor(expr: Parseable) {\n    Object.assign(\n      this,\n      parse_expr(\n        expr,\n        P.start(\"model\"),\n        P.positional(\"filename\", T.string),\n        P.atom(\"hide\"),\n        P.pair(\"opacity\", T.number),\n        P.object(\"offset\", {}, P.list(\"xyz\", T.number)),\n        P.object(\"scale\", {}, P.list(\"xyz\", T.number)),\n        P.object(\"rotate\", {}, P.list(\"xyz\", T.number)),\n      ),\n    );\n  }\n}\n\nexport class Group {\n  name: string;\n  id: string;\n  locked = false;\n  members: string[];\n\n  constructor(expr: Parseable) {\n    Object.assign(\n      this,\n      parse_expr(\n        expr,\n        P.start(\"group\"),\n        P.positional(\"name\", T.string),\n        P.atom(\"locked\"),\n        P.pair(\"id\", T.string),\n        P.list(\"members\", T.string),\n      ),\n    );\n  }\n}\n", "/*\n    Copyright (c) 2023 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nimport { Color } from \"../base/color\";\nimport * as log from \"../base/log\";\nimport { Arc as MathArc, Vec2 } from \"../base/math\";\nimport type { Project } from \"../kicanvas/project\";\nimport {\n    At,\n    Effects,\n    Paper,\n    Stroke,\n    TitleBlock,\n    expand_text_vars,\n    unescape_string,\n} from \"./common\";\nimport { P, T, parse_expr, type Parseable } from \"./parser\";\n\n/* Default values for various things found in schematics\n * From EESchema's default_values.h, converted from mils to mm. */\nexport const DefaultValues = {\n    /* The size of the rectangle indicating an unconnected wire or label */\n    dangling_symbol_size: 0.3048, // 12 mils\n\n    /* The size of the rectangle indicating a connected, unselected wire end */\n    unselected_end_size: 0.1016, // 4 mils\n\n    pin_length: 2.54, // 100 mils\n    pinsymbol_size: 0.635, // 25 mils\n    pinnum_size: 1.27, // 50 mils\n    pinname_size: 1.27, // 50 mils\n    selection_thickness: 0.0762, // 3 mils\n    line_width: 0.1524, // 6 mils\n    wire_width: 0.1524, // 6 mils\n    bus_width: 0.3048, // 12 mils\n    noconnect_size: 1.2192, // 48 mils\n    junction_diameter: 0.9144, // 36 mils\n    target_pin_radius: 0.381, // 15 mils\n\n    /* The default bus and wire entry size. */\n    sch_entry_size: 2.54, // 100 mils\n\n    text_size: 1.27, // 50 mils\n\n    /* Ratio of the font height to the baseline of the text above the wire. */\n    text_offset_ratio: 0.15, // unitless ratio\n\n    /* Ratio of the font height to space around global labels */\n    label_size_ratio: 0.375, // unitless ratio\n\n    /* The offset of the pin name string from the end of the pin in mils. */\n    pin_name_offset: 0.508, // 20 mils\n};\n\nexport class KicadSch {\n    project?: Project;\n    version: number;\n    generator?: string;\n    uuid: string;\n    paper?: Paper;\n    title_block = new TitleBlock();\n    lib_symbols?: LibSymbols;\n    wires: Wire[] = [];\n    buses: Bus[] = [];\n    bus_entries: BusEntry[] = [];\n    bus_aliases: BusAlias[] = [];\n    junctions: Junction[] = [];\n    net_labels: NetLabel[] = [];\n    global_labels: GlobalLabel[] = [];\n    hierarchical_labels: HierarchicalLabel[] = [];\n    symbols = new Map<string, SchematicSymbol>();\n    no_connects: NoConnect[] = [];\n    drawings: (Polyline | Text)[] = [];\n    images: Image[] = [];\n    sheet_instances?: SheetInstances;\n    symbol_instances?: SymbolInstances;\n    sheets: SchematicSheet[] = [];\n\n    constructor(\n        public filename: string,\n        expr: Parseable,\n    ) {\n        Object.assign(\n            this,\n            parse_expr(\n                expr,\n                P.start(\"kicad_sch\"),\n                P.pair(\"version\", T.number),\n                P.pair(\"generator\", T.string),\n                P.pair(\"uuid\", T.string),\n                P.item(\"paper\", Paper),\n                P.item(\"title_block\", TitleBlock),\n                P.item(\"lib_symbols\", LibSymbols, this),\n                P.collection(\"wires\", \"wire\", T.item(Wire)),\n                P.collection(\"buses\", \"bus\", T.item(Bus)),\n                P.collection(\"bus_entries\", \"bus_entry\", T.item(BusEntry)),\n                P.collection(\"bus_aliases\", \"bus_alias\", T.item(BusAlias)),\n                P.collection(\"junctions\", \"junction\", T.item(Junction)),\n                P.collection(\"no_connects\", \"no_connect\", T.item(NoConnect)),\n                P.collection(\"net_labels\", \"label\", T.item(NetLabel)),\n                P.collection(\n                    \"global_labels\",\n                    \"global_label\",\n                    T.item(GlobalLabel, this),\n                ),\n                P.collection(\n                    \"hierarchical_labels\",\n                    \"hierarchical_label\",\n                    T.item(HierarchicalLabel, this),\n                ),\n                // images\n                P.mapped_collection(\n                    \"symbols\",\n                    \"symbol\",\n                    (p: SchematicSymbol) => p.uuid,\n                    T.item(SchematicSymbol, this),\n                ),\n                P.collection(\"drawings\", \"polyline\", T.item(Polyline, this)),\n                P.collection(\"drawings\", \"rectangle\", T.item(Rectangle, this)),\n                P.collection(\"drawings\", \"arc\", T.item(Arc, this)),\n                P.collection(\"drawings\", \"text\", T.item(Text, this)),\n                P.collection(\"images\", \"image\", T.item(Image)),\n                P.item(\"sheet_instances\", SheetInstances),\n                P.item(\"symbol_instances\", SymbolInstances),\n                P.collection(\"sheets\", \"sheet\", T.item(SchematicSheet, this)),\n            ),\n        );\n\n        this.update_hierarchical_data();\n    }\n\n    update_hierarchical_data(path?: string) {\n        // Assigns SchematicSymbol properties based on data in symbol_instances,\n        // used for differing values in hierarchical sheet instances.\n        // See SCH_SHEET_LIST::UpdateSymbolInstanceData\n        path ??= ``;\n\n        const root_symbol_instances = (\n            this.project?.root_schematic_page?.document as KicadSch\n        )?.symbol_instances;\n        const global_symbol_instances = this.symbol_instances;\n\n        for (const s of this.symbols.values()) {\n            const symbol_path = `${path}/${s.uuid}`;\n            const instance_data =\n                root_symbol_instances?.get(symbol_path) ??\n                global_symbol_instances?.get(symbol_path) ??\n                s.instances.get(path);\n\n            if (!instance_data) {\n                continue;\n            }\n\n            s.reference = instance_data.reference ?? s.reference;\n            s.value = instance_data.value ?? s.value;\n            s.footprint = instance_data.footprint ?? s.footprint;\n            s.unit = instance_data.unit ?? s.unit;\n        }\n\n        // See SCH_SHEET_LIST::UpdateSheetInstanceData\n        const root_sheet_instances = (\n            this.project?.root_schematic_page?.document as KicadSch\n        )?.sheet_instances;\n        const global_sheet_instances = this.sheet_instances;\n\n        for (const s of this.sheets) {\n            const sheet_path = `${path}/${s.uuid}`;\n            const instance_data =\n                root_sheet_instances?.get(sheet_path) ??\n                global_sheet_instances?.get(sheet_path) ??\n                s.instances.get(path);\n\n            if (!instance_data) {\n                continue;\n            }\n\n            s.page = instance_data.page;\n            s.path = instance_data.path;\n\n            if (!s.instances.size) {\n                const inst = new SchematicSheetInstance();\n                inst.page = instance_data.page;\n                inst.path = instance_data.path;\n                s.instances.set(\"\", inst);\n            }\n        }\n    }\n\n    *items() {\n        yield* this.wires;\n        yield* this.buses;\n        yield* this.bus_entries;\n        yield* this.junctions;\n        yield* this.net_labels;\n        yield* this.global_labels;\n        yield* this.hierarchical_labels;\n        yield* this.no_connects;\n        yield* this.symbols.values();\n        yield* this.drawings;\n        yield* this.images;\n        yield* this.sheets;\n    }\n\n    find_symbol(uuid_or_ref: string) {\n        if (this.symbols.has(uuid_or_ref)) {\n            return this.symbols.get(uuid_or_ref)!;\n        }\n        for (const sym of this.symbols.values()) {\n            if (sym.uuid == uuid_or_ref || sym.reference == uuid_or_ref) {\n                return sym;\n            }\n        }\n        return null;\n    }\n\n    find_sheet(uuid: string) {\n        for (const sheet of this.sheets) {\n            if (sheet.uuid == uuid) {\n                return sheet;\n            }\n        }\n        return null;\n    }\n\n    resolve_text_var(name: string): string | undefined {\n        if (name == \"FILENAME\") {\n            return this.filename;\n        }\n\n        // Cross-reference\n        if (name.includes(\":\")) {\n            const [uuid, field_name] = name.split(\":\") as [string, string];\n            const symbol = this.symbols.get(uuid);\n\n            if (symbol) {\n                return symbol.resolve_text_var(field_name);\n            }\n        }\n\n        return this.title_block.resolve_text_var(name);\n    }\n}\n\nexport class Fill {\n    type: \"none\" | \"outline\" | \"background\" | \"color\";\n    color: Color;\n\n    constructor(expr: Parseable) {\n        /* (fill (type none)) */\n        Object.assign(\n            this,\n            parse_expr(\n                expr,\n                P.start(\"fill\"),\n                P.pair(\"type\", T.string),\n                P.color(),\n            ),\n        );\n    }\n}\n\nexport class GraphicItem {\n    parent?: LibSymbol | SchematicSymbol;\n    private = false;\n    stroke?: Stroke;\n    fill?: Fill;\n    uuid?: string;\n\n    constructor(parent?: LibSymbol | SchematicSymbol) {\n        this.parent = parent;\n    }\n\n    static common_expr_defs = [\n        P.atom(\"private\"),\n        P.item(\"stroke\", Stroke),\n        P.item(\"fill\", Fill),\n        P.pair(\"uuid\", T.string),\n    ];\n}\n\nexport class Wire {\n    pts: Vec2[];\n    uuid: string;\n    stroke: Stroke;\n\n    constructor(expr: Parseable) {\n        /* (wire (pts (xy 43.18 195.58) (xy 31.75 195.58))\n            (stroke (width 0) (type default) (color 0 0 0 0))\n            (uuid 038156ee-7718-4322-b7b7-38f0697322c2)) */\n        Object.assign(\n            this,\n            parse_expr(\n                expr,\n                P.start(\"wire\"),\n                P.list(\"pts\", T.vec2),\n                P.item(\"stroke\", Stroke),\n                P.pair(\"uuid\", T.string),\n            ),\n        );\n    }\n}\n\nexport class Bus {\n    pts: Vec2[];\n    uuid: string;\n    stroke: Stroke;\n\n    constructor(expr: Parseable) {\n        /* (bus (pts (xy 43.18 195.58) (xy 31.75 195.58))\n            (stroke (width 0) (type default) (color 0 0 0 0))\n            (uuid 038156ee-7718-4322-b7b7-38f0697322c2)) */\n        Object.assign(\n            this,\n            parse_expr(\n                expr,\n                P.start(\"bus\"),\n                P.list(\"pts\", T.vec2),\n                P.item(\"stroke\", Stroke),\n                P.pair(\"uuid\", T.string),\n            ),\n        );\n    }\n}\n\nexport class BusEntry {\n    at: At;\n    size: Vec2;\n    uuid: string;\n    stroke: Stroke;\n\n    constructor(expr: Parseable) {\n        /* (bus_entry (at 10 0) (size 2.54 2.54)\n            (stroke (width 0) (type default) (color 0 0 0 0))\n            (uuid 3b641c0a-296a-4bcf-b805-e697e8b794d1))*/\n        Object.assign(\n            this,\n            parse_expr(\n                expr,\n                P.start(\"bus_entry\"),\n                P.item(\"at\", At),\n                P.vec2(\"size\"),\n                P.item(\"stroke\", Stroke),\n                P.pair(\"uuid\", T.string),\n            ),\n        );\n    }\n}\n\nexport class BusAlias {\n    name: string;\n    members: string[] = [];\n\n    constructor(expr: Parseable) {\n        /* (bus_alias \"abusalias\" (members \"member1\" \"member2\")) */\n        Object.assign(\n            this,\n            parse_expr(expr, P.start(\"bus_alias\"), P.list(\"members\", T.string)),\n        );\n    }\n}\n\nexport class Junction {\n    at: At;\n    diameter?: number;\n    color?: Color;\n    uuid: string;\n\n    constructor(expr: Parseable) {\n        /* (junction (at 179.07 95.885) (diameter 0) (color 0 0 0 0)\n            (uuid 0650c6c5-fcca-459c-82ef-4388c8242b9d)) */\n        Object.assign(\n            this,\n            parse_expr(\n                expr,\n                P.start(\"junction\"),\n                P.item(\"at\", At),\n                P.pair(\"diameter\", T.number),\n                P.color(),\n                P.pair(\"uuid\", T.string),\n            ),\n        );\n    }\n}\n\nexport class NoConnect {\n    at: At;\n    uuid: string;\n\n    constructor(expr: Parseable) {\n        /* (no_connect (at 236.22 92.71) (uuid f51df0a0-a355-457d-a756-de88302995ad)) */\n        Object.assign(\n            this,\n            parse_expr(\n                expr,\n                P.start(\"no_connect\"),\n                P.item(\"at\", At),\n                P.pair(\"uuid\", T.string),\n            ),\n        );\n    }\n}\n\ntype Drawing = Arc | Bezier | Circle | Polyline | Rectangle | Text | TextBox;\n\nexport class Arc extends GraphicItem {\n    start: Vec2;\n    mid: Vec2;\n    end: Vec2;\n\n    constructor(expr: Parseable, parent?: LibSymbol | SchematicSymbol) {\n        /*\n        Current form:\n        (arc (start 2.032 -1.27) (mid 0 -0.5572) (end -2.032 -1.27)\n          (stroke (width 0.508) (type default) (color 0 0 0 0))\n          (fill (type none)))\n\n        Previous form:\n        (arc (start -0.254 1.016) (end -0.254 -1.016)\n          (radius (at -0.254 0) (length 1.016) (angles 90.1 -90.1))\n          (stroke (width 0)) (fill(type none)))\n        */\n        super(parent);\n\n        const parsed = parse_expr(\n            expr,\n            P.start(\"arc\"),\n            P.vec2(\"start\"),\n            P.vec2(\"mid\"),\n            P.vec2(\"end\"),\n            P.object(\n                \"radius\",\n                {},\n                P.start(\"radius\"),\n                P.vec2(\"at\"),\n                P.pair(\"length\"),\n                P.vec2(\"angles\"),\n            ),\n            ...GraphicItem.common_expr_defs,\n        );\n\n        // Deal with old format\n        if (parsed[\"radius\"]?.[\"length\"]) {\n            const arc = MathArc.from_center_start_end(\n                parsed[\"radius\"][\"at\"],\n                parsed[\"end\"],\n                parsed[\"start\"],\n                1,\n            );\n\n            if (arc.arc_angle.degrees > 180) {\n                [arc.start_angle, arc.end_angle] = [\n                    arc.end_angle,\n                    arc.start_angle,\n                ];\n            }\n\n            parsed[\"start\"] = arc.start_point;\n            parsed[\"mid\"] = arc.mid_point;\n            parsed[\"end\"] = arc.end_point;\n        }\n        delete parsed[\"radius\"];\n\n        Object.assign(this, parsed);\n    }\n}\n\nexport class Bezier extends GraphicItem {\n    pts: Vec2[];\n\n    constructor(expr: Parseable, parent?: LibSymbol | SchematicSymbol) {\n        /* TODO: this was added in KiCAD 7 */\n        super(parent);\n        Object.assign(\n            this,\n            parse_expr(\n                expr,\n                P.start(\"bezier\"),\n                P.list(\"pts\", T.vec2),\n                ...GraphicItem.common_expr_defs,\n            ),\n        );\n    }\n\n    get start() {\n        return this.pts[0];\n    }\n\n    get c1() {\n        return this.pts[1];\n    }\n\n    get c2() {\n        return this.pts[2];\n    }\n\n    get end() {\n        return this.pts[3];\n    }\n}\n\nexport class Circle extends GraphicItem {\n    center: Vec2;\n    radius: number;\n\n    constructor(expr: Parseable, parent?: LibSymbol | SchematicSymbol) {\n        /*\n        (circle (center 0 0) (radius 0.508)\n          (stroke (width 0) (type default) (color 0 0 0 0))\n          (fill (type none)))\n        */\n        super(parent);\n        Object.assign(\n            this,\n            parse_expr(\n                expr,\n                P.start(\"circle\"),\n                P.vec2(\"center\"),\n                P.pair(\"radius\", T.number),\n                ...GraphicItem.common_expr_defs,\n            ),\n        );\n    }\n}\n\nexport class Polyline extends GraphicItem {\n    pts: Vec2[];\n\n    constructor(expr: Parseable, parent?: LibSymbol | SchematicSymbol) {\n        /*\n        (polyline\n          (pts\n            (xy -1.524 -0.508)\n            (xy 1.524 -0.508))\n          (stroke (width 0.3302) (type default) (color 0 0 0 0))\n          (fill (type none)))\n        */\n        super(parent);\n        Object.assign(\n            this,\n            parse_expr(\n                expr,\n                P.start(\"polyline\"),\n                P.list(\"pts\", T.vec2),\n                ...GraphicItem.common_expr_defs,\n            ),\n        );\n    }\n}\n\nexport class Rectangle extends GraphicItem {\n    start: Vec2;\n    end: Vec2;\n\n    constructor(expr: Parseable, parent?: LibSymbol | SchematicSymbol) {\n        /*\n        (rectangle (start -10.16 7.62) (end 10.16 -7.62)\n          (stroke (width 0.254) (type default) (color 0 0 0 0))\n          (fill (type background)))\n        */\n        super(parent);\n        Object.assign(\n            this,\n            parse_expr(\n                expr,\n                P.start(\"rectangle\"),\n                P.vec2(\"start\"),\n                P.vec2(\"end\"),\n                ...GraphicItem.common_expr_defs,\n            ),\n        );\n    }\n}\n\nexport class Image {\n    uuid?: string;\n    at: At;\n    data: string;\n\n    constructor(expr: Parseable) {\n        Object.assign(\n            this,\n            parse_expr(\n                expr,\n                P.start(\"image\"),\n                P.item(\"at\", At),\n                P.pair(\"data\", T.string),\n                P.pair(\"uuid\", T.string),\n            ),\n        );\n    }\n}\n\nexport class Text {\n    private = false;\n    text: string;\n    at: At;\n    effects = new Effects();\n    uuid?: string;\n\n    constructor(\n        expr: Parseable,\n        public parent: KicadSch | LibSymbol | SchematicSymbol,\n    ) {\n        /*\n        (text \"SWD\" (at -5.08 0 900)\n          (effects (font (size 2.54 2.54))))\n        */\n        Object.assign(\n            this,\n            parse_expr(\n                expr,\n                P.start(\"text\"),\n                P.positional(\"text\"),\n                P.item(\"at\", At),\n                P.item(\"effects\", Effects),\n                P.pair(\"uuid\", T.string),\n            ),\n        );\n\n        // Remove trailing \\n on text\n        if (this.text.endsWith(\"\\n\")) {\n            this.text = this.text.slice(0, this.text.length - 1);\n        }\n    }\n\n    get shown_text() {\n        return expand_text_vars(this.text, this.parent);\n    }\n}\n\nexport class LibText extends Text {\n    constructor(\n        expr: Parseable,\n        public override parent: LibSymbol | SchematicSymbol,\n    ) {\n        super(expr, parent);\n\n        if (parent instanceof LibSymbol || parent instanceof SchematicSymbol) {\n            // From sch_sexpr_parser.cpp:LIB_TEXT* SCH_SEXPR_PARSER::parseText()\n            // \"Yes, LIB_TEXT is really decidegrees even though all the others are degrees. :(\"\n            // motherfuck.\n            this.at.rotation /= 10;\n        }\n    }\n}\n\nexport class TextBox extends GraphicItem {\n    text: string;\n    at: At;\n    size: Vec2;\n    effects = new Effects();\n\n    constructor(expr: Parseable, parent?: LibSymbol | SchematicSymbol) {\n        /* TODO: This was added in KiCAD 7 */\n        super(parent);\n        Object.assign(\n            this,\n            parse_expr(\n                expr,\n                P.start(\"text\"),\n                P.positional(\"text\"),\n                P.item(\"at\", At),\n                P.vec2(\"size\"),\n                P.item(\"effects\", Effects),\n                ...GraphicItem.common_expr_defs,\n            ),\n        );\n    }\n}\n\nexport class Label {\n    private = false;\n    text: string;\n    at: At = new At();\n    effects = new Effects();\n    fields_autoplaced = false;\n    uuid?: string;\n\n    static common_expr_defs = [\n        P.positional(\"text\"),\n        P.item(\"at\", At),\n        P.item(\"effects\", Effects),\n        P.atom(\"fields_autoplaced\"),\n        P.pair(\"uuid\", T.string),\n    ];\n\n    get shown_text() {\n        return unescape_string(this.text);\n    }\n}\n\nexport class NetLabel extends Label {\n    constructor(expr: Parseable) {\n        /* (label \"net label 2.54\" (at 10 12 0)\n            (effects (font (size 2.54 2.54)) (justify left bottom))\n            (uuid 7c29627e-5d2a-4966-8e8b-eadd9d1e6530)) */\n        super();\n        Object.assign(\n            this,\n            parse_expr(expr, P.start(\"label\"), ...Label.common_expr_defs),\n        );\n    }\n}\n\ntype LabelShapes =\n    | \"input\"\n    | \"output\"\n    | \"bidirectional\"\n    | \"tri_state\"\n    | \"passive\"\n    | \"dot\"\n    | \"round\"\n    | \"diamond\"\n    | \"rectangle\";\n\nexport class GlobalLabel extends Label {\n    shape: LabelShapes = \"input\";\n    properties: Property[] = [];\n\n    constructor(expr: Parseable) {\n        /* (global_label \"global label tri state\" (shape tri_state)\n            (at 10 25 0) (fields_autoplaced)\n            (effects (font (size 1.27 1.27)) (justify left))\n            (uuid 1e3e64a3-cedc-4434-ab25-d00014c1e69d)\n            (property \"Intersheet References\" \"${INTERSHEET_REFS}\" (id 0) (at 32.7936 24.9206 0)\n            (effects (font (size 1.27 1.27)) (justify left) hide))) */\n        super();\n        Object.assign(\n            this,\n            parse_expr(\n                expr,\n                P.start(\"global_label\"),\n                ...Label.common_expr_defs,\n                P.pair(\"shape\", T.string),\n                P.collection(\"properties\", \"property\", T.item(Property)),\n            ),\n        );\n    }\n}\n\nexport class HierarchicalLabel extends Label {\n    shape: LabelShapes = \"input\";\n\n    constructor(expr?: Parseable) {\n        /* (hierarchical_label \"h label passive\" (shape passive) (at 18 30 270)\n            (effects (font (size 1.27 1.27) (thickness 0.254) bold) (justify right))\n            (uuid 484b38aa-713f-4f24-9fa1-63547d78e1da)) */\n        super();\n\n        if (expr) {\n            Object.assign(\n                this,\n                parse_expr(\n                    expr,\n                    P.start(\"hierarchical_label\"),\n                    ...Label.common_expr_defs,\n                    P.pair(\"shape\", T.string),\n                ),\n            );\n        }\n    }\n}\n\nexport class LibSymbols {\n    symbols: LibSymbol[] = [];\n    #symbols_by_name: Map<string, LibSymbol> = new Map();\n\n    constructor(\n        expr: Parseable,\n        public parent: KicadSch,\n    ) {\n        Object.assign(\n            this,\n            parse_expr(\n                expr,\n                P.start(\"lib_symbols\"),\n                P.collection(\"symbols\", \"symbol\", T.item(LibSymbol, parent)),\n            ),\n        );\n\n        for (const symbol of this.symbols) {\n            this.#symbols_by_name.set(symbol.name, symbol);\n        }\n    }\n\n    by_name(name: string) {\n        return this.#symbols_by_name.get(name);\n    }\n}\n\nexport class LibSymbol {\n    name: string;\n    power = false;\n    pin_numbers: {\n        hide: boolean;\n    } = { hide: false };\n    pin_names: {\n        offset: number;\n        hide: boolean;\n    } = {\n        offset: DefaultValues.pin_name_offset,\n        hide: false,\n    };\n    in_bom = false;\n    on_board = false;\n    properties: Map<string, Property> = new Map();\n    children: LibSymbol[] = [];\n    drawings: Drawing[] = [];\n    pins: PinDefinition[] = [];\n    units: Map<number, LibSymbol[]> = new Map();\n\n    #pins_by_number: Map<string, PinDefinition> = new Map();\n    #properties_by_id: Map<number, Property> = new Map();\n\n    constructor(\n        expr: Parseable,\n        public parent?: LibSymbol | KicadSch,\n    ) {\n        Object.assign(\n            this,\n            parse_expr(\n                expr,\n                P.start(\"symbol\"),\n                P.positional(\"name\"),\n                P.atom(\"power\"),\n                P.object(\"pin_numbers\", this.pin_numbers, P.atom(\"hide\")),\n                P.object(\n                    \"pin_names\",\n                    this.pin_names,\n                    P.pair(\"offset\", T.number),\n                    P.atom(\"hide\"),\n                ),\n                P.pair(\"in_bom\", T.boolean),\n                P.pair(\"on_board\", T.boolean),\n                P.mapped_collection(\n                    \"properties\",\n                    \"property\",\n                    (p: Property) => p.name,\n                    T.item(Property, this),\n                ),\n                P.collection(\"pins\", \"pin\", T.item(PinDefinition, this)),\n                P.collection(\"children\", \"symbol\", T.item(LibSymbol, this)),\n                P.collection(\"drawings\", \"arc\", T.item(Arc, this)),\n                P.collection(\"drawings\", \"bezier\", T.item(Bezier, this)),\n                P.collection(\"drawings\", \"circle\", T.item(Circle, this)),\n                P.collection(\"drawings\", \"polyline\", T.item(Polyline, this)),\n                P.collection(\"drawings\", \"rectangle\", T.item(Rectangle, this)),\n                P.collection(\"drawings\", \"text\", T.item(LibText, this)),\n                P.collection(\"drawings\", \"textbox\", T.item(TextBox, this)),\n            ),\n        );\n\n        for (const pin of this.pins) {\n            this.#pins_by_number.set(pin.number.text, pin);\n        }\n\n        for (const property of this.properties.values()) {\n            this.#properties_by_id.set(property.id, property);\n        }\n\n        for (const child of this.children) {\n            const unit_num = child.unit;\n            if (unit_num !== null) {\n                const list = this.units.get(unit_num) ?? [];\n                list.push(child);\n                this.units.set(unit_num, list);\n            }\n        }\n    }\n\n    get root(): LibSymbol {\n        if (this.parent instanceof LibSymbol) {\n            return this.parent.root;\n        }\n        return this;\n    }\n\n    has_pin(number: string) {\n        return this.#pins_by_number.has(number);\n    }\n\n    pin_by_number(number: string, style = 1): PinDefinition {\n        if (this.has_pin(number)) {\n            return this.#pins_by_number.get(number)!;\n        }\n        for (const child of this.children) {\n            if (\n                (child.style == 0 || child.style == style) &&\n                child.has_pin(number)\n            ) {\n                return child.pin_by_number(number);\n            }\n        }\n        throw new Error(\n            `No pin numbered ${number} on library symbol ${this.name}`,\n        );\n    }\n\n    has_property_with_id(id: number) {\n        return this.#properties_by_id.has(id);\n    }\n\n    property_by_id(id: number): Property | null {\n        if (this.#properties_by_id.has(id)) {\n            return this.#properties_by_id.get(id)!;\n        }\n        for (const child of this.children) {\n            if (child.has_property_with_id(id)) {\n                return child.property_by_id(id);\n            }\n        }\n        return null;\n    }\n\n    get library_name() {\n        if (this.name.includes(\":\")) {\n            return this.name.split(\":\").at(0)!;\n        }\n\n        return \"\";\n    }\n\n    get library_item_name() {\n        if (this.name.includes(\":\")) {\n            return this.name.split(\":\").at(1)!;\n        }\n\n        return \"\";\n    }\n\n    get unit_count(): number {\n        // Unit 0 is common to all units, so it doesn't count towards\n        // the total number of units.\n        let count = this.units.size;\n\n        if (this.units.has(0)) {\n            count -= 1;\n        }\n\n        return count;\n    }\n\n    get unit(): number {\n        // KiCAD encodes the symbol unit into the name, for example,\n        // MCP6001_1_1 is unit 1 and MCP6001_2_1 is unit 2.\n        // Unit 0 is common to all units.\n        // See SCH_SEXPR_PARSER::ParseSymbol.\n        const parts = this.name.split(\"_\");\n        if (parts.length < 3) {\n            return 0;\n        }\n\n        return parseInt(parts.at(-2)!, 10);\n    }\n\n    get style(): number {\n        // KiCAD \"De Morgan\" body styles are indicated with a number greater\n        // than one at the end of the symbol name.\n        // MCP6001_1_1 is the normal body and and MCP6001_1_2 is the alt style.\n        // Style 0 is common to all styles.\n        // See SCH_SEXPR_PARSER::ParseSymbol.\n        const parts = this.name.split(\"_\");\n        if (parts.length < 3) {\n            return 0;\n        }\n\n        return parseInt(parts.at(-1)!, 10);\n    }\n\n    get description(): string {\n        return this.properties.get(\"ki_description\")?.text ?? \"\";\n    }\n\n    get keywords(): string {\n        return this.properties.get(\"ki_keywords\")?.text ?? \"\";\n    }\n\n    get footprint_filters(): string {\n        return this.properties.get(\"ki_fp_filters\")?.text ?? \"\";\n    }\n\n    get units_interchangable(): boolean {\n        return this.properties.get(\"ki_locked\")?.text ? false : true;\n    }\n\n    resolve_text_var(name: string): string | undefined {\n        return this.parent?.resolve_text_var(name);\n    }\n}\n\nexport class Property {\n    name: string;\n    text: string;\n    id: number;\n    at: At;\n    show_name = false;\n    do_not_autoplace = false;\n    #effects?: Effects;\n\n    constructor(\n        expr: Parseable,\n        public parent: LibSymbol | SchematicSymbol | SchematicSheet,\n    ) {\n        const parsed = parse_expr(\n            expr,\n            P.start(\"property\"),\n            P.positional(\"name\", T.string),\n            P.positional(\"text\", T.string),\n            P.pair(\"id\", T.number),\n            P.item(\"at\", At),\n            P.item(\"effects\", Effects),\n            P.atom(\"show_name\"),\n            P.atom(\"do_not_autoplace\"),\n        );\n\n        this.#effects = parsed[\"effects\"];\n        delete parsed[\"effects\"];\n\n        Object.assign(this, parsed);\n    }\n\n    get effects(): Effects {\n        if (this.#effects) {\n            return this.#effects;\n        } else if (this.parent instanceof SchematicSymbol) {\n            this.#effects = new Effects();\n        } else {\n            log.warn(`Couldn't determine Effects for Property ${this.name}`);\n        }\n        return this.#effects!;\n    }\n\n    set effects(e: Effects) {\n        this.#effects = e;\n    }\n\n    get shown_text() {\n        return expand_text_vars(this.text, this.parent);\n    }\n}\n\nexport type PinElectricalType =\n    | \"input\"\n    | \"output\"\n    | \"bidirectional\"\n    | \"tri_state\"\n    | \"passive\"\n    | \"unspecified\"\n    | \"power_in\"\n    | \"power_out\"\n    | \"open_collector\"\n    | \"open_emitter\"\n    | \"unconnected\"\n    | \"no_connect\"\n    | \"free\";\n\nexport type PinShape =\n    | \"line\"\n    | \"inverted\"\n    | \"clock\"\n    | \"inverted_clock\"\n    | \"input_low\"\n    | \"clock_low\"\n    | \"output_low\"\n    | \"edge_clock_high\"\n    | \"non_logic\";\n\nexport class PinDefinition {\n    type: PinElectricalType;\n    shape: PinShape;\n    hide = false;\n    at: At;\n    length: number;\n    name = {\n        text: \"\",\n        effects: new Effects(),\n    };\n    number = {\n        text: \"\",\n        effects: new Effects(),\n    };\n    alternates?: PinAlternate[];\n\n    constructor(\n        expr: Parseable,\n        public parent: LibSymbol,\n    ) {\n        /*\n        (pin power_in line (at -15.24 50.8 270) (length 2.54) hide\n          (name \"IOVDD\" (effects (font (size 1.27 1.27))))\n          (number \"1\" (effects (font (size 1.27 1.27))))\n          (alternate \"alt\" input inverted_clock))\n        */\n        Object.assign(\n            this,\n            parse_expr(\n                expr,\n                P.start(\"pin\"),\n                P.positional(\"type\", T.string),\n                P.positional(\"shape\", T.string),\n                P.atom(\"hide\"),\n                P.item(\"at\", At),\n                P.pair(\"length\", T.number),\n                P.object(\n                    \"name\",\n                    this.name,\n                    P.positional(\"text\", T.string),\n                    P.item(\"effects\", Effects),\n                ),\n                P.object(\n                    \"number\",\n                    this.number,\n                    P.positional(\"text\", T.string),\n                    P.item(\"effects\", Effects),\n                ),\n                P.collection(\"alternates\", \"alternate\", T.item(PinAlternate)),\n            ),\n        );\n    }\n\n    get unit() {\n        return this.parent.unit;\n    }\n}\n\nexport class PinAlternate {\n    name: string;\n    type: PinElectricalType;\n    shape: PinShape;\n\n    constructor(expr: Parseable) {\n        Object.assign(\n            this,\n            parse_expr(\n                expr,\n                P.start(\"alternate\"),\n                P.positional(\"name\"),\n                P.positional(\"type\", T.string),\n                P.positional(\"shaped\", T.string),\n            ),\n        );\n    }\n}\n\nexport class SchematicSymbol {\n    uuid: string;\n    id: string;\n    lib_name?: string;\n    lib_id: string;\n    at: At;\n    mirror?: \"x\" | \"y\";\n    unit?: number;\n    convert: number;\n    in_bom = false;\n    on_board = false;\n    dnp = false;\n    fields_autoplaced = false;\n    properties: Map<string, Property> = new Map();\n    pins: PinInstance[] = [];\n    default_instance: {\n        reference: string;\n        unit: string;\n        value: string;\n        footprint: string;\n    };\n    instances: Map<string, SchematicSymbolInstance> = new Map();\n\n    constructor(\n        expr: Parseable,\n        public parent: KicadSch,\n    ) {\n        /*\n        (symbol (lib_id \"Device:C_Small\") (at 134.62 185.42 0) (unit 1)\n          (in_bom yes) (on_board yes) (fields_autoplaced)\n          (uuid 42d20c56-7e92-459e-8ba3-25545a76a4e9)\n          (property \"Reference\" \"C311\" (id 0) (at 137.16 182.8862 0)\n            (effects (font (size 1.27 1.27)) (justify left)))\n          (property \"Value\" \"100n\" (id 1) (at 137.16 185.4262 0)\n            (effects (font (size 1.27 1.27)) (justify left)))\n          (property \"Footprint\" \"winterbloom:C_0402_HandSolder\" (id 2) (at 134.62 185.42 0)\n            (effects (font (size 1.27 1.27)) hide))\n          (pin \"1\" (uuid ab9b91d4-020f-476d-acd8-920c7892e89a))\n          (pin \"2\" (uuid ec1eed11-c9f6-4ab0-ad9c-a96c0cb10d03)))\n        */\n        const parsed = parse_expr(\n            expr,\n            P.start(\"symbol\"),\n            P.pair(\"lib_name\", T.string),\n            P.pair(\"lib_id\", T.string),\n            P.item(\"at\", At),\n            P.pair(\"mirror\", T.string),\n            P.pair(\"unit\", T.number),\n            P.pair(\"convert\", T.number),\n            P.pair(\"in_bom\", T.boolean),\n            P.pair(\"on_board\", T.boolean),\n            P.pair(\"dnp\", T.boolean),\n            P.atom(\"fields_autoplaced\"),\n            P.pair(\"uuid\", T.string),\n            P.mapped_collection(\n                \"properties\",\n                \"property\",\n                (p: Property) => p.name,\n                T.item(Property, this),\n            ),\n            P.collection(\"pins\", \"pin\", T.item(PinInstance, this)),\n            P.object(\n                \"default_instance\",\n                this.default_instance,\n                P.pair(\"reference\", T.string),\n                P.pair(\"unit\", T.string),\n                P.pair(\"value\", T.string),\n                P.pair(\"footprint\", T.string),\n            ),\n            // (instances\n            //    (project \"kit-dev-coldfire-xilinx_5213\"\n            //      (path \"/f5d7a48d-4587-4550-a504-c505ca11d375\" (reference \"R111\") (unit 1))))\n            P.object(\n                \"instances\",\n                {},\n                P.collection(\n                    \"projects\",\n                    \"project\",\n                    T.object(\n                        null,\n                        P.start(\"project\"),\n                        P.positional(\"name\", T.string),\n                        P.collection(\n                            \"paths\",\n                            \"path\",\n                            T.object(\n                                null,\n                                P.start(\"path\"),\n                                P.positional(\"path\"),\n                                P.pair(\"reference\", T.string),\n                                P.pair(\"value\", T.string),\n                                P.pair(\"unit\", T.number),\n                                P.pair(\"footprint\", T.string),\n                            ),\n                        ),\n                    ),\n                ),\n            ),\n        );\n\n        const parsed_instances = parsed[\"instances\"];\n        delete parsed[\"instances\"];\n\n        Object.assign(this, parsed);\n\n        // Walk through all instances and flatten them.\n        for (const project of parsed_instances?.[\"projects\"] ?? []) {\n            for (const path of project?.[\"paths\"] ?? []) {\n                const inst = new SchematicSymbolInstance();\n                inst.path = path[\"path\"];\n                inst.reference = path[\"reference\"];\n                inst.value = path[\"value\"];\n                inst.unit = path[\"unit\"];\n                inst.footprint = path[\"footprint\"];\n                this.instances.set(inst.path, inst);\n            }\n        }\n\n        // Default instance is used only to set the value and footprint, the\n        // other items seem to be ignored.\n        if (this.get_property_text(\"Value\") == undefined) {\n            this.set_property_text(\"Value\", this.default_instance.value);\n        }\n\n        if (!this.get_property_text(\"Footprint\") == undefined) {\n            this.set_property_text(\n                \"Footprint\",\n                this.default_instance.footprint,\n            );\n        }\n    }\n\n    get lib_symbol(): LibSymbol {\n        // note: skipping a lot of null checks here because unless something\n        // horrible has happened, the schematic should absolutely have the\n        // library symbol for this symbol instance.\n        return this.parent.lib_symbols!.by_name(this.lib_name ?? this.lib_id)!;\n    }\n\n    get_property_text(name: string) {\n        return this.properties.get(name)?.text;\n    }\n\n    set_property_text(name: string, val: string) {\n        const prop = this.properties.get(name);\n        if (prop) {\n            prop.text = val;\n        }\n    }\n\n    get reference() {\n        return this.get_property_text(\"Reference\") ?? \"?\";\n    }\n\n    set reference(val: string) {\n        this.set_property_text(\"Reference\", val);\n    }\n\n    get value() {\n        return this.get_property_text(\"Value\") ?? \"\";\n    }\n\n    set value(val: string) {\n        this.set_property_text(\"Value\", val);\n    }\n\n    get footprint() {\n        return this.get_property_text(\"Footprint\") ?? \"\";\n    }\n\n    set footprint(val: string) {\n        this.set_property_text(\"Footprint\", val);\n    }\n\n    get unit_suffix() {\n        if (!this.unit || this.lib_symbol.unit_count <= 1) {\n            return \"\";\n        }\n\n        const A = \"A\".charCodeAt(0);\n        let unit = this.unit;\n        let suffix = \"\";\n\n        do {\n            const x = (unit - 1) % 26;\n            suffix = String.fromCharCode(A + x) + suffix;\n            unit = Math.trunc((unit - x) / 26);\n        } while (unit > 0);\n\n        return suffix;\n    }\n\n    get unit_pins() {\n        return this.pins.filter((pin) => {\n            if (this.unit && pin.unit && this.unit != pin.unit) {\n                return false;\n            }\n            return true;\n        });\n    }\n\n    resolve_text_var(name: string): string | undefined {\n        if (this.properties.has(name)) {\n            return this.properties.get(name)?.shown_text;\n        }\n\n        switch (name) {\n            case \"REFERENCE\":\n                return this.reference;\n            case \"VALUE\":\n                return this.value;\n            case \"FOOTPRINT\":\n                return this.footprint;\n            case \"DATASHEET\":\n                return this.properties.get(\"Datasheet\")?.name;\n            case \"FOOTPRINT_LIBRARY\":\n                return this.footprint.split(\":\").at(0);\n            case \"FOOTPRINT_NAME\":\n                return this.footprint.split(\":\").at(-1);\n            case \"UNIT\":\n                return this.unit_suffix;\n            case \"SYMBOL_LIBRARY\":\n                return this.lib_symbol.library_name;\n            case \"SYMBOL_NAME\":\n                return this.lib_symbol.library_item_name;\n            case \"SYMBOL_DESCRIPTION\":\n                return this.lib_symbol.description;\n            case \"SYMBOL_KEYWORDS\":\n                return this.lib_symbol.keywords;\n            case \"EXCLUDE_FROM_BOM\":\n                return this.in_bom ? \"\" : \"Excluded from BOM\";\n            case \"EXCLUDE_FROM_BOARD\":\n                return this.on_board ? \"\" : \"Excluded from board\";\n            case \"DNP\":\n                return this.dnp ? \"DNP\" : \"\";\n        }\n\n        return this.parent.resolve_text_var(name);\n    }\n}\n\nexport class SchematicSymbolInstance {\n    path: string;\n    project?: string;\n    reference?: string;\n    value?: string;\n    unit?: number;\n    footprint?: string;\n\n    constructor() {}\n}\n\nexport class PinInstance {\n    number: string;\n    uuid: string;\n    alternate: string;\n\n    constructor(\n        expr: Parseable,\n        public parent: SchematicSymbol,\n    ) {\n        /* (pin \"1\" (uuid ab9b91d4-020f-476d-acd8-920c7892e89a) (alternate abc)) */\n        Object.assign(\n            this,\n            parse_expr(\n                expr,\n                P.start(\"pin\"),\n                P.positional(\"number\", T.string),\n                P.pair(\"uuid\", T.string),\n                P.pair(\"alternate\", T.string),\n            ),\n        );\n    }\n\n    get definition() {\n        return this.parent.lib_symbol.pin_by_number(\n            this.number,\n            this.parent.convert,\n        );\n    }\n\n    get unit() {\n        return this.definition.unit;\n    }\n}\n\nexport class SheetInstances {\n    sheet_instances: Map<string, SheetInstance> = new Map();\n\n    constructor(expr: Parseable) {\n        Object.assign(\n            this,\n            parse_expr(\n                expr,\n                P.start(\"sheet_instances\"),\n                P.mapped_collection(\n                    \"sheet_instances\",\n                    \"path\",\n                    (obj: SheetInstance) => obj.path,\n                    T.item(SheetInstance),\n                ),\n            ),\n        );\n    }\n\n    get(key: string) {\n        return this.sheet_instances.get(key);\n    }\n}\n\nexport class SheetInstance {\n    page: string;\n    path: string;\n\n    constructor(expr: Parseable) {\n        /* (path \"/\" (page \"1\")) */\n        Object.assign(\n            this,\n            parse_expr(\n                expr,\n                // note: start is \"path\"\n                P.start(\"path\"),\n                P.positional(\"path\", T.string),\n                P.pair(\"page\", T.string),\n            ),\n        );\n    }\n}\n\nexport class SymbolInstances {\n    symbol_instances: Map<string, SymbolInstance> = new Map();\n\n    constructor(expr: Parseable) {\n        Object.assign(\n            this,\n            parse_expr(\n                expr,\n                P.start(\"symbol_instances\"),\n                P.mapped_collection(\n                    \"symbol_instances\",\n                    \"path\",\n                    (obj: SymbolInstance) => obj.path,\n                    T.item(SymbolInstance),\n                ),\n            ),\n        );\n    }\n\n    get(key: string) {\n        return this.symbol_instances.get(key);\n    }\n}\n\nexport class SymbolInstance {\n    path: string;\n    reference: string;\n    unit: number;\n    value: string;\n    footprint: string;\n\n    constructor(expr: Parseable) {\n        /* (path \"/dfac8bd5-de3e-410c-a76e-956b6a012495\"\n            (reference \"C?\") (unit 1) (value \"C_Polarized_US\") (footprint \"\")) */\n        Object.assign(\n            this,\n            parse_expr(\n                expr,\n                // note: start is \"path\"\n                P.start(\"path\"),\n                P.positional(\"path\", T.string),\n                P.pair(\"reference\", T.string),\n                P.pair(\"unit\", T.number),\n                P.pair(\"value\", T.string),\n                P.pair(\"footprint\", T.string),\n            ),\n        );\n    }\n}\n\nexport class SchematicSheet {\n    at: At;\n    size: Vec2;\n    fields_autoplaced: boolean;\n    stroke: Stroke;\n    fill: Fill;\n    properties: Map<string, Property> = new Map();\n    pins: SchematicSheetPin[] = [];\n    uuid: string;\n    instances: Map<string, SchematicSheetInstance> = new Map();\n    page?: string;\n    path?: string;\n\n    constructor(\n        expr: Parseable,\n        public parent: KicadSch,\n    ) {\n        const parsed = parse_expr(\n            expr,\n            P.start(\"sheet\"),\n            P.item(\"at\", At),\n            P.vec2(\"size\"),\n            P.item(\"stroke\", Stroke),\n            P.item(\"fill\", Fill),\n            P.pair(\"fields_autoplaced\", T.boolean),\n            P.pair(\"uuid\", T.string),\n            P.mapped_collection(\n                \"properties\",\n                \"property\",\n                (prop: Property) => prop.name,\n                T.item(Property, this),\n            ),\n            P.collection(\"pins\", \"pin\", T.item(SchematicSheetPin, this)),\n            // (instances\n            //   (project \"kit-dev-coldfire-xilinx_5213\"\n            //     (path \"/f5d7a48d-4587-4550-a504-c505ca11d375\" (page \"3\"))))\n            P.object(\n                \"instances\",\n                {},\n                P.collection(\n                    \"projects\",\n                    \"project\",\n                    T.object(\n                        null,\n                        P.start(\"project\"),\n                        P.positional(\"name\", T.string),\n                        P.collection(\n                            \"paths\",\n                            \"path\",\n                            T.object(\n                                null,\n                                P.start(\"path\"),\n                                P.positional(\"path\"),\n                                P.pair(\"page\", T.string),\n                            ),\n                        ),\n                    ),\n                ),\n            ),\n        );\n\n        const parsed_instances = parsed[\"instances\"];\n        delete parsed[\"instances\"];\n\n        Object.assign(this, parsed);\n\n        // Walk through all instances and flatten them.\n        for (const project of parsed_instances?.[\"projects\"] ?? []) {\n            for (const path of project?.[\"paths\"] ?? []) {\n                const inst = new SchematicSheetInstance();\n                inst.path = path[\"path\"];\n                inst.page = path[\"page\"];\n                this.instances.set(inst.path, inst);\n            }\n        }\n    }\n\n    get_property_text(name: string) {\n        return this.properties.get(name)?.text;\n    }\n\n    get sheetname() {\n        return (\n            this.get_property_text(\"Sheetname\") ??\n            this.get_property_text(\"Sheet name\")\n        );\n    }\n\n    get sheetfile() {\n        return (\n            this.get_property_text(\"Sheetfile\") ??\n            this.get_property_text(\"Sheet file\")\n        );\n    }\n\n    resolve_text_var(name: string): string | undefined {\n        return this.parent?.resolve_text_var(name);\n    }\n}\n\nexport class SchematicSheetPin {\n    at: At;\n    name: string;\n    shape: LabelShapes;\n    effects: Effects;\n    uuid: string;\n\n    constructor(\n        expr: Parseable,\n        public parent: SchematicSheet,\n    ) {\n        Object.assign(\n            this,\n            parse_expr(\n                expr,\n                P.start(\"pin\"),\n                P.positional(\"name\", T.string),\n                P.positional(\"shape\", T.string),\n                P.item(\"at\", At),\n                P.item(\"effects\", Effects),\n                P.pair(\"uuid\", T.string),\n            ),\n        );\n    }\n}\n\nexport class SchematicSheetInstance {\n    path: string;\n    page?: string;\n}\n", "(kicad_wks (version 20210606) (generator pl_editor)\n  (setup\n    (textsize 1.5 1.5) (linewidth 0.15) (textlinewidth 0.15)\n    (left_margin 10) (right_margin 10) (top_margin 10) (bottom_margin 10))\n  (rect (name \"\") (start 110 34) (end 2 2) (comment \"rect around the title block\"))\n  (rect (name \"\") (start 0 0 ltcorner) (end 0 0) (repeat 2) (incrx 2) (incry 2))\n  (line (name \"\") (start 50 2 ltcorner) (end 50 0 ltcorner) (repeat 30) (incrx 50))\n  (tbtext \"1\" (name \"\") (pos 25 1 ltcorner) (font (size 1.3 1.3)) (repeat 100) (incrx 50))\n  (line (name \"\") (start 50 2 lbcorner) (end 50 0 lbcorner) (repeat 30) (incrx 50))\n  (tbtext \"1\" (name \"\") (pos 25 1 lbcorner) (font (size 1.3 1.3)) (repeat 100) (incrx 50))\n  (line (name \"\") (start 0 50 ltcorner) (end 2 50 ltcorner) (repeat 30) (incry 50))\n  (tbtext \"A\" (name \"\") (pos 1 25 ltcorner) (font (size 1.3 1.3)) (justify center) (repeat 100) (incry 50))\n  (line (name \"\") (start 0 50 rtcorner) (end 2 50 rtcorner) (repeat 30) (incry 50))\n  (tbtext \"A\" (name \"\") (pos 1 25 rtcorner) (font (size 1.3 1.3)) (justify center) (repeat 100) (incry 50))\n  (tbtext \"Date: ${ISSUE_DATE}\" (name \"\") (pos 87 6.9))\n  (line (name \"\") (start 110 5.5) (end 2 5.5))\n  (tbtext \"${KICAD_VERSION}\" (name \"\") (pos 109 4.1) (comment \"Kicad version\"))\n  (line (name \"\") (start 110 8.5) (end 2 8.5))\n  (tbtext \"Rev: ${REVISION}\" (name \"\") (pos 24 6.9) (font bold))\n  (tbtext \"Size: ${PAPER}\" (name \"\") (pos 109 6.9) (comment \"Paper format name\"))\n  (tbtext \"Id: ${#}/${##}\" (name \"\") (pos 24 4.1) (comment \"Sheet id\"))\n  (line (name \"\") (start 110 12.5) (end 2 12.5))\n  (tbtext \"Title: ${TITLE}\" (name \"\") (pos 109 10.7) (font (size 2 2) bold italic))\n  (tbtext \"File: ${FILENAME}\" (name \"\") (pos 109 14.3))\n  (line (name \"\") (start 110 18.5) (end 2 18.5))\n  (tbtext \"Sheet: ${SHEETPATH}\" (name \"\") (pos 109 17))\n  (tbtext \"${COMPANY}\" (name \"\") (pos 109 20) (font bold) (comment \"Company name\"))\n  (tbtext \"${COMMENT1}\" (name \"\") (pos 109 23) (comment \"Comment 0\"))\n  (tbtext \"${COMMENT2}\" (name \"\") (pos 109 26) (comment \"Comment 1\"))\n  (tbtext \"${COMMENT3}\" (name \"\") (pos 109 29) (comment \"Comment 2\"))\n  (tbtext \"${COMMENT4}\" (name \"\") (pos 109 32) (comment \"Comment 3\"))\n  (line (name \"\") (start 90 8.5) (end 90 5.5))\n  (line (name \"\") (start 26 8.5) (end 26 2))\n)\n", "/*\n    Copyright (c) 2023 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nimport { Color } from \"../base/color\";\nimport { BBox, Vec2 } from \"../base/math\";\nimport { Paper, expand_text_vars } from \"./common\";\nimport default_sheet from \"./default_drawing_sheet.kicad_wks\";\nimport { P, T, parse_expr, type Parseable } from \"./parser\";\n\nexport type DrawingSheetDocument = {\n    paper?: Paper;\n    resolve_text_var(name: string): string | undefined;\n};\n\nexport class DrawingSheet {\n    version: number;\n    generator: string;\n    setup: Setup = new Setup();\n    drawings: DrawingSheetItem[] = [];\n    document?: DrawingSheetDocument;\n\n    constructor(expr: Parseable) {\n        Object.assign(\n            this,\n            parse_expr(\n                expr,\n                P.start(\"kicad_wks\"),\n                P.pair(\"version\", T.number),\n                P.pair(\"generator\", T.string),\n                P.item(\"setup\", Setup),\n                P.collection(\"drawings\", \"line\", T.item(Line, this)),\n                P.collection(\"drawings\", \"rect\", T.item(Rect, this)),\n                P.collection(\"drawings\", \"polygon\", T.item(Polygon, this)),\n                P.collection(\"drawings\", \"bitmap\", T.item(Bitmap, this)),\n                P.collection(\"drawings\", \"tbtext\", T.item(TbText, this)),\n            ),\n        );\n    }\n\n    static default() {\n        return new DrawingSheet(default_sheet);\n    }\n\n    *items() {\n        // Yield a rect to draw the page outline\n        yield new Rect(\n            `(rect (name \"\") (start ${-this.setup.left_margin} ${-this.setup\n                .right_margin} ltcorner) (end ${-this.setup\n                .right_margin} ${-this.setup\n                .bottom_margin} rbcorner) (comment \"page outline\"))`,\n            this,\n        );\n        yield* this.drawings;\n    }\n\n    get paper() {\n        return this.document?.paper;\n    }\n\n    get width() {\n        return this.paper?.width ?? 297;\n    }\n\n    get height() {\n        return this.paper?.height ?? 210;\n    }\n\n    get size() {\n        return new Vec2(this.width, this.height);\n    }\n\n    get top_left() {\n        return new Vec2(this.setup.left_margin, this.setup.top_margin);\n    }\n\n    get top_right() {\n        return new Vec2(\n            this.width - this.setup.right_margin,\n            this.setup?.top_margin,\n        );\n    }\n\n    get bottom_right() {\n        return new Vec2(\n            this.width - this.setup.right_margin,\n            this.height - this.setup.bottom_margin,\n        );\n    }\n\n    get bottom_left() {\n        return new Vec2(\n            this.setup.left_margin,\n            this.height - this.setup.bottom_margin,\n        );\n    }\n\n    get margin_bbox() {\n        return BBox.from_points([this.top_left, this.bottom_right]);\n    }\n\n    get page_bbox() {\n        return BBox.from_corners(0, 0, this.width, this.height);\n    }\n\n    resolve_text_var(name: string): string | undefined {\n        switch (name) {\n            case \"PAPER\":\n                return this.paper?.size || \"\";\n            // TODO: Mock values for now, should be provided by the project\n            // when that's implemented.\n            case \"#\":\n                // Sheet number\n                return \"1\";\n            case \"##\":\n                // Sheet count\n                return \"1\";\n            case \"SHEETPATH\":\n                // Sheet path (hierarchical path)\n                return \"/\";\n            case \"KICAD_VERSION\":\n                // KiCAD Version\n                return \"KiCanvas Alpha\";\n        }\n        return this.document?.resolve_text_var(name);\n    }\n}\n\nexport class Setup {\n    linewidth = 0.15;\n    textsize: Vec2 = new Vec2(1.5, 1.5);\n    textlinewidth = 0.15;\n    top_margin = 10;\n    left_margin = 10;\n    bottom_margin = 10;\n    right_margin = 10;\n\n    constructor(expr?: Parseable) {\n        if (expr) {\n            Object.assign(\n                this,\n                parse_expr(\n                    expr,\n                    P.start(\"setup\"),\n                    P.pair(\"linewidth\", T.number),\n                    P.vec2(\"textsize\"),\n                    P.pair(\"textlinewidth\", T.number),\n                    P.pair(\"top_margin\", T.number),\n                    P.pair(\"left_margin\", T.number),\n                    P.pair(\"bottom_margin\", T.number),\n                    P.pair(\"right_margin\", T.number),\n                ),\n            );\n        }\n    }\n}\n\nexport class Coordinate {\n    position: Vec2 = new Vec2(0, 0);\n    anchor: \"ltcorner\" | \"lbcorner\" | \"rbcorner\" | \"rtcorner\" = \"rbcorner\";\n\n    constructor(expr: Parseable) {\n        const parsed = parse_expr(\n            expr,\n            P.positional(\"start_token\"),\n            P.positional(\"x\", T.number),\n            P.positional(\"y\", T.number),\n            P.positional(\"anchor\", T.string),\n        );\n\n        this.position.x = parsed[\"x\"];\n        this.position.y = parsed[\"y\"];\n        this.anchor = parsed[\"anchor\"] ?? this.anchor;\n    }\n}\n\nexport class DrawingSheetItem {\n    parent: DrawingSheet;\n    name: string;\n    comment: string;\n    option: \"page1only\" | \"notonpage1\" | null;\n    repeat = 1;\n    incry = 0;\n    incrx = 0;\n    linewidth: number;\n\n    constructor(parent: DrawingSheet) {\n        this.parent = parent;\n    }\n\n    static common_expr_defs = [\n        P.pair(\"name\", T.string),\n        P.pair(\"comment\", T.string),\n        P.pair(\"option\", T.string),\n        P.pair(\"repeat\", T.number),\n        P.pair(\"incrx\", T.number),\n        P.pair(\"incry\", T.number),\n        P.pair(\"linewidth\", T.number),\n    ];\n}\n\nexport class Line extends DrawingSheetItem {\n    start: Coordinate;\n    end: Coordinate;\n\n    constructor(expr: Parseable, parent: DrawingSheet) {\n        super(parent);\n        Object.assign(\n            this,\n            parse_expr(\n                expr,\n                P.start(\"line\"),\n                P.item(\"start\", Coordinate),\n                P.item(\"end\", Coordinate),\n                ...DrawingSheetItem.common_expr_defs,\n            ),\n        );\n    }\n}\n\nexport class Rect extends DrawingSheetItem {\n    start: Coordinate;\n    end: Coordinate;\n\n    constructor(expr: Parseable, parent: DrawingSheet) {\n        super(parent);\n\n        Object.assign(\n            this,\n            parse_expr(\n                expr,\n                P.start(\"rect\"),\n                P.item(\"start\", Coordinate),\n                P.item(\"end\", Coordinate),\n                ...DrawingSheetItem.common_expr_defs,\n            ),\n        );\n    }\n}\n\nexport class Polygon extends DrawingSheetItem {\n    rotate: number;\n    pos: Coordinate;\n    pts: Vec2[];\n\n    constructor(expr: Parseable, parent: DrawingSheet) {\n        super(parent);\n        Object.assign(\n            this,\n            parse_expr(\n                expr,\n                P.start(\"polygon\"),\n                P.item(\"pos\", Coordinate),\n                P.pair(\"rotate\", T.number),\n                P.list(\"pts\", T.vec2),\n                ...DrawingSheetItem.common_expr_defs,\n            ),\n        );\n    }\n}\n\nexport class Bitmap extends DrawingSheetItem {\n    scale: number;\n    pos: Coordinate;\n    pngdata: string;\n\n    constructor(expr: Parseable, parent: DrawingSheet) {\n        super(parent);\n        Object.assign(\n            this,\n            parse_expr(\n                expr,\n                P.start(\"bitmap\"),\n                P.item(\"pos\", Coordinate),\n                P.pair(\"scale\", T.number),\n                P.pair(\"pngdata\", T.string),\n                ...DrawingSheetItem.common_expr_defs,\n            ),\n        );\n    }\n}\n\nexport class TbText extends DrawingSheetItem {\n    text: string;\n    incrlabel = 1;\n    pos: Coordinate;\n    maxlen: number;\n    maxheight: number;\n    font: Font;\n    justify: \"center\" | \"left\" | \"right\" | \"top\" | \"bottom\";\n    rotate = 0;\n\n    constructor(expr: Parseable, parent: DrawingSheet) {\n        super(parent);\n        Object.assign(\n            this,\n            parse_expr(\n                expr,\n                P.start(\"tbtext\"),\n                P.positional(\"text\"),\n                P.item(\"pos\", Coordinate),\n                P.pair(\"incrlabel\", T.number),\n                P.pair(\"maxlen\", T.number),\n                P.pair(\"maxheight\", T.number),\n                P.item(\"font\", Font),\n                P.pair(\"rotate\", T.number),\n                P.pair(\"justify\", T.string),\n                ...DrawingSheetItem.common_expr_defs,\n            ),\n        );\n    }\n\n    get shown_text() {\n        return expand_text_vars(this.text, this.parent);\n    }\n}\n\nexport class Font {\n    color: Color = Color.transparent_black;\n    face: string;\n    bold: boolean;\n    italic: boolean;\n    size: Vec2 = new Vec2(1.27, 1.27);\n    linewidth: number;\n\n    constructor(expr: Parseable) {\n        Object.assign(\n            this,\n            parse_expr(\n                expr,\n                P.start(\"font\"),\n                P.pair(\"face\", T.string),\n                P.atom(\"bold\"),\n                P.atom(\"italic\"),\n                P.vec2(\"size\"),\n                P.pair(\"linewidth\", T.number),\n            ),\n        );\n    }\n}\n", "/*\n    Copyright (c) 2023 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nimport { is_object } from \"./types\";\n\nexport function merge(dst: any, src?: any) {\n    if (src == null || src == undefined) {\n        return;\n    }\n\n    for (const key of Object.keys(src)) {\n        if (is_object(dst[key])) {\n            merge(dst[key], src[key]);\n        } else {\n            dst[key] = src[key];\n        }\n    }\n}\n", "/*\n    Copyright (c) 2023 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nimport { merge } from \"../base/object\";\n\n/**\n * Holds configuration and settings from a .kicad_pro file.\n *\n * See KiCAD's PROJECT_FILE class\n */\nexport class ProjectSettings {\n    public board: BoardSettings = new BoardSettings();\n    public boards: [string, string][] = [];\n    public cvpcb?: unknown;\n    public erc?: unknown;\n    public libraries: {\n        pinned_footprint_libs: string[];\n        pinned_symbol_libs: string[];\n    } = { pinned_footprint_libs: [], pinned_symbol_libs: [] };\n    public meta: {\n        filename: string;\n        version: number;\n    } = { filename: \"unknown.kicad_pro\", version: 1 };\n    public net_settings: unknown;\n    public pcbnew: {\n        page_layout_descr_file: string;\n    } = { page_layout_descr_file: \"\" };\n    public schematic: SchematicSettings = new SchematicSettings();\n    public sheets: [string, string][] = [];\n    public text_variables?: Record<string, string> = {};\n\n    [s: string]: unknown;\n\n    static load(src: any) {\n        const project = new ProjectSettings();\n        merge(project, src);\n        return project;\n    }\n}\n\nexport class BoardSettings {\n    // board_design_settings.cpp\n    design_settings: BoardDesignSettings = new BoardDesignSettings();\n\n    // board_project_settings.cpp PARAM_LAYER_PRESET\n    layer_presets?: unknown;\n\n    // board_project_settings.cpp PARAM_VIEWPORT\n    viewports?: unknown;\n\n    [s: string]: unknown;\n}\n\nexport class BoardDesignSettings {\n    public defaults: BoardDesignSettingsDefaults =\n        new BoardDesignSettingsDefaults();\n\n    [s: string]: unknown;\n}\n\nexport class BoardDesignSettingsDefaults {\n    public board_outline_line_width = 0.1;\n    public copper_line_width = 0.2;\n    public copper_text_size_h = 1.5;\n    public copper_text_size_v = 1.5;\n    public copper_text_thickness = 0.3;\n    public other_line_width = 0.15;\n    public silk_line_width = 0.15;\n    public silk_text_size_h = 1.0;\n    public silk_text_size_v = 1.0;\n    public silk_text_thickness = 0.15;\n\n    [s: string]: unknown;\n}\n\n// SCHEMATIC_SETTINGS schematic_settings.cpp\nexport class SchematicSettings {\n    drawing: SchematicDrawingSettings = new SchematicDrawingSettings();\n    meta: {\n        version: number;\n    } = { version: 1 };\n\n    [s: string]: unknown;\n}\n\n// EESCHEMA_SETTINGS\nexport class SchematicDrawingSettings {\n    dashed_lines_dash_length_ratio: number = 12;\n    dashed_lines_gap_length_ratio: number = 3;\n    default_line_thickness: number = 6;\n    default_text_size: number = 50;\n    field_names: unknown[];\n    intersheets_ref_own_page: boolean = false;\n    intersheets_ref_prefix: string = \"\";\n    intersheets_ref_short: boolean = false;\n    intersheets_ref_show: boolean = false;\n    intersheets_ref_suffix: string = \"\";\n    junction_size_choice: number = 3;\n    label_size_ratio: number = 0.375;\n    pin_symbol_size: number = 25.0;\n    text_offset_ratio: number = 0.15;\n\n    [s: string]: unknown;\n}\n", "/*\n    Copyright (c) 2023 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nimport { sorted_by_numeric_strings } from \"../base/array\";\nimport { Barrier } from \"../base/async\";\nimport { type IDisposable } from \"../base/disposable\";\nimport { first, length, map } from \"../base/iterator\";\nimport { Logger } from \"../base/log\";\nimport { is_string, type Constructor } from \"../base/types\";\nimport { KicadPCB, KicadSch, ProjectSettings } from \"../kicad\";\nimport type {\n  SchematicSheet,\n  SchematicSheetInstance,\n} from \"../kicad/schematic\";\nimport type { VirtualFileSystem } from \"./services/vfs\";\n\nconst log = new Logger(\"kicanvas:project\");\n\nconst docCache = new Map<string, Promise<KicadPCB | KicadSch>>();\n\nexport class Project extends EventTarget implements IDisposable {\n  #fs: VirtualFileSystem;\n  #files_by_name: Map<string, KicadPCB | KicadSch | null> = new Map();\n  #pages_by_path: Map<string, ProjectPage> = new Map();\n  #root_schematic_page?: ProjectPage;\n\n  public loaded: Barrier = new Barrier();\n  public settings: ProjectSettings = new ProjectSettings();\n\n  public dispose() {\n    this.#files_by_name.clear();\n    this.#pages_by_path.clear();\n  }\n\n  public async load(fs: VirtualFileSystem) {\n    log.info(`Loading project from ${fs.constructor.name}`);\n\n    this.settings = new ProjectSettings();\n    this.#files_by_name.clear();\n    this.#pages_by_path.clear();\n\n    this.#fs = fs;\n\n    let promises = [];\n\n    for (const filename of this.#fs.list()) {\n      promises.push(this.#load_file(filename));\n    }\n\n    await Promise.all(promises);\n\n    while (promises.length) {\n      // 'Recursively' resolve all schematics until none are remaining\n      promises = [];\n      for (const schematic of this.schematics()) {\n        for (const sheet of schematic.sheets) {\n          const sheet_sch = this.#files_by_name.get(\n            sheet.sheetfile ?? \"\",\n          ) as KicadSch;\n\n          if (!sheet_sch && sheet.sheetfile) {\n            // Missing schematic, attempt to fetch\n            promises.push(this.#load_file(sheet.sheetfile));\n          }\n        }\n      }\n      await Promise.all(promises);\n    }\n\n    this.#determine_schematic_hierarchy();\n\n    this.loaded.open();\n\n    this.dispatchEvent(\n      new CustomEvent(\"load\", {\n        detail: this,\n      }),\n    );\n  }\n\n  async #load_file(filename: string) {\n    log.info(`Loading file ${filename}`);\n\n    if (filename.endsWith(\".kicad_sch\")) {\n      return await this.#load_doc(KicadSch, filename);\n    }\n    if (filename.endsWith(\".kicad_pcb\")) {\n      return await this.#load_doc(KicadPCB, filename);\n    }\n    if (filename.endsWith(\".kicad_pro\")) {\n      return this.#load_meta(filename);\n    }\n\n    log.warn(`Couldn't load ${filename}: unknown file type`);\n  }\n\n  async #load_doc(\n    document_class: Constructor<KicadPCB | KicadSch>,\n    filename: string,\n  ) {\n    if (this.#files_by_name.has(filename)) {\n      return this.#files_by_name.get(filename);\n    }\n\n    let docPromise = docCache.get(filename);\n    if (!docPromise) {\n      docPromise = new Promise((resolve) => {\n        this.#get_file_text(filename).then((text) => {\n          const doc = new document_class(filename, text);\n          resolve(doc);\n        });\n      });\n\n      docCache.set(filename, docPromise);\n    } else {\n      console.log(`Cache hit on: ${filename}`);\n    }\n\n    const doc = await docPromise;\n\n    doc!.project = this;\n    this.#files_by_name.set(filename, doc!);\n\n    if (doc instanceof KicadPCB) {\n      // Go ahead and add PCBs to the list of pages. Schematics will\n      // get added during #determine_schematic_hierarchy.\n      const page = new ProjectPage(\n        this,\n        \"pcb\",\n        doc.filename,\n        \"\",\n        \"Board\",\n        \"\",\n      );\n      this.#pages_by_path.set(page.project_path, page);\n    }\n\n    return doc;\n  }\n\n  async #load_meta(filename: string) {\n    const text = await this.#get_file_text(filename);\n    const data = JSON.parse(text);\n    this.settings = ProjectSettings.load(data);\n  }\n\n  async #get_file_text(filename: string) {\n    return await (await this.#fs.get(filename)).text();\n  }\n\n  #determine_schematic_hierarchy() {\n    log.info(\"Determining schematic hierarchy\");\n\n    const paths_to_schematics = new Map<string, KicadSch>();\n    const paths_to_sheet_instances = new Map<\n      string,\n      { sheet: SchematicSheet; instance: SchematicSheetInstance }\n    >();\n\n    for (const schematic of this.schematics()) {\n      paths_to_schematics.set(`/${schematic.uuid}`, schematic);\n\n      for (const sheet of schematic.sheets) {\n        const sheet_sch = this.#files_by_name.get(\n          sheet.sheetfile ?? \"\",\n        ) as KicadSch;\n\n        if (!sheet_sch) {\n          continue;\n        }\n\n        for (const instance of sheet.instances.values()) {\n          paths_to_schematics.set(instance.path, schematic);\n          paths_to_sheet_instances.set(\n            `${instance.path}/${sheet.uuid}`,\n            {\n              sheet: sheet,\n              instance: instance,\n            },\n          );\n        }\n      }\n    }\n\n    // Find the root sheet. This is done by sorting all of the paths\n    // from shortest to longest and walking through the paths to see if\n    // we can find the schematic for the parent. The first one we find\n    // it the common ancestor (root).\n    const paths = Array.from(paths_to_sheet_instances.keys()).sort(\n      (a, b) => a.length - b.length,\n    );\n\n    let root: KicadSch | undefined;\n    for (const path of paths) {\n      const parent_path = path.split(\"/\").slice(0, -1).join(\"/\");\n\n      if (!parent_path) {\n        continue;\n      }\n\n      root = paths_to_schematics.get(parent_path);\n\n      if (root) {\n        break;\n      }\n    }\n\n    // If we found a root page, we can build out the list of pages by\n    // walking through paths_to_sheet with root as page one.\n    let pages = [];\n\n    if (root) {\n      this.#root_schematic_page = new ProjectPage(\n        this,\n        \"schematic\",\n        root.filename,\n        `/${root!.uuid}`,\n        \"Root\",\n        \"1\",\n      );\n      pages.push(this.#root_schematic_page);\n\n      for (const [path, sheet] of paths_to_sheet_instances.entries()) {\n        pages.push(\n          new ProjectPage(\n            this,\n            \"schematic\",\n            sheet.sheet.sheetfile!,\n            path,\n            sheet.sheet.sheetname ?? sheet.sheet.sheetfile!,\n            sheet.instance.page ?? \"\",\n          ),\n        );\n      }\n    }\n\n    // Sort the pages we've collected so far and then insert them\n    // into the pages map.\n    pages = sorted_by_numeric_strings(pages, (p) => p.page!);\n\n    for (const page of pages) {\n      this.#pages_by_path.set(page.project_path, page);\n    }\n\n    // Add any \"orphan\" sheets to the list of pages now that we've added all\n    // the hierarchical ones.\n    const seen_schematic_files = new Set(\n      map(this.#pages_by_path.values(), (p) => p.filename),\n    );\n\n    for (const schematic of this.schematics()) {\n      if (!seen_schematic_files.has(schematic.filename)) {\n        const page = new ProjectPage(\n          this,\n          \"schematic\",\n          schematic.filename,\n          `/${schematic.uuid}`,\n          schematic.filename,\n        );\n        this.#pages_by_path.set(page.project_path, page);\n      }\n    }\n\n    // Finally, if no root schematic was found, just use the first one we saw.\n    this.#root_schematic_page = first(this.#pages_by_path.values());\n  }\n\n  public *files() {\n    yield* this.#files_by_name.values();\n  }\n\n  public file_by_name(name: string) {\n    return this.#files_by_name.get(name);\n  }\n\n  public *boards() {\n    for (const value of this.#files_by_name.values()) {\n      if (value instanceof KicadPCB) {\n        yield value;\n      }\n    }\n  }\n\n  public get has_boards() {\n    return length(this.boards()) > 0;\n  }\n\n  public *schematics() {\n    for (const value of this.#files_by_name.values()) {\n      if (value instanceof KicadSch) {\n        yield value;\n      }\n    }\n  }\n\n  public get has_schematics() {\n    return length(this.schematics()) > 0;\n  }\n\n  public *pages() {\n    yield* this.#pages_by_path.values();\n  }\n\n  public get first_page() {\n    return first(this.pages());\n  }\n\n  public get root_schematic_page() {\n    return this.#root_schematic_page;\n  }\n\n  public page_by_path(project_path: string) {\n    return this.#pages_by_path.get(project_path);\n  }\n\n  public async download(name: string) {\n    if (this.#pages_by_path.has(name)) {\n      name = this.#pages_by_path.get(name)!.filename;\n    }\n    return await this.#fs.download(name);\n  }\n\n  #active_page: ProjectPage | null = null;\n\n  public get active_page() {\n    return this.#active_page;\n  }\n\n  public set_active_page(\n    page_or_path: ProjectPage | string | null | undefined,\n  ) {\n    let page;\n\n    if (is_string(page_or_path)) {\n      page = this.page_by_path(page_or_path);\n    } else {\n      page = page_or_path;\n    }\n\n    if (!page) {\n      page = this.first_page;\n    }\n\n    if (!page) {\n      throw new Error(`Unable to find ${page_or_path}`);\n    }\n\n    this.#active_page = page;\n\n    this.dispatchEvent(\n      new CustomEvent(\"change\", {\n        detail: this,\n      }),\n    );\n  }\n}\n\nexport class ProjectPage {\n  constructor(\n    public project: Project,\n    public type: \"pcb\" | \"schematic\",\n    public filename: string,\n    public sheet_path: string,\n    public name?: string,\n    public page?: string,\n  ) { }\n\n  /**\n   * A unique identifier for this page within the project,\n   * made from the filename and sheet path.\n   */\n  get project_path() {\n    if (this.sheet_path) {\n      return `${this.filename}:${this.sheet_path}`;\n    } else {\n      return this.filename;\n    }\n  }\n\n  get document() {\n    return this.project.file_by_name(this.filename)!;\n  }\n}\n", "/*\n    Copyright (c) 2023 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nimport { basename } from \"../../base/paths\";\n\nexport class BaseAPIError extends Error {\n    constructor(\n        public override name: string,\n        public url: string,\n        public description: string,\n        public response?: Response,\n    ) {\n        super(`GitHub${name}: ${url}: ${description}`);\n    }\n}\n\nexport class UnknownError extends BaseAPIError {\n    constructor(url: string, description: string, response: Response) {\n        super(`NotFoundError`, url, description, response);\n    }\n}\n\nexport class NotFoundError extends BaseAPIError {\n    constructor(url: string, response: Response) {\n        super(`NotFoundError`, url, \"not found\", response);\n    }\n}\n\nexport class GitHub {\n    static readonly html_base_url = \"https://github.com\";\n    static readonly base_url = \"https://api.github.com/\";\n    static readonly api_version = \"2022-11-28\";\n    static readonly accept_header = \"application/vnd.github+json\";\n\n    headers: Record<string, string>;\n    last_response?: Response;\n    rate_limit_remaining?: number;\n\n    constructor() {\n        this.headers = {\n            Accept: GitHub.accept_header,\n            \"X-GitHub-Api-Version\": GitHub.api_version,\n        };\n    }\n\n    /**\n     * Parse an html (user-facing) URL\n     */\n    static parse_url(url: string | URL) {\n        url = new URL(url, GitHub.html_base_url);\n        const path_parts = url.pathname.split(\"/\");\n\n        if (path_parts.length < 3) {\n            return null;\n        }\n\n        const [, owner, repo, ...parts] = path_parts;\n\n        let type;\n        let ref;\n        let path;\n\n        if (parts.length) {\n            if (parts[0] == \"blob\" || parts[0] == \"tree\") {\n                type = parts.shift();\n                ref = parts.shift();\n                path = parts.join(\"/\");\n            }\n        } else {\n            type = \"root\";\n        }\n\n        return {\n            owner: owner,\n            repo: repo,\n            type: type,\n            ref: ref,\n            path: path,\n        };\n    }\n\n    async request(\n        path: string,\n        params?: Record<string, string>,\n        data?: unknown,\n    ): Promise<unknown> {\n        const static_this = this.constructor as typeof GitHub;\n\n        const url = new URL(path, static_this.base_url);\n\n        if (params) {\n            const url_params = new URLSearchParams(params).toString();\n            url.search = `?${url_params}`;\n        }\n\n        const request = new Request(url, {\n            method: data ? \"POST\" : \"GET\",\n            headers: this.headers,\n            body: data ? JSON.stringify(data) : undefined,\n        });\n\n        const response = await fetch(request);\n        await this.handle_server_error(response);\n\n        this.last_response = response;\n\n        this.rate_limit_remaining = parseInt(\n            response.headers.get(\"x-ratelimit-remaining\") ?? \"\",\n            10,\n        );\n\n        if (\n            response.headers.get(\"content-type\") ==\n            \"application/json; charset=utf-8\"\n        ) {\n            return await response.json();\n        } else {\n            return await response.text();\n        }\n    }\n\n    async handle_server_error(response: Response) {\n        switch (response.status) {\n            case 200:\n                return;\n            case 404: {\n                throw new NotFoundError(response.url, response);\n            }\n            case 500: {\n                throw new UnknownError(\n                    response.url,\n                    await response.text(),\n                    response,\n                );\n            }\n        }\n    }\n\n    async repos_contents(\n        owner: string,\n        repo: string,\n        path: string,\n        ref?: string,\n    ) {\n        return await this.request(`repos/${owner}/${repo}/contents/${path}`, {\n            ref: ref ?? \"\",\n        });\n    }\n}\n\nexport class GitHubUserContent {\n    static readonly base_url = \"https://raw.githubusercontent.com/\";\n\n    constructor() {}\n\n    async get(url_or_path: string | URL): Promise<File> {\n        const url = new URL(url_or_path, GitHubUserContent.base_url);\n        const request = new Request(url, { method: \"GET\" });\n        const response = await fetch(request);\n        const blob = await response.blob();\n        const name = basename(url) ?? \"unknown\";\n\n        return new File([blob], name);\n    }\n\n    /**\n     * Converts GitHub UI paths to valid paths for raw.githubusercontent.com.\n     *\n     * https://github.com/wntrblm/Helium/blob/main/hardware/board/board.kicad_sch\n     * becomes\n     * https://raw.githubusercontent.com/wntrblm/Helium/main/hardware/board/board.kicad_sch\n     */\n    convert_url(url: string | URL): URL {\n        const u = new URL(url, \"https://github.com/\");\n\n        if (u.host == \"raw.githubusercontent.com\") {\n            return u;\n        }\n\n        const parts = u.pathname.split(\"/\");\n\n        if (parts.length < 4) {\n            throw new Error(\n                `URL ${url} can't be converted to a raw.githubusercontent.com URL`,\n            );\n        }\n\n        const [_, user, repo, blob, ref, ...path_parts] = parts;\n\n        if (blob != \"blob\") {\n            throw new Error(\n                `URL ${url} can't be converted to a raw.githubusercontent.com URL`,\n            );\n        }\n\n        const path = [user, repo, ref, ...path_parts].join(\"/\");\n\n        return new URL(path, GitHubUserContent.base_url);\n    }\n}\n", "/*\n    Copyright (c) 2023 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nimport { initiate_download } from \"../../base/dom/download\";\nimport { basename, dirname, extension } from \"../../base/paths\";\nimport { GitHub, GitHubUserContent } from \"./github\";\nimport { VirtualFileSystem } from \"./vfs\";\n\nconst kicad_extensions = [\"kicad_pcb\", \"kicad_pro\", \"kicad_sch\"];\nconst gh_user_content = new GitHubUserContent();\nconst gh = new GitHub();\n\n/**\n * Virtual file system for GitHub.\n */\nexport class GitHubFileSystem extends VirtualFileSystem {\n    constructor(private files_to_urls: Map<string, URL>) {\n        super();\n    }\n\n    public static async fromURLs(...urls: (string | URL)[]) {\n        // Handles URLs like this:\n        // https://github.com/wntrblm/Helium/blob/main/hardware/board/board.kicad_sch\n\n        const files_to_urls = new Map();\n\n        for (const url of urls) {\n            const info = GitHub.parse_url(url);\n\n            if (!info || !info.owner || !info.repo) {\n                continue;\n            }\n\n            // Link to the root of a repo, treat it as tree using HEAD\n            if (info.type == \"root\") {\n                info.ref = \"HEAD\";\n                info.type = \"tree\";\n            }\n\n            // Link to a single file.\n            if (info.type == \"blob\") {\n                if (\n                    [\"kicad_sch\", \"kicad_pcb\"].includes(extension(info.path!))\n                ) {\n                    const guc_url = gh_user_content.convert_url(url);\n                    const name = basename(guc_url);\n                    files_to_urls.set(name, guc_url);\n                } else {\n                    // Link to non-kicad file, try using the containing directory.\n                    info.type = \"tree\";\n                    info.path = dirname(info.path!);\n                }\n            }\n\n            // Link to a directory.\n            if (info.type == \"tree\") {\n                // Get a list of files in the directory.\n                const gh_file_list = (await gh.repos_contents(\n                    info.owner,\n                    info.repo,\n                    info.path ?? \"\",\n                    info.ref,\n                )) as Record<string, string>[];\n\n                for (const gh_file of gh_file_list) {\n                    const name = gh_file[\"name\"];\n                    const download_url = gh_file[\"download_url\"];\n                    if (\n                        !name ||\n                        !download_url ||\n                        !kicad_extensions.includes(extension(name))\n                    ) {\n                        continue;\n                    }\n\n                    files_to_urls.set(name, download_url);\n                }\n            }\n        }\n\n        return new GitHubFileSystem(files_to_urls);\n    }\n\n    public override *list() {\n        yield* this.files_to_urls.keys();\n    }\n\n    public override get(name: string): Promise<File> {\n        const url = this.files_to_urls.get(name);\n\n        if (!url) {\n            throw new Error(`File ${name} not found!`);\n        }\n\n        return gh_user_content.get(url);\n    }\n\n    public override has(name: string) {\n        return Promise.resolve(this.files_to_urls.has(name));\n    }\n\n    public override async download(name: string) {\n        // Note: we can't just use the GitHub URL to download since the anchor\n        // tag method used by initiate_download() only works for same-origin\n        // or data: urls, so this actually fetch()s the file and then initiates\n        // the download.\n        initiate_download(await this.get(name));\n    }\n}\n", "/*\n    Copyright (c) 2023 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\n/**\n * Helper for managing \"flag\" attributes. These are html attributes that contain\n * a list of flags, for example, controlslist=\"download nofullscreen\".\n */\nexport function parseFlagAttribute<T>(value: string, dst: T) {\n    const value_parts = (value ?? \"\").split(\" \");\n\n    const flag_values: Record<string, boolean> = {};\n    const flag_names = Object.getOwnPropertyNames(dst);\n\n    for (const flag of flag_names) {\n        flag_values[flag] = false;\n        flag_values[`no${flag}`] = false;\n    }\n\n    for (const part of value_parts) {\n        flag_values[part] = true;\n    }\n\n    const dst_as_record = dst as Record<string, boolean>;\n\n    for (const flag of flag_names) {\n        dst_as_record[flag] =\n            ((flag_values[flag] || dst_as_record[flag]) &&\n                !flag_values[`no${flag}`]) ??\n            false;\n    }\n\n    return dst;\n}\n", "/*\n    Copyright (c) 2022 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nclass KiCanvasEvent<T> extends CustomEvent<T> {\n    constructor(name: string, detail: T, bubbles = false) {\n        super(name, { detail: detail, composed: true, bubbles: bubbles });\n    }\n}\n\nexport class KiCanvasLoadEvent extends KiCanvasEvent<null> {\n    static readonly type = \"kicanvas:load\";\n\n    constructor() {\n        super(KiCanvasLoadEvent.type, null);\n    }\n}\n\ninterface SelectDetails {\n    item: unknown;\n    previous: unknown;\n}\n\nexport class KiCanvasSelectEvent extends KiCanvasEvent<SelectDetails> {\n    static readonly type = \"kicanvas:select\";\n\n    constructor(detail: SelectDetails) {\n        super(KiCanvasSelectEvent.type, detail, true);\n    }\n}\n\ninterface MouseMoveDetails {\n    x: number;\n    y: number;\n}\n\nexport class KiCanvasMouseMoveEvent extends KiCanvasEvent<MouseMoveDetails> {\n    static readonly type = \"kicanvas:mousemove\";\n\n    constructor(detail: MouseMoveDetails) {\n        super(KiCanvasMouseMoveEvent.type, detail, true);\n    }\n}\n\n// Event maps for type safe addEventListener.\n\nexport interface KiCanvasEventMap {\n    [KiCanvasLoadEvent.type]: KiCanvasLoadEvent;\n    [KiCanvasSelectEvent.type]: KiCanvasSelectEvent;\n    [KiCanvasMouseMoveEvent.type]: KiCanvasMouseMoveEvent;\n}\n\ndeclare global {\n    interface WindowEventMap {\n        [KiCanvasLoadEvent.type]: KiCanvasLoadEvent;\n        [KiCanvasSelectEvent.type]: KiCanvasSelectEvent;\n    }\n\n    interface HTMLElementEventMap {\n        [KiCanvasLoadEvent.type]: KiCanvasLoadEvent;\n        [KiCanvasSelectEvent.type]: KiCanvasSelectEvent;\n    }\n}\n", "/*\n    Copyright (c) 2023 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nimport { css, html } from \"../../../base/web-components\";\nimport { KCUIElement } from \"../../../kc-ui\";\n\nexport class KCHelpPanel extends KCUIElement {\n    static override styles = [\n        ...KCUIElement.styles,\n        css`\n            p {\n                margin: 0;\n                padding: 0.5em;\n            }\n\n            a {\n                color: var(--button-bg);\n            }\n\n            a:hover {\n                color: var(--button-hover-bg);\n            }\n        `,\n    ];\n\n    override render() {\n        return html`\n            <kc-ui-panel>\n                <kc-ui-panel-title title=\"Help\"></kc-ui-panel-title>\n                <kc-ui-panel-body>\n                    <p>\n                        You're using\n                        <a href=\"https://kicanvas.org/home\">KiCanvas</a>, an\n                        interactive, browser-based viewer for KiCAD schematics\n                        and boards.\n                    </p>\n                    <p>\n                        KiCanvas is very much in <strong>alpha</strong>, so\n                        please\n                        <a\n                            href=\"https://github.com/theacodes/kicanvas/issues/new/choose\"\n                            target=\"_blank\"\n                            >file an issue on GitHub</a\n                        >\n                        if you run into any bugs.\n                    </p>\n                    <p>\n                        KiCanvas is developed by\n                        <a href=\"https://thea.codes\" target=\"_blank\"\n                            >Thea Flowers</a\n                        >\n                        and supported by\n                        <a\n                            href=\"https://github.com/sponsors/theacodes\"\n                            target=\"_blank\"\n                            >community donations</a\n                        >.\n                    </p></kc-ui-panel-body\n                >\n            </kc-ui-panel>\n        `;\n    }\n}\n\nwindow.customElements.define(\"kc-help-panel\", KCHelpPanel);\n", "/*\n    Copyright (c) 2023 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\ntype Reviver = (this: any, key: string, value: any) => any;\n\nexport class LocalStorage {\n    constructor(\n        public readonly prefix: string = \"kc\",\n        public readonly reviver?: Reviver,\n    ) {}\n\n    protected key_for(key: string): string {\n        return `${this.prefix}:${key}`;\n    }\n\n    set(key: string, val: unknown, exp?: Date) {\n        window.localStorage.setItem(\n            this.key_for(key),\n            JSON.stringify({\n                val: val,\n                exp: exp,\n            }),\n        );\n    }\n\n    get<T>(key: string, fallback: T): T;\n    get(key: string, fallback?: unknown): unknown {\n        const item_data = window.localStorage.getItem(this.key_for(key));\n\n        if (item_data === null) {\n            return fallback;\n        }\n\n        const item = JSON.parse(item_data, this.reviver);\n\n        if (item.exp && item.exp < Date.now()) {\n            this.delete(key);\n            return fallback;\n        }\n\n        return item.val;\n    }\n\n    delete(key: string) {\n        window.localStorage.removeItem(this.key_for(key));\n    }\n}\n", "/*\n    Copyright (c) 2023 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nimport { Color } from \"../../base/color\";\nimport type { Theme } from \"../../kicad/theme\";\n\nconst theme: Theme = {\n    name: \"witchhazel\",\n    friendly_name: \"Witch Hazel\",\n    board: {\n        anchor: Color.from_css(\"rgb(100, 203, 150)\"),\n        aux_items: Color.from_css(\"rgb(255, 98, 0)\"),\n        b_adhes: Color.from_css(\"rgb(0, 0, 132)\"),\n        b_crtyd: Color.from_css(\"rgb(174, 129, 255)\"),\n        b_fab: Color.from_css(\"rgb(113, 103, 153)\"),\n        b_mask: Color.from_css(\"rgba(78, 129, 137, 0.800)\"),\n        b_paste: Color.from_css(\"rgba(167, 234, 255, 0.502)\"),\n        b_silks: Color.from_css(\"rgb(136, 100, 203)\"),\n        background: Color.from_css(\"rgb(19, 18, 24)\"),\n        cmts_user: Color.from_css(\"rgb(129, 255, 190)\"),\n        copper: {\n            b: Color.from_css(\"rgb(111, 204, 219)\"),\n            f: Color.from_css(\"rgb(226, 114, 153)\"),\n            in1: Color.from_css(\"rgb(127, 200, 127)\"),\n            in10: Color.from_css(\"rgb(237, 124, 51)\"),\n            in11: Color.from_css(\"rgb(91, 195, 235)\"),\n            in12: Color.from_css(\"rgb(247, 111, 142)\"),\n            in13: Color.from_css(\"rgb(167, 165, 198)\"),\n            in14: Color.from_css(\"rgb(40, 204, 217)\"),\n            in15: Color.from_css(\"rgb(232, 178, 167)\"),\n            in16: Color.from_css(\"rgb(242, 237, 161)\"),\n            in17: Color.from_css(\"rgb(237, 124, 51)\"),\n            in18: Color.from_css(\"rgb(91, 195, 235)\"),\n            in19: Color.from_css(\"rgb(247, 111, 142)\"),\n            in2: Color.from_css(\"rgb(206, 125, 44)\"),\n            in20: Color.from_css(\"rgb(167, 165, 198)\"),\n            in21: Color.from_css(\"rgb(40, 204, 217)\"),\n            in22: Color.from_css(\"rgb(232, 178, 167)\"),\n            in23: Color.from_css(\"rgb(242, 237, 161)\"),\n            in24: Color.from_css(\"rgb(237, 124, 51)\"),\n            in25: Color.from_css(\"rgb(91, 195, 235)\"),\n            in26: Color.from_css(\"rgb(247, 111, 142)\"),\n            in27: Color.from_css(\"rgb(167, 165, 198)\"),\n            in28: Color.from_css(\"rgb(40, 204, 217)\"),\n            in29: Color.from_css(\"rgb(232, 178, 167)\"),\n            in3: Color.from_css(\"rgb(79, 203, 203)\"),\n            in30: Color.from_css(\"rgb(242, 237, 161)\"),\n            in4: Color.from_css(\"rgb(219, 98, 139)\"),\n            in5: Color.from_css(\"rgb(167, 165, 198)\"),\n            in6: Color.from_css(\"rgb(40, 204, 217)\"),\n            in7: Color.from_css(\"rgb(232, 178, 167)\"),\n            in8: Color.from_css(\"rgb(242, 237, 161)\"),\n            in9: Color.from_css(\"rgb(141, 203, 129)\"),\n        },\n        cursor: Color.from_css(\"rgb(220, 200, 255)\"),\n        drc_error: Color.from_css(\"rgba(255, 0, 237, 0.800)\"),\n        drc_exclusion: Color.from_css(\"rgba(255, 255, 255, 0.800)\"),\n        drc_warning: Color.from_css(\"rgba(255, 208, 66, 0.800)\"),\n        dwgs_user: Color.from_css(\"rgb(248, 248, 240)\"),\n        eco1_user: Color.from_css(\"rgb(129, 238, 255)\"),\n        eco2_user: Color.from_css(\"rgb(255, 129, 173)\"),\n        edge_cuts: Color.from_css(\"rgb(129, 255, 190)\"),\n        f_adhes: Color.from_css(\"rgb(132, 0, 132)\"),\n        f_crtyd: Color.from_css(\"rgb(174, 129, 255)\"),\n        f_fab: Color.from_css(\"rgb(113, 103, 153)\"),\n        f_mask: Color.from_css(\"rgb(137, 78, 99)\"),\n        f_paste: Color.from_css(\"rgba(252, 249, 255, 0.502)\"),\n        f_silks: Color.from_css(\"rgb(220, 200, 255)\"),\n        footprint_text_invisible: Color.from_css(\"rgb(40, 38, 52)\"),\n        grid: Color.from_css(\"rgb(113, 103, 153)\"),\n        grid_axes: Color.from_css(\"rgb(255, 129, 173)\"),\n        margin: Color.from_css(\"rgb(78, 137, 107)\"),\n        no_connect: Color.from_css(\"rgb(255, 148, 0)\"),\n        pad_plated_hole: Color.from_css(\"rgb(194, 194, 0)\"),\n        pad_through_hole: Color.from_css(\"rgb(227, 209, 46)\"),\n        non_plated_hole: Color.from_css(\"rgb(129, 255, 190)\"),\n        ratsnest: Color.from_css(\"rgb(128, 119, 168)\"),\n        user_1: Color.from_css(\"rgb(194, 118, 0)\"),\n        user_2: Color.from_css(\"rgb(89, 148, 220)\"),\n        user_3: Color.from_css(\"rgb(180, 219, 210)\"),\n        user_4: Color.from_css(\"rgb(216, 200, 82)\"),\n        user_5: Color.from_css(\"rgb(194, 194, 194)\"),\n        user_6: Color.from_css(\"rgb(89, 148, 220)\"),\n        user_7: Color.from_css(\"rgb(180, 219, 210)\"),\n        user_8: Color.from_css(\"rgb(216, 200, 82)\"),\n        user_9: Color.from_css(\"rgb(232, 178, 167)\"),\n        via_blind_buried: Color.from_css(\"rgb(203, 196, 100)\"),\n        via_hole: Color.from_css(\"rgb(40, 38, 52)\"),\n        via_micro: Color.from_css(\"rgb(255, 148, 0)\"),\n        via_through: Color.from_css(\"rgb(227, 209, 46)\"),\n        worksheet: Color.from_css(\"rgb(100, 190, 203)\"),\n    },\n    schematic: {\n        anchor: Color.from_css(\"rgb(174, 129, 255)\"),\n        aux_items: Color.from_css(\"rgb(255, 160, 0)\"),\n        background: Color.from_css(\"rgb(19, 18, 24)\"),\n        brightened: Color.from_css(\"rgb(200, 255, 227)\"),\n        bus: Color.from_css(\"rgb(129, 238, 255)\"),\n        bus_junction: Color.from_css(\"rgb(163, 243, 255)\"),\n        component_body: Color.from_css(\"rgb(67, 62, 86)\"),\n        component_outline: Color.from_css(\"rgb(197, 163, 255)\"),\n        cursor: Color.from_css(\"rgb(220, 200, 255)\"),\n        erc_error: Color.from_css(\"rgba(255, 55, 162, 0.800)\"),\n        erc_warning: Color.from_css(\"rgba(255, 92, 0, 0.800)\"),\n        fields: Color.from_css(\"rgb(174, 129, 255)\"),\n        grid: Color.from_css(\"rgb(113, 103, 153)\"),\n        grid_axes: Color.from_css(\"rgb(255, 129, 173)\"),\n        hidden: Color.from_css(\"rgb(67, 62, 86)\"),\n        junction: Color.from_css(\"rgb(220, 200, 255)\"),\n        label_global: Color.from_css(\"rgb(255, 247, 129)\"),\n        label_hier: Color.from_css(\"rgb(163, 255, 207)\"),\n        label_local: Color.from_css(\"rgb(220, 200, 255)\"),\n        no_connect: Color.from_css(\"rgb(255, 129, 173)\"),\n        note: Color.from_css(\"rgb(248, 248, 240)\"),\n        pin: Color.from_css(\"rgb(129, 255, 190)\"),\n        pin_name: Color.from_css(\"rgb(129, 255, 190)\"),\n        pin_number: Color.from_css(\"rgb(100, 203, 150)\"),\n        reference: Color.from_css(\"rgb(129, 238, 255)\"),\n        shadow: Color.from_css(\"rgb(200, 248, 255)\"),\n        sheet: Color.from_css(\"rgb(174, 129, 255)\"),\n        sheet_background: Color.from_css(\"rgb(19, 18, 24)\"),\n        sheet_fields: Color.from_css(\"rgb(129, 255, 190)\"),\n        sheet_filename: Color.from_css(\"rgb(78, 129, 137)\"),\n        sheet_label: Color.from_css(\"rgb(129, 255, 190)\"),\n        sheet_name: Color.from_css(\"rgb(129, 238, 255)\"),\n        value: Color.from_css(\"rgb(129, 238, 255)\"),\n        wire: Color.from_css(\"rgb(174, 129, 255)\"),\n        worksheet: Color.from_css(\"rgb(100, 190, 203)\"),\n    },\n};\n\nexport default theme;\n", "/*\n    Copyright (c) 2023 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nimport { Color } from \"../../base/color\";\nimport type { Theme } from \"../../kicad/theme\";\n\nconst theme: Theme = {\n    name: \"kicad\",\n    friendly_name: \"KiCAD\",\n    board: {\n        anchor: Color.from_css(\"rgb(255, 38, 226)\"),\n        aux_items: Color.from_css(\"rgb(255, 255, 255)\"),\n        b_adhes: Color.from_css(\"rgb(0, 0, 132)\"),\n        b_crtyd: Color.from_css(\"rgb(38, 233, 255)\"),\n        b_fab: Color.from_css(\"rgb(88, 93, 132)\"),\n        b_mask: Color.from_css(\"rgba(2, 255, 238, 0.400)\"),\n        b_paste: Color.from_css(\"rgba(0, 194, 194, 0.902)\"),\n        b_silks: Color.from_css(\"rgb(232, 178, 167)\"),\n        background: Color.from_css(\"rgb(0, 16, 35)\"),\n        cmts_user: Color.from_css(\"rgb(89, 148, 220)\"),\n        // conflicts_shadow: Color.from_css(\"rgba(255, 0, 5, 0.502)\"),\n        copper: {\n            b: Color.from_css(\"rgb(77, 127, 196)\"),\n            f: Color.from_css(\"rgb(200, 52, 52)\"),\n            in1: Color.from_css(\"rgb(127, 200, 127)\"),\n            in10: Color.from_css(\"rgb(237, 124, 51)\"),\n            in11: Color.from_css(\"rgb(91, 195, 235)\"),\n            in12: Color.from_css(\"rgb(247, 111, 142)\"),\n            in13: Color.from_css(\"rgb(167, 165, 198)\"),\n            in14: Color.from_css(\"rgb(40, 204, 217)\"),\n            in15: Color.from_css(\"rgb(232, 178, 167)\"),\n            in16: Color.from_css(\"rgb(242, 237, 161)\"),\n            in17: Color.from_css(\"rgb(237, 124, 51)\"),\n            in18: Color.from_css(\"rgb(91, 195, 235)\"),\n            in19: Color.from_css(\"rgb(247, 111, 142)\"),\n            in2: Color.from_css(\"rgb(206, 125, 44)\"),\n            in20: Color.from_css(\"rgb(167, 165, 198)\"),\n            in21: Color.from_css(\"rgb(40, 204, 217)\"),\n            in22: Color.from_css(\"rgb(232, 178, 167)\"),\n            in23: Color.from_css(\"rgb(242, 237, 161)\"),\n            in24: Color.from_css(\"rgb(237, 124, 51)\"),\n            in25: Color.from_css(\"rgb(91, 195, 235)\"),\n            in26: Color.from_css(\"rgb(247, 111, 142)\"),\n            in27: Color.from_css(\"rgb(167, 165, 198)\"),\n            in28: Color.from_css(\"rgb(40, 204, 217)\"),\n            in29: Color.from_css(\"rgb(232, 178, 167)\"),\n            in3: Color.from_css(\"rgb(79, 203, 203)\"),\n            in30: Color.from_css(\"rgb(242, 237, 161)\"),\n            in4: Color.from_css(\"rgb(219, 98, 139)\"),\n            in5: Color.from_css(\"rgb(167, 165, 198)\"),\n            in6: Color.from_css(\"rgb(40, 204, 217)\"),\n            in7: Color.from_css(\"rgb(232, 178, 167)\"),\n            in8: Color.from_css(\"rgb(242, 237, 161)\"),\n            in9: Color.from_css(\"rgb(141, 203, 129)\"),\n        },\n        cursor: Color.from_css(\"rgb(255, 255, 255)\"),\n        drc_error: Color.from_css(\"rgba(215, 91, 107, 0.800)\"),\n        drc_exclusion: Color.from_css(\"rgba(255, 255, 255, 0.800)\"),\n        drc_warning: Color.from_css(\"rgba(255, 208, 66, 0.800)\"),\n        dwgs_user: Color.from_css(\"rgb(194, 194, 194)\"),\n        eco1_user: Color.from_css(\"rgb(180, 219, 210)\"),\n        eco2_user: Color.from_css(\"rgb(216, 200, 82)\"),\n        edge_cuts: Color.from_css(\"rgb(208, 210, 205)\"),\n        f_adhes: Color.from_css(\"rgb(132, 0, 132)\"),\n        f_crtyd: Color.from_css(\"rgb(255, 38, 226)\"),\n        f_fab: Color.from_css(\"rgb(175, 175, 175)\"),\n        f_mask: Color.from_css(\"rgba(216, 100, 255, 0.400)\"),\n        f_paste: Color.from_css(\"rgba(180, 160, 154, 0.902)\"),\n        f_silks: Color.from_css(\"rgb(242, 237, 161)\"),\n        footprint_text_invisible: Color.from_css(\"rgb(132, 132, 132)\"),\n        grid: Color.from_css(\"rgb(132, 132, 132)\"),\n        grid_axes: Color.from_css(\"rgb(194, 194, 194)\"),\n        // locked_shadow: Color.from_css(\"rgba(255, 38, 226, 0.502)\"),\n        margin: Color.from_css(\"rgb(255, 38, 226)\"),\n        no_connect: Color.from_css(\"rgb(0, 0, 132)\"),\n        pad_plated_hole: Color.from_css(\"rgb(194, 194, 0)\"),\n        pad_through_hole: Color.from_css(\"rgb(227, 183, 46)\"),\n        // page_limits: Color.from_css(\"rgb(132, 132, 132)\"),\n        non_plated_hole: Color.from_css(\"rgb(26, 196, 210)\"),\n        // plated_hole: Color.from_css(\"rgb(26, 196, 210)\"),\n        ratsnest: Color.from_css(\"rgba(245, 255, 213, 0.702)\"),\n        user_1: Color.from_css(\"rgb(194, 194, 194)\"),\n        user_2: Color.from_css(\"rgb(89, 148, 220)\"),\n        user_3: Color.from_css(\"rgb(180, 219, 210)\"),\n        user_4: Color.from_css(\"rgb(216, 200, 82)\"),\n        user_5: Color.from_css(\"rgb(194, 194, 194)\"),\n        user_6: Color.from_css(\"rgb(89, 148, 220)\"),\n        user_7: Color.from_css(\"rgb(180, 219, 210)\"),\n        user_8: Color.from_css(\"rgb(216, 200, 82)\"),\n        user_9: Color.from_css(\"rgb(232, 178, 167)\"),\n        via_blind_buried: Color.from_css(\"rgb(187, 151, 38)\"),\n        via_hole: Color.from_css(\"rgb(227, 183, 46)\"),\n        via_micro: Color.from_css(\"rgb(0, 132, 132)\"),\n        via_through: Color.from_css(\"rgb(236, 236, 236)\"),\n        worksheet: Color.from_css(\"rgb(200, 114, 171)\"),\n    },\n    schematic: {\n        anchor: Color.from_css(\"rgb(0, 0, 255)\"),\n        aux_items: Color.from_css(\"rgb(0, 0, 0)\"),\n        background: Color.from_css(\"rgb(245, 244, 239)\"),\n        brightened: Color.from_css(\"rgb(255, 0, 255)\"),\n        bus: Color.from_css(\"rgb(0, 0, 132)\"),\n        bus_junction: Color.from_css(\"rgb(0, 0, 132)\"),\n        component_body: Color.from_css(\"rgb(255, 255, 194)\"),\n        component_outline: Color.from_css(\"rgb(132, 0, 0)\"),\n        cursor: Color.from_css(\"rgb(15, 15, 15)\"),\n        erc_error: Color.from_css(\"rgba(230, 9, 13, 0.800)\"),\n        // erc_exclusion: Color.from_css(\"rgba(94, 194, 194, 0.800)\"),\n        erc_warning: Color.from_css(\"rgba(209, 146, 0, 0.800)\"),\n        fields: Color.from_css(\"rgb(132, 0, 132)\"),\n        grid: Color.from_css(\"rgb(181, 181, 181)\"),\n        grid_axes: Color.from_css(\"rgb(0, 0, 132)\"),\n        hidden: Color.from_css(\"rgb(94, 194, 194)\"),\n        // hovered: Color.from_css(\"rgb(0, 0, 255)\"),\n        junction: Color.from_css(\"rgb(0, 150, 0)\"),\n        label_global: Color.from_css(\"rgb(132, 0, 0)\"),\n        label_hier: Color.from_css(\"rgb(114, 86, 0)\"),\n        label_local: Color.from_css(\"rgb(15, 15, 15)\"),\n        // netclass_flag: Color.from_css(\"rgb(72, 72, 72)\"),\n        no_connect: Color.from_css(\"rgb(0, 0, 132)\"),\n        note: Color.from_css(\"rgb(0, 0, 194)\"),\n        // note_background: Color.from_css(\"rgba(0, 0, 0, 0.000)\"),\n        // page_limits: Color.from_css(\"rgb(181, 181, 181)\"),\n        pin: Color.from_css(\"rgb(132, 0, 0)\"),\n        pin_name: Color.from_css(\"rgb(0, 100, 100)\"),\n        pin_number: Color.from_css(\"rgb(169, 0, 0)\"),\n        // private_note: Color.from_css(\"rgb(72, 72, 255)\"),\n        reference: Color.from_css(\"rgb(0, 100, 100)\"),\n        shadow: Color.from_css(\"rgba(199, 235, 255, 0.800)\"),\n        sheet: Color.from_css(\"rgb(132, 0, 0)\"),\n        sheet_background: Color.from_css(\"rgba(255, 255, 255, 0.000)\"),\n        sheet_fields: Color.from_css(\"rgb(132, 0, 132)\"),\n        sheet_filename: Color.from_css(\"rgb(114, 86, 0)\"),\n        sheet_label: Color.from_css(\"rgb(0, 100, 100)\"),\n        sheet_name: Color.from_css(\"rgb(0, 100, 100)\"),\n        value: Color.from_css(\"rgb(0, 100, 100)\"),\n        wire: Color.from_css(\"rgb(0, 150, 0)\"),\n        worksheet: Color.from_css(\"rgb(132, 0, 0)\"),\n    },\n};\n\nexport default theme;\n", "/*\n    Copyright (c) 2023 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nimport { type Theme } from \"../../kicad\";\nimport witch_hazel from \"./witch-hazel\";\nimport kicad_default from \"./kicad-default\";\n\nconst themes = [witch_hazel, kicad_default];\nconst themes_by_name = new Map(\n    themes.map((v) => {\n        return [v.name, v];\n    }),\n);\n\nexport default {\n    default: witch_hazel,\n\n    by_name(name: string): Theme {\n        return themes_by_name.get(name) ?? this.default;\n    },\n\n    list(): Theme[] {\n        return themes;\n    },\n};\n", "/*\n    Copyright (c) 2023 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nimport { listen } from \"../base/events\";\nimport { LocalStorage } from \"../base/local-storage\";\nimport type { Constructor } from \"../base/types\";\nimport type { KCUIElement } from \"../kc-ui\";\nimport type { Theme } from \"../kicad\";\nimport themes from \"./themes\";\n\nexport class Preferences extends EventTarget {\n    public static readonly INSTANCE = new Preferences();\n\n    private storage = new LocalStorage(\"kc:prefs\");\n\n    public theme: Theme = themes.default;\n    public alignControlsWithKiCad: boolean = true;\n\n    public save() {\n        this.storage.set(\"theme\", this.theme.name);\n        this.storage.set(\"alignControlsWithKiCad\", this.alignControlsWithKiCad);\n        this.dispatchEvent(new PreferencesChangeEvent({ preferences: this }));\n    }\n\n    public load() {\n        this.theme = themes.by_name(\n            this.storage.get(\"theme\", themes.default.name),\n        );\n        this.alignControlsWithKiCad = this.storage.get(\n            \"alignControlsWithKiCad\",\n            false,\n        );\n    }\n}\n\nPreferences.INSTANCE.load();\n\nexport type PreferencesChangeEventDetails = {\n    preferences: Preferences;\n};\n\nexport class PreferencesChangeEvent extends CustomEvent<PreferencesChangeEventDetails> {\n    static readonly type = \"kicanvas:preferences:change\";\n\n    constructor(detail: PreferencesChangeEventDetails) {\n        super(PreferencesChangeEvent.type, {\n            detail: detail,\n            composed: true,\n            bubbles: true,\n        });\n    }\n}\n\n/**\n * Mixin used to add provideContext and requestContext methods.\n */\nexport function WithPreferences<T extends Constructor<KCUIElement>>(Base: T) {\n    return class WithPreferences extends Base {\n        constructor(...args: any[]) {\n            super(...args);\n\n            this.addDisposable(\n                listen(\n                    Preferences.INSTANCE,\n                    PreferencesChangeEvent.type,\n                    () => {\n                        this.preferenceChangeCallback(this.preferences);\n                    },\n                ),\n            );\n        }\n\n        get preferences() {\n            return Preferences.INSTANCE;\n        }\n\n        async preferenceChangeCallback(preferences: Preferences) {}\n    };\n}\n", "/*\n    Copyright (c) 2023 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nimport { css, html, query } from \"../../../base/web-components\";\nimport { KCUIElement } from \"../../../kc-ui\";\nimport { Preferences } from \"../../preferences\";\nimport themes from \"../../themes\";\n\nconst prefs = Preferences.INSTANCE;\n\nexport class KCPreferencesPanel extends KCUIElement {\n    static override styles = [\n        ...KCUIElement.styles,\n        css`\n            select {\n                box-sizing: border-box;\n                display: block;\n                width: 100%;\n                max-width: 100%;\n                margin-top: 0.25em;\n                font-family: inherit;\n                font-size: inherit;\n                font-weight: 300;\n                margin-top: 0.25em;\n                border-radius: 0.25em;\n                text-align: left;\n                padding: 0.25em;\n                background: var(--input-bg);\n                color: var(--input-fg);\n                border: var(--input-border);\n                transition:\n                    color var(--transition-time-medium) ease,\n                    box-shadow var(--transition-time-medium) ease,\n                    outline var(--transition-time-medium) ease,\n                    background var(--transition-time-medium) ease,\n                    border var(--transition-time-medium) ease;\n            }\n\n            select::after {\n                display: block;\n                content: \"\u25BE\";\n                color: var(--input-fg);\n            }\n\n            select:hover {\n                z-index: 10;\n                box-shadow: var(--input-hover-shadow);\n            }\n\n            select:focus {\n                z-index: 10;\n                box-shadow: none;\n                outline: var(--input-focus-outline);\n            }\n        `,\n    ];\n\n    @query(\"[name=theme]\", true)\n    private theme_control!: HTMLSelectElement;\n\n    override initialContentCallback() {\n        this.renderRoot.addEventListener(\"input\", (e) => {\n            const target = e.target as HTMLInputElement;\n\n            if (target.name === \"theme\") {\n                prefs.theme = themes.by_name(this.theme_control.value);\n            }\n            if (target.name === \"align-controls-kicad\") {\n                prefs.alignControlsWithKiCad = target.checked;\n            }\n            prefs.save();\n        });\n    }\n\n    override render() {\n        const theme_options = themes.list().map((v) => {\n            return html`<option\n                value=\"${v.name}\"\n                selected=\"${prefs.theme.name == v.name}\">\n                ${v.friendly_name}\n            </option>`;\n        });\n\n        return html`\n            <kc-ui-panel>\n                <kc-ui-panel-title title=\"Preferences\"></kc-ui-panel-title>\n                <kc-ui-panel-body padded>\n                    <kc-ui-control-list>\n                        <kc-ui-control>\n                            <label>Theme</label>\n                            <select name=\"theme\" value=\"kicad\">\n                                ${theme_options}\n                            </select>\n                        </kc-ui-control>\n                    </kc-ui-control-list>\n                    <kc-ui-control>\n                        <label>\n                            <input\n                                type=\"checkbox\"\n                                name=\"align-controls-kicad\"\n                                checked=\"${prefs.alignControlsWithKiCad}\" />\n                            Align controls with KiCad\n                        </label>\n                    </kc-ui-control>\n                </kc-ui-panel-body>\n            </kc-ui-panel>\n        `;\n    }\n}\n\nwindow.customElements.define(\"kc-preferences-panel\", KCPreferencesPanel);\n", "/*\n    Copyright (c) 2023 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nimport { delegate, listen } from \"../../../base/events\";\nimport { no_self_recursion } from \"../../../base/functions\";\nimport { css, html } from \"../../../base/web-components\";\nimport {\n    KCUIElement,\n    KCUIMenuElement,\n    type KCUIMenuItemElement,\n} from \"../../../kc-ui\";\nimport type { Project } from \"../../project\";\n\nexport class KCProjectPanelElement extends KCUIElement {\n    static override styles = [\n        ...KCUIElement.styles,\n        css`\n            .page {\n                display: flex;\n                align-items: center;\n            }\n\n            .page span.name {\n                margin-right: 1em;\n                text-overflow: ellipsis;\n                white-space: nowrap;\n                overflow: hidden;\n            }\n\n            .page span.filename {\n                flex: 1;\n                text-overflow: ellipsis;\n                white-space: nowrap;\n                overflow: hidden;\n                margin-left: 1em;\n                text-align: right;\n                color: #aaa;\n            }\n\n            .page kc-ui-button {\n                margin-left: 0.5em;\n            }\n\n            .page span.number {\n                flex: 0;\n                background: var(--dropdown-hover-bg);\n                border: 1px solid transparent;\n                border-radius: 0.5em;\n                font-size: 0.8em;\n                padding: 0px 0.3em;\n                margin-right: 0.5em;\n            }\n\n            kc-ui-menu-item:hover span.number {\n                background: var(--dropdown-bg);\n            }\n\n            kc-ui-menu-item[selected]:hover span.number {\n                background: var(--dropdown-hover-bg);\n            }\n        `,\n    ];\n\n    #menu: KCUIMenuElement;\n    project: Project;\n\n    override connectedCallback() {\n        (async () => {\n            this.project = await this.requestContext(\"project\");\n            super.connectedCallback();\n        })();\n    }\n\n    override initialContentCallback() {\n        super.initialContentCallback();\n\n        this.addDisposable(\n            listen(this.project, \"load\", (e) => {\n                this.update();\n            }),\n        );\n\n        this.addDisposable(\n            listen(this.project, \"change\", (e) => {\n                this.selected = this.project.active_page?.project_path ?? null;\n            }),\n        );\n\n        this.addEventListener(\"kc-ui-menu:select\", (e) => {\n            const source = (e as CustomEvent).detail as KCUIMenuItemElement;\n            this.selected = source?.name ?? null;\n            this.change_current_project_page(this.selected);\n        });\n\n        delegate(this.renderRoot, \"kc-ui-button\", \"click\", (e, source) => {\n            const menu_item = source.closest(\n                \"kc-ui-menu-item\",\n            ) as KCUIMenuItemElement;\n\n            this.project.download(menu_item.name);\n        });\n    }\n\n    get selected() {\n        return this.#menu.selected?.name ?? null;\n    }\n\n    set selected(name: string | null) {\n        this.#menu.selected = name;\n    }\n\n    @no_self_recursion\n    private change_current_project_page(name: string | null) {\n        this.project.set_active_page(name);\n    }\n\n    override render() {\n        const file_btn_elms = [];\n\n        if (!this.project) {\n            return html``;\n        }\n\n        for (const page of this.project.pages()) {\n            const icon =\n                page.type == \"schematic\"\n                    ? \"svg:schematic_file\"\n                    : \"svg:pcb_file\";\n\n            const number = page.page\n                ? html`<span class=\"number\">${page.page}</span>`\n                : \"\";\n\n            file_btn_elms.push(\n                html`<kc-ui-menu-item\n                    icon=\"${icon}\"\n                    name=\"${page.project_path}\">\n                    <span class=\"page\">\n                        ${number}\n                        <span class=\"name\">\n                            ${page.name ?? page.filename}\n                        </span>\n                        <span class=\"filename\">\n                            ${page.name && page.name !== page.filename\n                                ? page.filename\n                                : \"\"}\n                        </span>\n                        <kc-ui-button\n                            variant=\"menu\"\n                            icon=\"download\"\n                            title=\"Download\"></kc-ui-button>\n                    </span>\n                </kc-ui-menu-item>`,\n            );\n        }\n\n        this.#menu = html`<kc-ui-menu>\n            ${file_btn_elms}\n        </kc-ui-menu>` as KCUIMenuElement;\n\n        return html`<kc-ui-panel>\n            <kc-ui-panel-title title=\"Project\"></kc-ui-panel-title>\n            <kc-ui-panel-body>${this.#menu}</kc-ui-panel-body>\n        </kc-ui-panel>`;\n    }\n}\n\nwindow.customElements.define(\"kc-project-panel\", KCProjectPanelElement);\n", "/*\n    Copyright (c) 2023 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nimport { css, html } from \"../../../base/web-components\";\nimport { KCUIElement, type KCUIButtonElement } from \"../../../kc-ui\";\nimport {\n    KiCanvasMouseMoveEvent,\n    KiCanvasSelectEvent,\n} from \"../../../viewers/base/events\";\nimport type { Viewer } from \"../../../viewers/base/viewer\";\n\nexport class KCViewerBottomToolbarElement extends KCUIElement {\n    static override styles = [\n        ...KCUIElement.styles,\n        css`\n            output {\n                width: unset;\n                margin: unset;\n                padding: 0.5em;\n                color: var(--button-toolbar-fg);\n                background: var(--button-toolbar-bg);\n                border: 1px solid var(--button-toolbar-bg);\n                border-radius: 0.25em;\n                font-weight: 300;\n                font-size: 0.9em;\n                box-shadow: var(--input-hover-shadow);\n                user-select: none;\n            }\n        `,\n    ];\n\n    viewer: Viewer;\n    #position_elm: HTMLOutputElement;\n    #zoom_to_page_btn: KCUIButtonElement;\n    #zoom_to_selection_btn: KCUIButtonElement;\n\n    override connectedCallback() {\n        (async () => {\n            this.viewer = await this.requestLazyContext(\"viewer\");\n            await this.viewer.loaded;\n\n            super.connectedCallback();\n\n            this.addDisposable(\n                this.viewer.addEventListener(\n                    KiCanvasMouseMoveEvent.type,\n                    () => {\n                        this.update_position();\n                    },\n                ),\n            );\n            this.addDisposable(\n                this.viewer.addEventListener(KiCanvasSelectEvent.type, (e) => {\n                    this.#zoom_to_selection_btn.disabled = e.detail.item\n                        ? false\n                        : true;\n                }),\n            );\n\n            this.#zoom_to_page_btn.addEventListener(\"click\", (e) => {\n                e.preventDefault();\n                this.viewer.zoom_to_page();\n            });\n            this.#zoom_to_selection_btn.addEventListener(\"click\", (e) => {\n                e.preventDefault();\n                this.viewer.zoom_to_selection();\n            });\n        })();\n    }\n\n    private update_position() {\n        const pos = this.viewer.mouse_position;\n        this.#position_elm.value = `${pos.x.toFixed(2)}, ${pos.y.toFixed(\n            2,\n        )} mm`;\n    }\n\n    override render() {\n        this.#position_elm = html`<output\n            slot=\"left\"\n            class=\"toolbar\"></output>` as HTMLOutputElement;\n\n        this.#zoom_to_page_btn = html`<kc-ui-button\n            slot=\"right\"\n            variant=\"toolbar\"\n            name=\"zoom_to_page\"\n            title=\"zoom to page\"\n            icon=\"svg:zoom_page\">\n        </kc-ui-button>` as KCUIButtonElement;\n\n        this.#zoom_to_selection_btn = html` <kc-ui-button\n            slot=\"right\"\n            variant=\"toolbar\"\n            name=\"zoom_to_selection\"\n            title=\"zoom to selection\"\n            icon=\"svg:zoom_footprint\"\n            disabled>\n        </kc-ui-button>` as KCUIButtonElement;\n\n        this.update_position();\n\n        return html`<kc-ui-floating-toolbar location=\"bottom\">\n            ${this.#position_elm} ${this.#zoom_to_selection_btn}\n            ${this.#zoom_to_page_btn}\n        </kc-ui-floating-toolbar>`;\n    }\n}\n\nwindow.customElements.define(\n    \"kc-viewer-bottom-toolbar\",\n    KCViewerBottomToolbarElement,\n);\n", "/*\n    Copyright (c) 2023 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nimport { DeferredPromise } from \"../../../base/async\";\nimport { delegate, listen } from \"../../../base/events\";\nimport { length } from \"../../../base/iterator\";\nimport {\n  attribute,\n  html,\n  type ElementOrFragment,\n} from \"../../../base/web-components\";\nimport { parseFlagAttribute } from \"../../../base/web-components/flag-attribute\";\nimport {\n  KCUIActivitySideBarElement,\n  KCUIButtonElement,\n  KCUIElement,\n} from \"../../../kc-ui\";\nimport { KiCanvasSelectEvent } from \"../../../viewers/base/events\";\nimport type { Viewer } from \"../../../viewers/base/viewer\";\nimport type { Project, ProjectPage } from \"../../project\";\n\n// import dependent elements so they're registered before use.\nimport \"./help-panel\";\nimport \"./preferences-panel\";\nimport \"./project-panel\";\nimport \"./viewer-bottom-toolbar\";\n\ninterface ViewerElement extends HTMLElement {\n  viewer: Viewer;\n  load(src: ProjectPage): Promise<void>;\n  disableinteraction: boolean;\n}\n\nexport declare type ControlsType = \"none\" | \"basic\" | \"basic+\" | \"full\" | \"\";\n\n/**\n * Common base class for the schematic, board, etc. apps.\n */\nexport abstract class KCViewerAppElement<\n  ViewerElementT extends ViewerElement,\n> extends KCUIElement {\n  #viewer_elm: ViewerElementT;\n  #activity_bar: KCUIActivitySideBarElement | null;\n\n  project: Project;\n  viewerReady: DeferredPromise<boolean> = new DeferredPromise<boolean>();\n  viewerLoaded: DeferredPromise<boolean> = new DeferredPromise<boolean>();\n\n  constructor() {\n    super();\n    this.provideLazyContext(\"viewer\", () => this.viewer);\n  }\n\n  get viewerElement() {\n    return this.#viewer_elm;\n  }\n\n  get viewer() {\n    return this.#viewer_elm.viewer;\n  }\n\n  @attribute({ type: String })\n  controls: ControlsType;\n\n  @attribute({ type: String })\n  controlslist: string;\n\n  @attribute({ type: Boolean })\n  sidebarcollapsed: boolean;\n\n  override connectedCallback() {\n    this.hidden = true;\n    (async () => {\n      this.project = await this.requestContext(\"project\");\n      await this.project.loaded;\n      super.connectedCallback();\n    })();\n  }\n\n  override initialContentCallback() {\n    // If the project already has an active page, load it.\n    if (this.project.active_page) {\n      this.load(this.project.active_page!);\n    }\n\n    // Listen for changes to the project's active page and load or hide\n    // as needed.\n    this.addDisposable(\n      listen(this.project, \"change\", async (e) => {\n        const page = this.project.active_page;\n        if (page) {\n          await this.load(page);\n        } else {\n          this.hidden = true;\n        }\n      }),\n    );\n\n    // Handle item selection in the viewers.\n    this.addDisposable(\n      this.viewer.addEventListener(KiCanvasSelectEvent.type, (e) => {\n        this.on_viewer_select(e.detail.item, e.detail.previous);\n      }),\n    );\n\n    // Handle download button.\n    delegate(this.renderRoot, \"kc-ui-button\", \"click\", (e) => {\n      const target = e.target as KCUIButtonElement;\n      console.log(\"button\", target);\n      switch (target.name) {\n        case \"download\":\n          if (this.project.active_page) {\n            this.project.download(\n              this.project.active_page.filename,\n            );\n          }\n          break;\n        default:\n          console.warn(\"Unknown button\", e);\n      }\n    });\n  }\n\n  protected abstract on_viewer_select(\n    item?: unknown,\n    previous?: unknown,\n  ): void;\n\n  protected abstract can_load(src: ProjectPage): boolean;\n\n  async load(src: ProjectPage) {\n    await this.viewerReady;\n    if (this.can_load(src)) {\n      await this.#viewer_elm.load(src);\n      this.viewerLoaded.resolve(true);\n      this.hidden = false;\n    } else {\n      this.hidden = true;\n    }\n  }\n\n  #has_more_than_one_page() {\n    return length(this.project.pages()) > 1;\n  }\n\n  protected make_pre_activities() {\n    const activities = [];\n\n    if (this.#has_more_than_one_page()) {\n      activities.push(\n        html`<kc-ui-activity\n                    slot=\"activities\"\n                    name=\"Project\"\n                    icon=\"folder\">\n                    <kc-project-panel></kc-project-panel>\n                </kc-ui-activity>`,\n      );\n    }\n\n    return activities;\n  }\n\n  protected make_post_activities() {\n    return [\n      // Preferences\n      html`<kc-ui-activity\n                slot=\"activities\"\n                name=\"Preferences\"\n                icon=\"settings\"\n                button-location=\"bottom\">\n                <kc-preferences-panel></kc-preferences-panel>\n            </kc-ui-activity>`,\n\n      // Help\n      html` <kc-ui-activity\n                slot=\"activities\"\n                name=\"Help\"\n                icon=\"help\"\n                button-location=\"bottom\">\n                <kc-help-panel></kc-help-panel>\n            </kc-ui-activity>`,\n    ];\n  }\n\n  protected abstract make_activities(controls?: ControlsType): ElementOrFragment[];\n\n  protected change_activity(name?: string) {\n    this.#activity_bar?.change_activity(name);\n  }\n\n  protected abstract make_viewer_element(): ViewerElementT;\n\n  override render() {\n    const controls = this.controls ?? \"none\";\n    const controlslist = parseFlagAttribute(\n      this.controlslist ?? \"\",\n      controls == \"none\"\n        ? { fullscreen: false, download: false }\n        : { fullscreen: true, download: true },\n    );\n\n    this.#viewer_elm = this.make_viewer_element();\n    this.#viewer_elm.disableinteraction = controls == \"none\";\n\n    let resizer = null;\n\n    if (controls == \"full\" || controls == \"basic+\") {\n      const pre_activities = this.make_pre_activities();\n      const post_activities = this.make_post_activities();\n      const activities = this.make_activities(controls);\n      this.#activity_bar = html`<kc-ui-activity-side-bar\n                collapsed=\"${this.sidebarcollapsed}\">\n                ${pre_activities} ${activities} ${post_activities}\n            </kc-ui-activity-side-bar>` as KCUIActivitySideBarElement;\n      resizer = html`<kc-ui-resizer></kc-ui-resizer>`;\n    } else {\n      // NO activity bar\n      this.#activity_bar = null;\n    }\n\n    const top_toolbar_buttons = [];\n\n    if (controlslist[\"download\"] && !this.#has_more_than_one_page()) {\n      top_toolbar_buttons.push(\n        html`<kc-ui-button\n                    slot=\"right\"\n                    name=\"download\"\n                    title=\"download\"\n                    icon=\"download\"\n                    variant=\"toolbar-alt\">\n                </kc-ui-button>`,\n      );\n    }\n\n    const top_toolbar = html`<kc-ui-floating-toolbar location=\"top\">\n            ${top_toolbar_buttons}\n        </kc-ui-floating-toolbar>`;\n\n    let bottom_toolbar = null;\n    if (controls != \"none\") {\n      bottom_toolbar = html`<kc-viewer-bottom-toolbar></kc-viewer-bottom-toolbar>`;\n    }\n\n    return html`<kc-ui-split-view vertical>\n            <kc-ui-view class=\"grow\">\n                ${top_toolbar} ${this.#viewer_elm} ${bottom_toolbar}\n            </kc-ui-view>\n            ${resizer} ${this.#activity_bar}\n        </kc-ui-split-view>`;\n  }\n\n  override renderedCallback(): void | undefined {\n    window.requestAnimationFrame(() => {\n      this.viewerReady.resolve(true);\n    });\n  }\n}\n", "/*\n    Copyright (c) 2022 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\n/**\n * Basic abstract geometric primitives that can be drawn using the Renderer\n * classes. These are dumb data structures- the actual code used to draw\n * them is implemented as part of the specific Renderer.\n */\n\nimport { Angle, BBox, Vec2 } from \"../base/math\";\nimport { Color } from \"../base/color\";\n\ntype OptionalDefaultColor = Color | false | null;\n\n/** A filled circle */\nexport class Circle {\n    /**\n     * Create a filled circle\n     * @param center - center of circle\n     * @param radius - circle radius\n     * @param color - fill color\n     */\n    constructor(\n        public center: Vec2,\n        public radius: number,\n        public color: OptionalDefaultColor,\n    ) {}\n}\n\n/** A stroked circular arc */\nexport class Arc {\n    /**\n     * Create a stroked arc\n     * @param center - center of arc circle\n     * @param radius - arc circle radius\n     * @param start_angle - arc start angle\n     * @param end_angle - arc end angle\n     * @param color - stroke color\n     */\n    constructor(\n        public center: Vec2,\n        public radius: number,\n        public start_angle: Angle,\n        public end_angle: Angle,\n        public width: number,\n        public color: OptionalDefaultColor,\n    ) {}\n}\n\n/** Stroked polyline */\nexport class Polyline {\n    /**\n     * Create a stroked polyline\n     * @param points - line segment points\n     * @param width - thickness of the rendered lines\n     * @param color - stroke color\n     */\n    constructor(\n        public points: Vec2[],\n        public width: number,\n        public color: OptionalDefaultColor,\n    ) {}\n\n    /**\n     * Create a rectangular outline from a bounding box.\n     * @param bb\n     * @param width - thickness of the rendered lines\n     * @param color - fill color\n     */\n    static from_BBox(bb: BBox, width: number, color: Color) {\n        return new Polyline(\n            [\n                bb.top_left,\n                bb.top_right,\n                bb.bottom_right,\n                bb.bottom_left,\n                bb.top_left,\n            ],\n            width,\n            color,\n        );\n    }\n}\n\n/** Filled polygon */\nexport class Polygon {\n    vertices: Float32Array;\n\n    /**\n     * Create a filled polygon\n     * @param points - point cloud representing the polygon\n     * @param color - fill color\n     */\n    constructor(\n        public points: Vec2[],\n        public color: OptionalDefaultColor,\n    ) {}\n\n    /**\n     * Create a filled polygon from a bounding box.\n     * @param bb\n     * @param color - fill color\n     */\n    static from_BBox(bb: BBox, color: Color) {\n        return new Polygon(\n            [bb.top_left, bb.top_right, bb.bottom_right, bb.bottom_left],\n            color,\n        );\n    }\n}\n\nexport type Shape = Circle | Arc | Polygon | Polyline;\n", "/*\n    Copyright (c) 2023 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nimport { Color } from \"../base/color\";\nimport type { IDisposable } from \"../base/disposable\";\nimport { Angle, BBox, Arc as MathArc, Matrix3, Vec2 } from \"../base/math\";\nimport { Arc, Circle, Polygon, Polyline } from \"./shapes\";\n\n/**\n * KiCanvas' abstraction over various graphics backends.\n *\n * In general, KiCanvas uses a retained-mode rendering system. That is,\n * drawing commands are issued to the renderer by a \"painter\" and the renderer\n * does not immediately draw the specified graphics. Instead, the renderer will\n * compile all of the drawing commands together into a \"layer\". These layers\n * will be actually rendered later.\n *\n * This approach gives us a hell of a lot of speed in exchange for some memory\n * usage. All of the complex logic to turn schematic or board objects into\n * graphics primitives is done just once before anything is actually rendered.\n * After that, KiCanvas can easily re-draw everything with different\n * transformations, visibilities, and orders without having to re-calculate\n * everything.\n *\n */\nexport abstract class Renderer implements IDisposable {\n    #current_bbox: BBox | null;\n\n    canvas: HTMLCanvasElement;\n    canvas_size: Vec2 = new Vec2(0, 0);\n    state: RenderStateStack = new RenderStateStack();\n    #background_color: Color = Color.black.copy();\n\n    constructor(canvas: HTMLCanvasElement) {\n        this.canvas = canvas;\n        this.background_color = this.#background_color;\n    }\n\n    get background_color(): Color {\n        return this.#background_color;\n    }\n\n    set background_color(color: Color) {\n        this.#background_color = color;\n        this.canvas.style.backgroundColor = this.background_color.to_css();\n    }\n\n    abstract setup(): Promise<void>;\n\n    abstract dispose(): void;\n\n    /**\n     * Update the canvas and context with the new viewport size if needed. This\n     * is typically called by clear_canvas().\n     */\n    abstract update_canvas_size(): void;\n\n    /**\n     * Clear the canvas. Typically called at the start of a frame.\n     */\n    abstract clear_canvas(): void;\n\n    /**\n     * Start a new bbox for automatically tracking bounding boxes of drawn objects.\n     */\n    start_bbox(): void {\n        this.#current_bbox = new BBox(0, 0, 0, 0);\n    }\n\n    /**\n     * Adds a bbox to the current bbox.\n     */\n    add_bbox(bb: BBox) {\n        if (!this.#current_bbox) {\n            return;\n        }\n\n        this.#current_bbox = BBox.combine([this.#current_bbox, bb], bb.context);\n    }\n\n    /**\n     * Stop adding drawing to the current bbox and return it.\n     */\n    end_bbox(context: any): BBox {\n        const bb = this.#current_bbox;\n        if (bb == null) {\n            throw new Error(\"No current bbox\");\n        }\n\n        bb.context = context;\n\n        this.#current_bbox = null;\n        return bb;\n    }\n\n    /**\n     * Start a new layer of graphics.\n     *\n     * Each layer represents a set of primitives\n     * that are all drawn at the same time and at the same depth. end_layer()\n     * must be called for the graphics to actually show up.\n     */\n    abstract start_layer(name: string): void;\n\n    /**\n     * Finish a layer of graphics.\n     *\n     * Performs any additional work needed such as tesselation and buffer\n     * management.\n     */\n    abstract end_layer(): RenderLayer;\n\n    /**\n     * Iterate through layers.\n     */\n    abstract get layers(): Iterable<RenderLayer>;\n\n    /**\n     * Remove a layer, called automatically by layer.dispose\n     */\n    abstract remove_layer(layer: RenderLayer): void;\n\n    /**\n     * Draw a filled circle\n     */\n    abstract circle(circle: Circle): void;\n    abstract circle(center: Vec2, radius: number, color?: Color): void;\n    abstract circle(\n        circle_or_center: Circle | Vec2,\n        radius?: number,\n        color?: Color,\n    ): void;\n\n    protected prep_circle(\n        circle_or_center: Circle | Vec2,\n        radius?: number,\n        color?: Color,\n    ): Circle {\n        let circle: Circle;\n        if (circle_or_center instanceof Circle) {\n            circle = circle_or_center;\n        } else {\n            circle = new Circle(\n                circle_or_center,\n                radius!,\n                color ?? this.state.fill,\n            );\n        }\n\n        if (!circle.color || circle.color.is_transparent_black) {\n            circle.color = this.state.fill ?? Color.transparent_black;\n        }\n\n        circle.center = this.state.matrix.transform(circle.center);\n\n        const radial = new Vec2(circle.radius, circle.radius);\n        this.add_bbox(\n            BBox.from_points([\n                circle.center.add(radial),\n                circle.center.sub(radial),\n            ]),\n        );\n\n        return circle;\n    }\n\n    /**\n     * Draw a stroked arc\n     */\n    abstract arc(arc: Arc): void;\n    abstract arc(\n        center: Vec2,\n        radius: number,\n        start_angle: Angle,\n        end_angle: Angle,\n        width?: number,\n        color?: Color,\n    ): void;\n    abstract arc(\n        arc_or_center: Arc | Vec2,\n        radius?: number,\n        start_angle?: Angle,\n        end_angle?: Angle,\n        width?: number,\n        color?: Color,\n    ): void;\n\n    protected prep_arc(\n        arc_or_center: Arc | Vec2,\n        radius?: number,\n        start_angle?: Angle,\n        end_angle?: Angle,\n        width?: number,\n        color?: Color,\n    ): Arc {\n        let arc: Arc;\n        if (arc_or_center instanceof Arc) {\n            arc = arc_or_center;\n        } else {\n            arc = new Arc(\n                arc_or_center,\n                radius!,\n                start_angle ?? new Angle(0),\n                end_angle ?? new Angle(Math.PI * 2),\n                width ?? this.state.stroke_width,\n                color ?? this.state.stroke,\n            );\n        }\n\n        if (!arc.color || arc.color.is_transparent_black) {\n            arc.color = this.state.stroke ?? Color.transparent_black;\n        }\n\n        // TODO: This should probably be its own method.\n        const math_arc = new MathArc(\n            arc.center,\n            arc.radius,\n            arc.start_angle,\n            arc.end_angle,\n            arc.width,\n        );\n        const points = math_arc.to_polyline();\n\n        this.line(new Polyline(points, arc.width, arc.color));\n\n        return arc;\n    }\n\n    /**\n     * Draw a stroked polyline\n     */\n    abstract line(line: Polyline): void;\n    abstract line(points: Vec2[], width?: number, color?: Color): void;\n    abstract line(\n        line_or_points: Polyline | Vec2[],\n        width?: number,\n        color?: Color,\n    ): void;\n\n    protected prep_line(\n        line_or_points: Polyline | Vec2[],\n        width?: number,\n        color?: Color,\n    ): Polyline {\n        let line: Polyline;\n        if (line_or_points instanceof Polyline) {\n            line = line_or_points;\n        } else {\n            line = new Polyline(\n                line_or_points,\n                width ?? this.state.stroke_width,\n                color ?? this.state.stroke,\n            );\n        }\n\n        if (!line.color || line.color.is_transparent_black) {\n            line.color = this.state.stroke ?? Color.transparent_black;\n        }\n\n        line.points = Array.from(this.state.matrix.transform_all(line.points));\n\n        let bbox = BBox.from_points(line.points);\n        bbox = bbox.grow(line.width);\n        this.add_bbox(bbox);\n\n        return line;\n    }\n\n    /**\n     * Draw a filled polygon\n     */\n    abstract polygon(polygon: Polygon): void;\n    abstract polygon(points: Vec2[], color?: Color): void;\n    abstract polygon(polygon_or_points: Polygon | Vec2[], color?: Color): void;\n\n    protected prep_polygon(\n        polygon_or_points: Polygon | Vec2[],\n        color?: Color,\n    ): Polygon {\n        let polygon: Polygon;\n        if (polygon_or_points instanceof Polygon) {\n            polygon = polygon_or_points;\n        } else {\n            polygon = new Polygon(polygon_or_points, color ?? this.state.fill);\n        }\n\n        if (!polygon.color || polygon.color.is_transparent_black) {\n            polygon.color = this.state.fill ?? Color.transparent_black;\n        }\n\n        polygon.points = Array.from(\n            this.state.matrix.transform_all(polygon.points),\n        );\n\n        this.add_bbox(BBox.from_points(polygon.points));\n\n        return polygon;\n    }\n\n    /** Draw a list of glyphs */\n    glyphs(glyphs: any[]) {\n        // TODO\n    }\n}\n\nexport abstract class RenderLayer implements IDisposable {\n    composite_operation: GlobalCompositeOperation = \"source-over\";\n\n    constructor(\n        public readonly renderer: Renderer,\n        public readonly name: string,\n    ) {}\n\n    dispose() {\n        this.renderer.remove_layer(this);\n    }\n\n    abstract clear(): void;\n\n    abstract render(\n        camera: Matrix3,\n        depth: number,\n        global_alpha?: number,\n    ): void;\n}\n\nexport class RenderState {\n    constructor(\n        public matrix: Matrix3 = Matrix3.identity(),\n        public fill: Color = Color.black,\n        public stroke: Color = Color.black,\n        public stroke_width: number = 0,\n    ) {}\n\n    copy() {\n        return new RenderState(\n            this.matrix.copy(),\n            this.fill?.copy(),\n            this.stroke?.copy(),\n            this.stroke_width,\n        );\n    }\n}\n\nexport class RenderStateStack {\n    #stack: RenderState[];\n\n    constructor() {\n        this.#stack = [new RenderState()];\n    }\n\n    get top() {\n        return this.#stack.at(-1)!;\n    }\n\n    /**\n     * @returns the current transformation matrix\n     */\n    get matrix(): Matrix3 {\n        return this.top.matrix;\n    }\n\n    /**\n     * Set the transformation matrix stack.\n     */\n    set matrix(mat: Matrix3) {\n        this.top.matrix = mat;\n    }\n\n    get stroke(): Color {\n        return this.top.stroke;\n    }\n\n    set stroke(c: Color) {\n        this.top.stroke = c;\n    }\n\n    get fill(): Color {\n        return this.top.fill;\n    }\n\n    set fill(c: Color) {\n        this.top.fill = c;\n    }\n\n    get stroke_width(): number {\n        return this.top.stroke_width;\n    }\n\n    set stroke_width(n: number) {\n        this.top.stroke_width = n;\n    }\n\n    /**\n     * Multiply the current matrix with the given one\n     */\n    multiply(mat: Matrix3) {\n        this.top.matrix.multiply_self(mat);\n    }\n\n    /**\n     * Save the current state to the stack.\n     */\n    push() {\n        this.#stack.push(this.top.copy());\n    }\n\n    /**\n     * Pop the current transformation matrix off the stack and restore the\n     * previous one.\n     */\n    pop() {\n        this.#stack.pop();\n    }\n}\n", "/* eslint-disable @typescript-eslint/ban-ts-comment */\n// @ts-nocheck\n\n\"use strict\";\n\nexport default function earcut(data, holeIndices, dim) {\n    dim = dim || 2;\n\n    var hasHoles = holeIndices && holeIndices.length,\n        outerLen = hasHoles ? holeIndices[0] * dim : data.length,\n        outerNode = linkedList(data, 0, outerLen, dim, true),\n        triangles = [];\n\n    if (!outerNode || outerNode.next === outerNode.prev) return triangles;\n\n    var minX, minY, maxX, maxY, x, y, invSize;\n\n    if (hasHoles) outerNode = eliminateHoles(data, holeIndices, outerNode, dim);\n\n    // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n    if (data.length > 80 * dim) {\n        minX = maxX = data[0];\n        minY = maxY = data[1];\n\n        for (var i = dim; i < outerLen; i += dim) {\n            x = data[i];\n            y = data[i + 1];\n            if (x < minX) minX = x;\n            if (y < minY) minY = y;\n            if (x > maxX) maxX = x;\n            if (y > maxY) maxY = y;\n        }\n\n        // minX, minY and invSize are later used to transform coords into integers for z-order calculation\n        invSize = Math.max(maxX - minX, maxY - minY);\n        invSize = invSize !== 0 ? 32767 / invSize : 0;\n    }\n\n    earcutLinked(outerNode, triangles, dim, minX, minY, invSize, 0);\n\n    return triangles;\n}\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList(data, start, end, dim, clockwise) {\n    var i, last;\n\n    if (clockwise === signedArea(data, start, end, dim) > 0) {\n        for (i = start; i < end; i += dim)\n            last = insertNode(i, data[i], data[i + 1], last);\n    } else {\n        for (i = end - dim; i >= start; i -= dim)\n            last = insertNode(i, data[i], data[i + 1], last);\n    }\n\n    if (last && equals(last, last.next)) {\n        removeNode(last);\n        last = last.next;\n    }\n\n    return last;\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints(start, end) {\n    if (!start) return start;\n    if (!end) end = start;\n\n    var p = start,\n        again;\n    do {\n        again = false;\n\n        if (\n            !p.steiner &&\n            (equals(p, p.next) || area(p.prev, p, p.next) === 0)\n        ) {\n            removeNode(p);\n            p = end = p.prev;\n            if (p === p.next) break;\n            again = true;\n        } else {\n            p = p.next;\n        }\n    } while (again || p !== end);\n\n    return end;\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked(ear, triangles, dim, minX, minY, invSize, pass) {\n    if (!ear) return;\n\n    // interlink polygon nodes in z-order\n    if (!pass && invSize) indexCurve(ear, minX, minY, invSize);\n\n    var stop = ear,\n        prev,\n        next;\n\n    // iterate through ears, slicing them one by one\n    while (ear.prev !== ear.next) {\n        prev = ear.prev;\n        next = ear.next;\n\n        if (invSize ? isEarHashed(ear, minX, minY, invSize) : isEar(ear)) {\n            // cut off the triangle\n            triangles.push((prev.i / dim) | 0);\n            triangles.push((ear.i / dim) | 0);\n            triangles.push((next.i / dim) | 0);\n\n            removeNode(ear);\n\n            // skipping the next vertex leads to less sliver triangles\n            ear = next.next;\n            stop = next.next;\n\n            continue;\n        }\n\n        ear = next;\n\n        // if we looped through the whole remaining polygon and can't find any more ears\n        if (ear === stop) {\n            // try filtering points and slicing again\n            if (!pass) {\n                earcutLinked(\n                    filterPoints(ear),\n                    triangles,\n                    dim,\n                    minX,\n                    minY,\n                    invSize,\n                    1,\n                );\n\n                // if this didn't work, try curing all small self-intersections locally\n            } else if (pass === 1) {\n                ear = cureLocalIntersections(filterPoints(ear), triangles, dim);\n                earcutLinked(ear, triangles, dim, minX, minY, invSize, 2);\n\n                // as a last resort, try splitting the remaining polygon into two\n            } else if (pass === 2) {\n                splitEarcut(ear, triangles, dim, minX, minY, invSize);\n            }\n\n            break;\n        }\n    }\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar(ear) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // now make sure we don't have other points inside the potential ear\n    var ax = a.x,\n        bx = b.x,\n        cx = c.x,\n        ay = a.y,\n        by = b.y,\n        cy = c.y;\n\n    // triangle bbox; min & max are calculated like this for speed\n    var x0 = ax < bx ? (ax < cx ? ax : cx) : bx < cx ? bx : cx,\n        y0 = ay < by ? (ay < cy ? ay : cy) : by < cy ? by : cy,\n        x1 = ax > bx ? (ax > cx ? ax : cx) : bx > cx ? bx : cx,\n        y1 = ay > by ? (ay > cy ? ay : cy) : by > cy ? by : cy;\n\n    var p = c.next;\n    while (p !== a) {\n        if (\n            p.x >= x0 &&\n            p.x <= x1 &&\n            p.y >= y0 &&\n            p.y <= y1 &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0\n        )\n            return false;\n        p = p.next;\n    }\n\n    return true;\n}\n\nfunction isEarHashed(ear, minX, minY, invSize) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    var ax = a.x,\n        bx = b.x,\n        cx = c.x,\n        ay = a.y,\n        by = b.y,\n        cy = c.y;\n\n    // triangle bbox; min & max are calculated like this for speed\n    var x0 = ax < bx ? (ax < cx ? ax : cx) : bx < cx ? bx : cx,\n        y0 = ay < by ? (ay < cy ? ay : cy) : by < cy ? by : cy,\n        x1 = ax > bx ? (ax > cx ? ax : cx) : bx > cx ? bx : cx,\n        y1 = ay > by ? (ay > cy ? ay : cy) : by > cy ? by : cy;\n\n    // z-order range for the current triangle bbox;\n    var minZ = zOrder(x0, y0, minX, minY, invSize),\n        maxZ = zOrder(x1, y1, minX, minY, invSize);\n\n    var p = ear.prevZ,\n        n = ear.nextZ;\n\n    // look for points inside the triangle in both directions\n    while (p && p.z >= minZ && n && n.z <= maxZ) {\n        if (\n            p.x >= x0 &&\n            p.x <= x1 &&\n            p.y >= y0 &&\n            p.y <= y1 &&\n            p !== a &&\n            p !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0\n        )\n            return false;\n        p = p.prevZ;\n\n        if (\n            n.x >= x0 &&\n            n.x <= x1 &&\n            n.y >= y0 &&\n            n.y <= y1 &&\n            n !== a &&\n            n !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, n.x, n.y) &&\n            area(n.prev, n, n.next) >= 0\n        )\n            return false;\n        n = n.nextZ;\n    }\n\n    // look for remaining points in decreasing z-order\n    while (p && p.z >= minZ) {\n        if (\n            p.x >= x0 &&\n            p.x <= x1 &&\n            p.y >= y0 &&\n            p.y <= y1 &&\n            p !== a &&\n            p !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0\n        )\n            return false;\n        p = p.prevZ;\n    }\n\n    // look for remaining points in increasing z-order\n    while (n && n.z <= maxZ) {\n        if (\n            n.x >= x0 &&\n            n.x <= x1 &&\n            n.y >= y0 &&\n            n.y <= y1 &&\n            n !== a &&\n            n !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, n.x, n.y) &&\n            area(n.prev, n, n.next) >= 0\n        )\n            return false;\n        n = n.nextZ;\n    }\n\n    return true;\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections(start, triangles, dim) {\n    var p = start;\n    do {\n        var a = p.prev,\n            b = p.next.next;\n\n        if (\n            !equals(a, b) &&\n            intersects(a, p, p.next, b) &&\n            locallyInside(a, b) &&\n            locallyInside(b, a)\n        ) {\n            triangles.push((a.i / dim) | 0);\n            triangles.push((p.i / dim) | 0);\n            triangles.push((b.i / dim) | 0);\n\n            // remove two nodes involved\n            removeNode(p);\n            removeNode(p.next);\n\n            p = start = b;\n        }\n        p = p.next;\n    } while (p !== start);\n\n    return filterPoints(p);\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut(start, triangles, dim, minX, minY, invSize) {\n    // look for a valid diagonal that divides the polygon into two\n    var a = start;\n    do {\n        var b = a.next.next;\n        while (b !== a.prev) {\n            if (a.i !== b.i && isValidDiagonal(a, b)) {\n                // split the polygon in two by the diagonal\n                var c = splitPolygon(a, b);\n\n                // filter colinear points around the cuts\n                a = filterPoints(a, a.next);\n                c = filterPoints(c, c.next);\n\n                // run earcut on each half\n                earcutLinked(a, triangles, dim, minX, minY, invSize, 0);\n                earcutLinked(c, triangles, dim, minX, minY, invSize, 0);\n                return;\n            }\n            b = b.next;\n        }\n        a = a.next;\n    } while (a !== start);\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles(data, holeIndices, outerNode, dim) {\n    var queue = [],\n        i,\n        len,\n        start,\n        end,\n        list;\n\n    for (i = 0, len = holeIndices.length; i < len; i++) {\n        start = holeIndices[i] * dim;\n        end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n        list = linkedList(data, start, end, dim, false);\n        if (list === list.next) list.steiner = true;\n        queue.push(getLeftmost(list));\n    }\n\n    queue.sort(compareX);\n\n    // process holes from left to right\n    for (i = 0; i < queue.length; i++) {\n        outerNode = eliminateHole(queue[i], outerNode);\n    }\n\n    return outerNode;\n}\n\nfunction compareX(a, b) {\n    return a.x - b.x;\n}\n\n// find a bridge between vertices that connects hole with an outer ring and and link it\nfunction eliminateHole(hole, outerNode) {\n    var bridge = findHoleBridge(hole, outerNode);\n    if (!bridge) {\n        return outerNode;\n    }\n\n    var bridgeReverse = splitPolygon(bridge, hole);\n\n    // filter collinear points around the cuts\n    filterPoints(bridgeReverse, bridgeReverse.next);\n    return filterPoints(bridge, bridge.next);\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge(hole, outerNode) {\n    var p = outerNode,\n        hx = hole.x,\n        hy = hole.y,\n        qx = -Infinity,\n        m;\n\n    // find a segment intersected by a ray from the hole's leftmost point to the left;\n    // segment's endpoint with lesser x will be potential connection point\n    do {\n        if (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\n            var x = p.x + ((hy - p.y) * (p.next.x - p.x)) / (p.next.y - p.y);\n            if (x <= hx && x > qx) {\n                qx = x;\n                m = p.x < p.next.x ? p : p.next;\n                if (x === hx) return m; // hole touches outer segment; pick leftmost endpoint\n            }\n        }\n        p = p.next;\n    } while (p !== outerNode);\n\n    if (!m) return null;\n\n    // look for points inside the triangle of hole point, segment intersection and endpoint;\n    // if there are no points found, we have a valid connection;\n    // otherwise choose the point of the minimum angle with the ray as connection point\n\n    var stop = m,\n        mx = m.x,\n        my = m.y,\n        tanMin = Infinity,\n        tan;\n\n    p = m;\n\n    do {\n        if (\n            hx >= p.x &&\n            p.x >= mx &&\n            hx !== p.x &&\n            pointInTriangle(\n                hy < my ? hx : qx,\n                hy,\n                mx,\n                my,\n                hy < my ? qx : hx,\n                hy,\n                p.x,\n                p.y,\n            )\n        ) {\n            tan = Math.abs(hy - p.y) / (hx - p.x); // tangential\n\n            if (\n                locallyInside(p, hole) &&\n                (tan < tanMin ||\n                    (tan === tanMin &&\n                        (p.x > m.x ||\n                            (p.x === m.x && sectorContainsSector(m, p)))))\n            ) {\n                m = p;\n                tanMin = tan;\n            }\n        }\n\n        p = p.next;\n    } while (p !== stop);\n\n    return m;\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector(m, p) {\n    return area(m.prev, m, p.prev) < 0 && area(p.next, m, m.next) < 0;\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve(start, minX, minY, invSize) {\n    var p = start;\n    do {\n        if (p.z === 0) p.z = zOrder(p.x, p.y, minX, minY, invSize);\n        p.prevZ = p.prev;\n        p.nextZ = p.next;\n        p = p.next;\n    } while (p !== start);\n\n    p.prevZ.nextZ = null;\n    p.prevZ = null;\n\n    sortLinked(p);\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked(list) {\n    var i,\n        p,\n        q,\n        e,\n        tail,\n        numMerges,\n        pSize,\n        qSize,\n        inSize = 1;\n\n    do {\n        p = list;\n        list = null;\n        tail = null;\n        numMerges = 0;\n\n        while (p) {\n            numMerges++;\n            q = p;\n            pSize = 0;\n            for (i = 0; i < inSize; i++) {\n                pSize++;\n                q = q.nextZ;\n                if (!q) break;\n            }\n            qSize = inSize;\n\n            while (pSize > 0 || (qSize > 0 && q)) {\n                if (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\n                    e = p;\n                    p = p.nextZ;\n                    pSize--;\n                } else {\n                    e = q;\n                    q = q.nextZ;\n                    qSize--;\n                }\n\n                if (tail) tail.nextZ = e;\n                else list = e;\n\n                e.prevZ = tail;\n                tail = e;\n            }\n\n            p = q;\n        }\n\n        tail.nextZ = null;\n        inSize *= 2;\n    } while (numMerges > 1);\n\n    return list;\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder(x, y, minX, minY, invSize) {\n    // coords are transformed into non-negative 15-bit integer range\n    x = ((x - minX) * invSize) | 0;\n    y = ((y - minY) * invSize) | 0;\n\n    x = (x | (x << 8)) & 0x00ff00ff;\n    x = (x | (x << 4)) & 0x0f0f0f0f;\n    x = (x | (x << 2)) & 0x33333333;\n    x = (x | (x << 1)) & 0x55555555;\n\n    y = (y | (y << 8)) & 0x00ff00ff;\n    y = (y | (y << 4)) & 0x0f0f0f0f;\n    y = (y | (y << 2)) & 0x33333333;\n    y = (y | (y << 1)) & 0x55555555;\n\n    return x | (y << 1);\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost(start) {\n    var p = start,\n        leftmost = start;\n    do {\n        if (p.x < leftmost.x || (p.x === leftmost.x && p.y < leftmost.y))\n            leftmost = p;\n        p = p.next;\n    } while (p !== start);\n\n    return leftmost;\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\n    return (\n        (cx - px) * (ay - py) >= (ax - px) * (cy - py) &&\n        (ax - px) * (by - py) >= (bx - px) * (ay - py) &&\n        (bx - px) * (cy - py) >= (cx - px) * (by - py)\n    );\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal(a, b) {\n    return (\n        a.next.i !== b.i &&\n        a.prev.i !== b.i &&\n        !intersectsPolygon(a, b) && // dones't intersect other edges\n        ((locallyInside(a, b) &&\n            locallyInside(b, a) &&\n            middleInside(a, b) && // locally visible\n            (area(a.prev, a, b.prev) || area(a, b.prev, b))) || // does not create opposite-facing sectors\n            (equals(a, b) &&\n                area(a.prev, a, a.next) > 0 &&\n                area(b.prev, b, b.next) > 0))\n    ); // special zero-length case\n}\n\n// signed area of a triangle\nfunction area(p, q, r) {\n    return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n}\n\n// check if two points are equal\nfunction equals(p1, p2) {\n    return p1.x === p2.x && p1.y === p2.y;\n}\n\n// check if two segments intersect\nfunction intersects(p1, q1, p2, q2) {\n    var o1 = sign(area(p1, q1, p2));\n    var o2 = sign(area(p1, q1, q2));\n    var o3 = sign(area(p2, q2, p1));\n    var o4 = sign(area(p2, q2, q1));\n\n    if (o1 !== o2 && o3 !== o4) return true; // general case\n\n    if (o1 === 0 && onSegment(p1, p2, q1)) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n    if (o2 === 0 && onSegment(p1, q2, q1)) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n    if (o3 === 0 && onSegment(p2, p1, q2)) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n    if (o4 === 0 && onSegment(p2, q1, q2)) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n    return false;\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment(p, q, r) {\n    return (\n        q.x <= Math.max(p.x, r.x) &&\n        q.x >= Math.min(p.x, r.x) &&\n        q.y <= Math.max(p.y, r.y) &&\n        q.y >= Math.min(p.y, r.y)\n    );\n}\n\nfunction sign(num) {\n    return num > 0 ? 1 : num < 0 ? -1 : 0;\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon(a, b) {\n    var p = a;\n    do {\n        if (\n            p.i !== a.i &&\n            p.next.i !== a.i &&\n            p.i !== b.i &&\n            p.next.i !== b.i &&\n            intersects(p, p.next, a, b)\n        )\n            return true;\n        p = p.next;\n    } while (p !== a);\n\n    return false;\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside(a, b) {\n    return area(a.prev, a, a.next) < 0\n        ? area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0\n        : area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside(a, b) {\n    var p = a,\n        inside = false,\n        px = (a.x + b.x) / 2,\n        py = (a.y + b.y) / 2;\n    do {\n        if (\n            p.y > py !== p.next.y > py &&\n            p.next.y !== p.y &&\n            px < ((p.next.x - p.x) * (py - p.y)) / (p.next.y - p.y) + p.x\n        )\n            inside = !inside;\n        p = p.next;\n    } while (p !== a);\n\n    return inside;\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon(a, b) {\n    var a2 = new Node(a.i, a.x, a.y),\n        b2 = new Node(b.i, b.x, b.y),\n        an = a.next,\n        bp = b.prev;\n\n    a.next = b;\n    b.prev = a;\n\n    a2.next = an;\n    an.prev = a2;\n\n    b2.next = a2;\n    a2.prev = b2;\n\n    bp.next = b2;\n    b2.prev = bp;\n\n    return b2;\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode(i, x, y, last) {\n    var p = new Node(i, x, y);\n\n    if (!last) {\n        p.prev = p;\n        p.next = p;\n    } else {\n        p.next = last.next;\n        p.prev = last;\n        last.next.prev = p;\n        last.next = p;\n    }\n    return p;\n}\n\nfunction removeNode(p) {\n    p.next.prev = p.prev;\n    p.prev.next = p.next;\n\n    if (p.prevZ) p.prevZ.nextZ = p.nextZ;\n    if (p.nextZ) p.nextZ.prevZ = p.prevZ;\n}\n\nfunction Node(i, x, y) {\n    // vertex index in coordinates array\n    this.i = i;\n\n    // vertex coordinates\n    this.x = x;\n    this.y = y;\n\n    // previous and next vertex nodes in a polygon ring\n    this.prev = null;\n    this.next = null;\n\n    // z-order curve value\n    this.z = 0;\n\n    // previous and next nodes in z-order\n    this.prevZ = null;\n    this.nextZ = null;\n\n    // indicates whether this is a steiner point\n    this.steiner = false;\n}\n\n// return a percentage difference between the polygon area and its triangulation area;\n// used to verify correctness of triangulation\nearcut.deviation = function (data, holeIndices, dim, triangles) {\n    var hasHoles = holeIndices && holeIndices.length;\n    var outerLen = hasHoles ? holeIndices[0] * dim : data.length;\n\n    var polygonArea = Math.abs(signedArea(data, 0, outerLen, dim));\n    if (hasHoles) {\n        for (var i = 0, len = holeIndices.length; i < len; i++) {\n            var start = holeIndices[i] * dim;\n            var end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n            polygonArea -= Math.abs(signedArea(data, start, end, dim));\n        }\n    }\n\n    var trianglesArea = 0;\n    for (i = 0; i < triangles.length; i += 3) {\n        var a = triangles[i] * dim;\n        var b = triangles[i + 1] * dim;\n        var c = triangles[i + 2] * dim;\n        trianglesArea += Math.abs(\n            (data[a] - data[c]) * (data[b + 1] - data[a + 1]) -\n                (data[a] - data[b]) * (data[c + 1] - data[a + 1]),\n        );\n    }\n\n    return polygonArea === 0 && trianglesArea === 0\n        ? 0\n        : Math.abs((trianglesArea - polygonArea) / polygonArea);\n};\n\nfunction signedArea(data, start, end, dim) {\n    var sum = 0;\n    for (var i = start, j = end - dim; i < end; i += dim) {\n        sum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);\n        j = i;\n    }\n    return sum;\n}\n\n// turn a polygon in a multi-dimensional array form (e.g. as in GeoJSON) into a form Earcut accepts\nearcut.flatten = function (data) {\n    var dim = data[0][0].length,\n        result = { vertices: [], holes: [], dimensions: dim },\n        holeIndex = 0;\n\n    for (var i = 0; i < data.length; i++) {\n        for (var j = 0; j < data[i].length; j++) {\n            for (var d = 0; d < dim; d++) result.vertices.push(data[i][j][d]);\n        }\n        if (i > 0) {\n            holeIndex += data[i - 1].length;\n            result.holes.push(holeIndex);\n        }\n    }\n    return result;\n};\n", "/*\n    Copyright (c) 2022 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nimport type { IDisposable } from \"../../base/disposable\";\nimport { is_string } from \"../../base/types\";\n\n/**\n * Basic helpers for interacting with WebGL2\n */\n\ntype ParametersExceptFirst<F> = F extends (arg0: any, ...rest: infer R) => any\n  ? R\n  : never;\n\n/**\n * Encapsulates a shader uniform, making it easier to set values.\n *\n * @example\n * u_color = new Uniform(gl, \"u_color\", u_color_location);\n * u_color.f4(1, 0, 1, 1);\n *\n */\nclass Uniform {\n  constructor(\n    public gl: WebGL2RenderingContext,\n    public name: string,\n    public location: WebGLUniformLocation,\n    public type: GLenum,\n  ) { }\n\n  f1(x: number) {\n    this.gl.uniform1f(this.location, x);\n  }\n  f1v(data: Float32List, srcOffset?: GLuint, srcLength?: GLuint) {\n    this.gl.uniform1fv(this.location, data, srcOffset, srcLength);\n  }\n  f2(...args: ParametersExceptFirst<WebGLRenderingContextBase[\"uniform2f\"]>) {\n    this.gl.uniform2f(this.location, ...args);\n  }\n  f2v(...args: ParametersExceptFirst<WebGL2RenderingContext[\"uniform2fv\"]>) {\n    this.gl.uniform2fv(this.location, ...args);\n  }\n  f3(...args: ParametersExceptFirst<WebGL2RenderingContext[\"uniform3f\"]>) {\n    this.gl.uniform3f(this.location, ...args);\n  }\n  f3v(...args: ParametersExceptFirst<WebGL2RenderingContext[\"uniform3fv\"]>) {\n    this.gl.uniform3fv(this.location, ...args);\n  }\n  f4(...args: ParametersExceptFirst<WebGL2RenderingContext[\"uniform4f\"]>) {\n    this.gl.uniform4f(this.location, ...args);\n  }\n  f4v(...args: ParametersExceptFirst<WebGL2RenderingContext[\"uniform4fv\"]>) {\n    this.gl.uniform4fv(this.location, ...args);\n  }\n  mat3f(\n    ...args: ParametersExceptFirst<\n      WebGL2RenderingContext[\"uniformMatrix3fv\"]\n    >\n  ) {\n    this.gl.uniformMatrix3fv(this.location, ...args);\n  }\n  mat3fv(\n    ...args: ParametersExceptFirst<\n      WebGL2RenderingContext[\"uniformMatrix3fv\"]\n    >\n  ) {\n    this.gl.uniformMatrix3fv(this.location, ...args);\n  }\n}\n\n/**\n * A shader program consisting of a vertex shader, fragment shader, and uniforms.\n */\nexport class ShaderProgram {\n  static #shader_cache: WeakMap<\n    WebGL2RenderingContext,\n    Map<string, ShaderProgram>\n  > = new WeakMap();\n\n  program: WebGLProgram;\n\n  /** Shader uniforms */\n  uniforms: Record<string, Uniform> = {};\n\n  /** Shader attributes */\n  attribs: Record<string, WebGLActiveInfo> = {};\n\n  /**\n   * Create and compile a shader program\n   * @param name - used for caching and identifying the shader\n   * @param vertex - vertex shader source code\n   * @param fragment - fragment shader source code\n   */\n  constructor(\n    public gl: WebGL2RenderingContext,\n    public name: string,\n    public vertex: WebGLShader,\n    public fragment: WebGLShader,\n  ) {\n    if (is_string(vertex)) {\n      vertex = ShaderProgram.compile(gl, gl.VERTEX_SHADER, vertex);\n    }\n    this.vertex = vertex;\n\n    if (is_string(fragment)) {\n      fragment = ShaderProgram.compile(gl, gl.FRAGMENT_SHADER, fragment);\n    }\n    this.fragment = fragment;\n\n    this.program = ShaderProgram.link(gl, vertex, fragment);\n\n    this.#discover_uniforms();\n    this.#discover_attribs();\n  }\n\n  // TODO: Consider moving uniforms into typesafe container\n  [key: string]: any | Uniform;\n\n  /**\n   * Load vertex and fragment shader sources from URLs and compile them\n   * into a new ShaderProgram\n   * @param name used for caching and identifying the shader.\n   */\n  static async load(\n    gl: WebGL2RenderingContext,\n    name: string,\n    vert_src: URL | string,\n    frag_src: URL | string,\n  ): Promise<ShaderProgram> {\n    let cache = ShaderProgram.#shader_cache.get(gl);\n    if (!cache) {\n      cache = new Map();\n      ShaderProgram.#shader_cache.set(gl, cache);\n    }\n\n    if (!cache.has(name)) {\n      if (vert_src instanceof URL) {\n        vert_src = await (await fetch(vert_src)).text();\n      }\n      if (frag_src instanceof URL) {\n        frag_src = await (await fetch(frag_src)).text();\n      }\n\n      const prog = new ShaderProgram(gl, name, vert_src, frag_src);\n\n      cache.set(name, prog);\n    }\n\n    return cache.get(name) as ShaderProgram;\n  }\n\n  /**\n   * Compiles a shader\n   *\n   * Typically not used directly, use load() instead.\n   *\n   * @param gl\n   * @param type - gl.FRAGMENT_SHADER or gl.VERTEX_SHADER\n   * @param source\n   */\n  static compile(gl: WebGL2RenderingContext, type: GLenum, source: string) {\n    const shader = gl.createShader(type);\n\n    if (shader == null) {\n      throw new Error(\"Could not create new shader\");\n    }\n\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n\n    if (gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n      return shader;\n    }\n\n    const info = gl.getShaderInfoLog(shader);\n    gl.deleteShader(shader);\n\n    throw new Error(`Error compiling ${type} shader: ${info}`);\n  }\n\n  /**\n   * Link a vertex and fragment shader into a shader program.\n   *\n   * Typically not used directly, use load() instead.\n   */\n  static link(\n    gl: WebGL2RenderingContext,\n    vertex: WebGLShader,\n    fragment: WebGLShader,\n  ) {\n    const program = gl.createProgram();\n\n    if (program == null) {\n      throw new Error(\"Could not create new shader program\");\n    }\n\n    gl.attachShader(program, vertex);\n    gl.attachShader(program, fragment);\n    gl.linkProgram(program);\n\n    if (gl.getProgramParameter(program, gl.LINK_STATUS)) {\n      return program;\n    }\n\n    const info = gl.getProgramInfoLog(program);\n    gl.deleteProgram(program);\n\n    throw new Error(`Error linking shader program: ${info}`);\n  }\n\n  #discover_uniforms() {\n    this.uniforms = {};\n    for (\n      let u_n = 0;\n      u_n <\n      this.gl.getProgramParameter(this.program, this.gl.ACTIVE_UNIFORMS);\n      u_n++\n    ) {\n      const info = this.gl.getActiveUniform(this.program, u_n);\n\n      if (info == null) {\n        throw new Error(\n          `Could not get uniform info for uniform number ${u_n} for program ${this.program}`,\n        );\n      }\n\n      const location = this.gl.getUniformLocation(\n        this.program,\n        info.name,\n      );\n\n      if (location == null) {\n        throw new Error(\n          `Could not get uniform location for uniform number ${u_n} for program ${this.program}`,\n        );\n      }\n\n      this[info.name] = this.uniforms[info.name] = new Uniform(\n        this.gl,\n        info.name,\n        location,\n        info.type,\n      );\n    }\n  }\n\n  #discover_attribs() {\n    this.attribs = {};\n    for (\n      let a_n = 0;\n      a_n <\n      this.gl.getProgramParameter(\n        this.program,\n        this.gl.ACTIVE_ATTRIBUTES,\n      );\n      a_n++\n    ) {\n      const info = this.gl.getActiveAttrib(this.program, a_n);\n\n      if (info == null) {\n        throw new Error(\n          `Could not get attribute info for attribute number ${a_n} for program ${this.program}`,\n        );\n      }\n\n      this.attribs[info.name] = info;\n      this[info.name] = this.gl.getAttribLocation(\n        this.program,\n        info.name,\n      );\n    }\n  }\n\n  /** use this shader for drawing */\n  bind() {\n    this.gl.useProgram(this.program);\n  }\n}\n\n/**\n * Manages vertex array objects (VAOs) and associated buffers.\n */\nexport class VertexArray implements IDisposable {\n  vao?: WebGLVertexArrayObject;\n  buffers: Buffer[] = [];\n\n  /**\n   * Create a VertexArray\n   * @param {WebGL2RenderingContext} gl\n   */\n  constructor(public gl: WebGL2RenderingContext) {\n    this.gl = gl;\n\n    const vao = this.gl.createVertexArray();\n    if (!vao) {\n      throw new Error(`Could not create new VertexArray`);\n    }\n    this.vao = vao;\n\n    this.bind();\n  }\n\n  /**\n   * Free WebGL resources\n   * @param include_buffers\n   */\n  dispose(include_buffers = true) {\n    this.gl.deleteVertexArray(this.vao ?? null);\n    this.vao = undefined;\n\n    if (include_buffers) {\n      for (const buf of this.buffers) {\n        buf.dispose();\n      }\n    }\n  }\n\n  bind() {\n    this.gl.bindVertexArray(this.vao!);\n  }\n\n  /**\n   * Create a new buffer bound to this vertex array\n   * @param attrib - shader attribute location\n   * @param size - number of components per vertex attribute\n   * @param type - data type for each component, if unspecified it's gl.FLOAT.\n   * @param normalized - whether or not to normalize integer types when converting to float\n   * @param stride - offset between consecutive attributes\n   * @param offset - offset from the beginning of the array to the first attribute\n   * @param target - binding point, typically gl.ARRAY_BUFFER (the default if unspecified)\n   *      or gl.ELEMENT_ARRAY_BUFFER\n   */\n  buffer(\n    attrib: GLint,\n    size: GLint,\n    type?: GLenum,\n    normalized: GLboolean = false,\n    stride: GLsizei = 0,\n    offset: GLintptr = 0,\n    target?: GLenum,\n  ): Buffer {\n    type ??= this.gl.FLOAT;\n\n    const b = new Buffer(this.gl, target);\n\n    b.bind();\n    this.gl.vertexAttribPointer(\n      attrib,\n      size,\n      type,\n      normalized,\n      stride,\n      offset,\n    );\n    this.gl.enableVertexAttribArray(attrib);\n\n    this.buffers.push(b);\n\n    return b;\n  }\n}\n\nexport type TypedArray =\n  | Int8Array\n  | Uint8Array\n  | Uint8ClampedArray\n  | Int16Array\n  | Uint16Array\n  | Int32Array\n  | Uint32Array\n  | Float32Array\n  | Float64Array;\n\nexport type TypedArrayLike =\n  | TypedArray\n  | DataView\n  | ArrayBuffer\n  | SharedArrayBuffer;\n\n/**\n * Manages a buffer of GPU data like vertices or colors\n */\nexport class Buffer implements IDisposable {\n  #buf?: WebGLBuffer;\n  target: GLenum;\n\n  /**\n   * Create a new buffer\n   * @param target - binding point, typically gl.ARRAY_BUFFER (the default if unspecified)\n   *      or gl.ELEMENT_ARRAY_BUFFER\n   */\n  constructor(\n    public gl: WebGL2RenderingContext,\n    target?: GLenum,\n  ) {\n    this.gl = gl;\n    this.target = target ?? gl.ARRAY_BUFFER;\n\n    const buf = gl.createBuffer();\n    if (!buf) {\n      throw new Error(\"Unable to create new Buffer\");\n    }\n\n    this.#buf = buf;\n  }\n\n  dispose() {\n    if (this.#buf) {\n      this.gl.deleteBuffer(this.#buf);\n    }\n    this.#buf = undefined;\n  }\n\n  /**\n   * Binds the buffer to the current context\n   */\n  bind() {\n    this.gl.bindBuffer(this.target, this.#buf!);\n  }\n\n  /**\n   * Uploads data to the GPU buffer\n   *\n   * @param usage - intended usage pattern, typically gl.STATIC_DRAW\n   *      (the default if unspecified) or gl.DYNAMIC_DRAW\n   */\n  set(data: TypedArrayLike, usage?: GLenum) {\n    this.bind();\n    usage ??= this.gl.STATIC_DRAW;\n    this.gl.bufferData(this.target, data, usage);\n  }\n\n  /**\n   * Gets the length of the buffer as reported by WebGL.\n   */\n  get length(): number {\n    this.bind();\n    return this.gl.getBufferParameter(\n      this.target,\n      this.gl.BUFFER_SIZE,\n    ) as number;\n  }\n}\n", "#version 300 es\n\nprecision highp float;\n\nuniform float u_depth;\nuniform float u_alpha;\n\nin vec4 v_color;\n\nout vec4 o_color;\n\nvoid main() {\n    vec4 i_color = v_color;\n    i_color.a *= u_alpha;\n    o_color = i_color;\n    gl_FragDepth = u_depth;\n}\n", "#version 300 es\n\nuniform mat3 u_matrix;\nin vec2 a_position;\nin vec4 a_color;\nout vec4 v_color;\n\nvoid main() {\n    v_color = a_color;\n    gl_Position = vec4((u_matrix * vec3(a_position, 1)).xy, 0, 1);;\n}\n", "#version 300 es\n\nprecision highp float;\n\nuniform float u_depth;\nuniform float u_alpha;\n\nin vec2 v_linespace;\nin float v_cap_region;\nin vec4 v_color;\n\nout vec4 outColor;\n\nvoid main() {\n    vec4 i_color = v_color;\n    i_color.a *= u_alpha;\n\n    float v = abs(v_linespace.x);\n    float x = v_linespace.x;\n    float y = v_linespace.y;\n\n    if(x < (-1.0 + v_cap_region)) {\n        float a = (1.0 + x) / v_cap_region;\n        x = mix(-1.0, 0.0, a);\n        if(x * x + y * y < 1.0) {\n            outColor = i_color;\n        } else {\n            discard;\n        }\n    } else if (x > (1.0 - v_cap_region)) {\n        float a = (x - (1.0 - v_cap_region)) / v_cap_region;\n        x = mix(0.0, 1.0, a);\n        if(x * x + y * y < 1.0) {\n            outColor = i_color;\n        } else {\n            discard;\n        }\n    } else {\n        outColor = i_color;\n    }\n\n    gl_FragDepth = u_depth;\n}\n", "#version 300 es\n\nuniform mat3 u_matrix;\n\nin vec2 a_position;\nin vec4 a_color;\nin float a_cap_region;\n\nout vec2 v_linespace;\nout float v_cap_region;\nout vec4 v_color;\n\nvec2 c_linespace[6] = vec2[](\n    // first triangle\n    vec2(-1, -1),\n    vec2( 1, -1),\n    vec2(-1,  1),\n    // second triangle\n    vec2(-1,  1),\n    vec2( 1, -1),\n    vec2( 1,  1)\n);\n\nvoid main() {\n    int triangle_vertex_num = int(gl_VertexID % 6);\n\n    v_linespace = c_linespace[triangle_vertex_num];\n    v_cap_region = a_cap_region;\n\n    gl_Position = vec4((u_matrix * vec3(a_position, 1)).xy, 0, 1);\n\n    v_color = a_color;\n}\n", "/*\n    Copyright (c) 2022 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\n/**\n * Low-level library for efficiently rendering sets of basic geometric\n * primitives using WebGL. Think of it as a really hard to use version\n * of SVG. This is the underlying code used by WebGL2Renderer to actually\n * turn abstract primitives into WebGL stuff.\n *\n * The highest-level and easiest to use interface is PrimitiveSet, which\n * provides a container of mixed primitives.\n *\n * The core principle here is primitive sets. These sets collect all the data\n * necessary to render *multiple* primitives. Primitive sets are write-once.\n * Call set() with a list of primitive objects to tesselate them and upload\n * their data to the GPU. Use draw() to have the GPU render the tesselated\n * geometry. Use dispose() to free GPU resources.\n *\n */\n\nimport earcut from \"../../../third_party/earcut/earcut\";\nimport { Color } from \"../../base/color\";\nimport type { IDisposable } from \"../../base/disposable\";\nimport { Matrix3, Vec2 } from \"../../base/math\";\nimport { Circle, Polygon, Polyline } from \"../shapes\";\nimport { Buffer, ShaderProgram, VertexArray } from \"./helpers\";\nimport polygon_frag_shader_src from \"./polygon.frag.glsl\";\nimport polygon_vert_shader_src from \"./polygon.vert.glsl\";\nimport polyline_frag_shader_src from \"./polyline.frag.glsl\";\nimport polyline_vert_shader_src from \"./polyline.vert.glsl\";\n\n/**\n * Tesselator handles converting abstract primitives into triangles that\n * can be passed to the GPU and shaded.\n */\nclass Tesselator {\n    // Each line segment or circle is a two-triangle quad.\n    static vertices_per_quad = 2 * 3;\n\n    /**\n     * Convert a quad to two triangles that cover the same area\n     * @param quad four points defining the quad\n     * @returns six points representing two triangles\n     */\n    static quad_to_triangles(quad: [Vec2, Vec2, Vec2, Vec2]): number[] {\n        const positions = [\n            ...quad[0],\n            ...quad[2],\n            ...quad[1],\n            ...quad[1],\n            ...quad[2],\n            ...quad[3],\n        ];\n\n        // check for degenerate quads\n        // TODO: this can eventually be removed.\n        if (positions.filter((v) => Number.isNaN(v)).length) {\n            throw new Error(\"Degenerate quad\");\n        }\n\n        return positions;\n    }\n\n    /**\n     * Populate an array with repeated copies of the given color\n     */\n    static populate_color_data(\n        dest: Float32Array,\n        color: Color,\n        offset: number,\n        length: number,\n    ) {\n        if (!color) {\n            color = new Color(1, 0, 0, 1);\n        }\n        const color_data = color.to_array();\n        for (let i = 0; i < length; i++) {\n            dest[offset + i] = color_data[i % color_data.length]!;\n        }\n    }\n\n    /**\n     * Tesselate a line segment into a quad\n     * @returns four points representing the line segment.\n     */\n    static tesselate_segment(\n        p1: Vec2,\n        p2: Vec2,\n        width: number,\n    ): [Vec2, Vec2, Vec2, Vec2] {\n        const line = p2.sub(p1);\n        const norm = line.normal.normalize();\n        const n = norm.multiply(width / 2);\n        const n2 = n.normal;\n\n        const a = p1.add(n).add(n2);\n        const b = p1.sub(n).add(n2);\n        const c = p2.add(n).sub(n2);\n        const d = p2.sub(n).sub(n2);\n\n        return [a, b, c, d];\n    }\n\n    /**\n     * Tesselate a Polyline into renderable data.\n     */\n    static tesselate_polyline(polyline: Polyline) {\n        const width = polyline.width || 0;\n        const points = polyline.points;\n        const color = polyline.color;\n\n        const segment_count = points.length - 1;\n        const vertex_count = segment_count * this.vertices_per_quad;\n        const position_data = new Float32Array(vertex_count * 2);\n        const color_data = new Float32Array(vertex_count * 4);\n        const cap_data = new Float32Array(vertex_count);\n        let vertex_index = 0;\n\n        for (let segment_num = 1; segment_num < points.length; segment_num++) {\n            const p1 = points[segment_num - 1]!;\n            const p2 = points[segment_num]!;\n\n            const length = p2.sub(p1).magnitude;\n\n            // skip zero-length segments\n            if (length == 0) {\n                continue;\n            }\n\n            const quad = this.tesselate_segment(p1, p2, width);\n            const cap_region = width / (length + width);\n\n            position_data.set(this.quad_to_triangles(quad), vertex_index * 2);\n            cap_data.set(\n                Array(this.vertices_per_quad).fill(cap_region),\n                vertex_index,\n            );\n            this.populate_color_data(\n                color_data,\n                color as Color,\n                vertex_index * 4,\n                this.vertices_per_quad * 4,\n            );\n\n            vertex_index += this.vertices_per_quad;\n        }\n\n        return {\n            position_array: position_data.slice(0, vertex_index * 2),\n            cap_array: cap_data.slice(0, vertex_index),\n            color_array: color_data.slice(0, vertex_index * 4),\n        };\n    }\n\n    /**\n     * Tesselate a circle into a quad\n     * @returns four points representing the quad\n     */\n    static tesselate_circle(circle: Circle): [Vec2, Vec2, Vec2, Vec2] {\n        const n = new Vec2(circle.radius, 0);\n        const n2 = n.normal;\n\n        const a = circle.center.add(n).add(n2);\n        const b = circle.center.sub(n).add(n2);\n        const c = circle.center.add(n).sub(n2);\n        const d = circle.center.sub(n).sub(n2);\n\n        return [a, b, c, d];\n    }\n\n    /**\n     * Tesselate an array of circles into renderable data\n     */\n    static tesselate_circles(circles: Circle[]) {\n        const vertex_count = circles.length * this.vertices_per_quad;\n        const position_data = new Float32Array(vertex_count * 2);\n        const cap_data = new Float32Array(vertex_count);\n        const color_data = new Float32Array(vertex_count * 4);\n        let vertex_index = 0;\n\n        for (let i = 0; i < circles.length; i++) {\n            const c = circles[i]!;\n            const cap_region = 1.0;\n            const quad = this.tesselate_circle(c);\n\n            position_data.set(this.quad_to_triangles(quad), vertex_index * 2);\n\n            cap_data.set(\n                Array(this.vertices_per_quad).fill(cap_region),\n                vertex_index,\n            );\n\n            this.populate_color_data(\n                color_data,\n                c.color as Color,\n                vertex_index * 4,\n                this.vertices_per_quad * 4,\n            );\n\n            vertex_index += this.vertices_per_quad;\n        }\n\n        return {\n            position_array: position_data.slice(0, vertex_index * 2),\n            cap_array: cap_data.slice(0, vertex_index),\n            color_array: color_data.slice(0, vertex_index * 4),\n        };\n    }\n\n    /**\n     * Convert a point cloud polygon into an array of triangles.\n     * Populates this.vertices with the triangles and clears this.points.\n     */\n    static triangulate_polygon(polygon: Polygon) {\n        if (polygon.vertices) {\n            return polygon;\n        }\n\n        const points = polygon.points;\n\n        const points_flattened = new Array(points.length * 2);\n        for (let i = 0; i < points.length; i++) {\n            const pt = points[i]!;\n            points_flattened[i * 2] = pt.x;\n            points_flattened[i * 2 + 1] = pt.y;\n        }\n\n        // shortcut if the polygon is a single triangle.\n        if (points.length == 3) {\n            polygon.points = [];\n            polygon.vertices = new Float32Array(points_flattened);\n            return polygon;\n        }\n\n        const triangle_indexes = earcut(points_flattened);\n\n        const vertices = new Float32Array(triangle_indexes.length * 2);\n\n        for (let i = 0; i < triangle_indexes.length; i++) {\n            const index = triangle_indexes[i];\n            vertices[i * 2] = points_flattened[index * 2];\n            vertices[i * 2 + 1] = points_flattened[index * 2 + 1];\n        }\n\n        polygon.points = [];\n        polygon.vertices = vertices;\n\n        return polygon;\n    }\n}\n\n/**\n * A set of filled circles.\n */\nexport class CircleSet implements IDisposable {\n    static shader: ShaderProgram;\n    shader: ShaderProgram;\n    vao: VertexArray;\n    position_buf: Buffer;\n    cap_region_buf: Buffer;\n    color_buf: Buffer;\n    vertex_count: number;\n\n    /**\n     * Load the shader program required to render this primitive.\n     */\n    static async load_shader(gl: WebGL2RenderingContext) {\n        // This re-uses the same shader that polyline uses, since the polyline\n        // is pill-shaped, circle is just a special case of a zero-length polyline.\n        this.shader = await ShaderProgram.load(\n            gl,\n            \"polyline\",\n            polyline_vert_shader_src,\n            polyline_frag_shader_src,\n        );\n    }\n\n    /**\n     * Create a new circle set.\n     * @param shader - optional override for the shader program used when drawing.\n     */\n    constructor(\n        public gl: WebGL2RenderingContext,\n        shader?: ShaderProgram,\n    ) {\n        this.shader = shader ?? CircleSet.shader;\n        this.vao = new VertexArray(gl);\n        this.position_buf = this.vao.buffer(this.shader[\"a_position\"], 2);\n        this.cap_region_buf = this.vao.buffer(this.shader[\"a_cap_region\"], 1);\n        this.color_buf = this.vao.buffer(this.shader[\"a_color\"], 4);\n        this.vertex_count = 0;\n    }\n\n    /**\n     * Release GPU resources\n     */\n    dispose() {\n        this.vao.dispose();\n        this.position_buf.dispose();\n        this.cap_region_buf.dispose();\n        this.color_buf.dispose();\n    }\n\n    /**\n     * Tesselate an array of circles and upload them to the GPU.\n     */\n    set(circles: Circle[]) {\n        const { position_array, cap_array, color_array } =\n            Tesselator.tesselate_circles(circles);\n        this.position_buf.set(position_array);\n        this.cap_region_buf.set(cap_array);\n        this.color_buf.set(color_array);\n        this.vertex_count = position_array.length / 2;\n    }\n\n    render() {\n        if (!this.vertex_count) {\n            return;\n        }\n        this.vao.bind();\n        this.gl.drawArrays(this.gl.TRIANGLES, 0, this.vertex_count);\n    }\n}\n\n/**\n * A set of stroked polylines\n */\nexport class PolylineSet implements IDisposable {\n    static shader: ShaderProgram;\n    shader: ShaderProgram;\n    vao: VertexArray;\n    position_buf: Buffer;\n    cap_region_buf: Buffer;\n    color_buf: Buffer;\n    vertex_count: number;\n\n    /**\n     * Load the shader program required to render this primitive.\n     */\n    static async load_shader(gl: WebGL2RenderingContext) {\n        this.shader = await ShaderProgram.load(\n            gl,\n            \"polyline\",\n            polyline_vert_shader_src,\n            polyline_frag_shader_src,\n        );\n    }\n\n    /**\n     * Create a new polyline set.\n     * @param {WebGL2RenderingContext} gl\n     * @param {ShaderProgram?} shader - optional override for the shader program used when drawing.\n     */\n    constructor(\n        public gl: WebGL2RenderingContext,\n        shader?: ShaderProgram,\n    ) {\n        this.shader = shader ?? PolylineSet.shader;\n        this.vao = new VertexArray(gl);\n        this.position_buf = this.vao.buffer(this.shader[\"a_position\"], 2);\n        this.cap_region_buf = this.vao.buffer(this.shader[\"a_cap_region\"], 1);\n        this.color_buf = this.vao.buffer(this.shader[\"a_color\"], 4);\n        this.vertex_count = 0;\n    }\n\n    /**\n     * Release GPU resources\n     */\n    dispose() {\n        this.vao.dispose();\n        this.position_buf.dispose();\n        this.cap_region_buf.dispose();\n        this.color_buf.dispose();\n    }\n\n    /**\n     * Tesselate an array of polylines and upload them to the GPU.\n     */\n    set(lines: Polyline[]) {\n        if (!lines.length) {\n            return;\n        }\n\n        const vertex_count = lines.reduce((v, e) => {\n            return v + (e.points.length - 1) * Tesselator.vertices_per_quad;\n        }, 0);\n\n        const position_data = new Float32Array(vertex_count * 2);\n        const cap_data = new Float32Array(vertex_count);\n        const color_data = new Float32Array(vertex_count * 4);\n\n        let position_idx = 0;\n        let cap_idx = 0;\n        let color_idx = 0;\n\n        for (const line of lines) {\n            const { position_array, cap_array, color_array } =\n                Tesselator.tesselate_polyline(line);\n\n            position_data.set(position_array, position_idx);\n            position_idx += position_array.length;\n\n            cap_data.set(cap_array, cap_idx);\n            cap_idx += cap_array.length;\n\n            color_data.set(color_array, color_idx);\n            color_idx += color_array.length;\n        }\n\n        this.position_buf.set(position_data);\n        this.cap_region_buf.set(cap_data);\n        this.color_buf.set(color_data);\n\n        this.vertex_count = position_idx / 2;\n    }\n\n    render() {\n        if (!this.vertex_count) {\n            return;\n        }\n        this.vao.bind();\n        this.gl.drawArrays(this.gl.TRIANGLES, 0, this.vertex_count);\n    }\n}\n\n/**\n * A set of filled polygons\n */\nexport class PolygonSet implements IDisposable {\n    static shader: ShaderProgram;\n    shader: ShaderProgram;\n    vao: VertexArray;\n    position_buf: Buffer;\n    color_buf: Buffer;\n    vertex_count: number;\n\n    /**\n     * Load the shader program required to render this primitive.\n     */\n    static async load_shader(gl: WebGL2RenderingContext) {\n        this.shader = await ShaderProgram.load(\n            gl,\n            \"polygon\",\n            polygon_vert_shader_src,\n            polygon_frag_shader_src,\n        );\n    }\n\n    /**\n     * Create a new polygon set.\n     * @param {WebGL2RenderingContext} gl\n     * @param {ShaderProgram?} shader - optional override for the shader program used when drawing.\n     */\n    constructor(\n        public gl: WebGL2RenderingContext,\n        shader?: ShaderProgram,\n    ) {\n        this.shader = shader ?? PolygonSet.shader;\n        this.vao = new VertexArray(gl);\n        this.position_buf = this.vao.buffer(this.shader[\"a_position\"], 2);\n        this.color_buf = this.vao.buffer(this.shader[\"a_color\"], 4);\n        this.vertex_count = 0;\n    }\n\n    /**\n     * Release GPU resources\n     */\n    dispose() {\n        this.vao.dispose();\n        this.position_buf.dispose();\n        this.color_buf.dispose();\n    }\n\n    /**\n     * Convert an array of triangle vertices to polylines.\n     *\n     * This is a helper function for debugging. It allows easily drawing the\n     * outlines of the results of triangulation.\n     *\n     */\n    static polyline_from_triangles(\n        triangles: Float32Array,\n        width: number,\n        color: Color,\n    ): Polyline[] {\n        const lines: Polyline[] = [];\n        for (let i = 0; i < triangles.length; i += 6) {\n            const a = new Vec2(triangles[i], triangles[i + 1]);\n            const b = new Vec2(triangles[i + 2], triangles[i + 3]);\n            const c = new Vec2(triangles[i + 4], triangles[i + 5]);\n            lines.push(new Polyline([a, b, c, a], width, color));\n        }\n        return lines;\n    }\n\n    /**\n     * Tesselate (triangulate) and upload a list of polygons to the GPU.\n     */\n    set(polygons: Polygon[]) {\n        let total_vertex_data_length = 0;\n\n        for (const polygon of polygons) {\n            Tesselator.triangulate_polygon(polygon);\n            total_vertex_data_length += polygon.vertices?.length ?? 0;\n        }\n\n        const total_vertices = total_vertex_data_length / 2;\n\n        const vertex_data = new Float32Array(total_vertex_data_length);\n        const color_data = new Float32Array(total_vertices * 4);\n\n        let vertex_data_idx = 0;\n        let color_data_idx = 0;\n        for (const polygon of polygons) {\n            if (polygon.vertices == null) {\n                continue;\n            }\n\n            const polygon_vertex_count = polygon.vertices.length / 2;\n\n            vertex_data.set(polygon.vertices, vertex_data_idx);\n            vertex_data_idx += polygon.vertices.length;\n\n            Tesselator.populate_color_data(\n                color_data,\n                polygon.color as Color,\n                color_data_idx,\n                polygon_vertex_count * 4,\n            );\n            color_data_idx += polygon_vertex_count * 4;\n        }\n\n        this.position_buf.set(vertex_data);\n        this.color_buf.set(color_data);\n        this.vertex_count = vertex_data_idx / 2;\n    }\n\n    render() {\n        if (!this.vertex_count) {\n            return;\n        }\n        this.vao.bind();\n        this.gl.drawArrays(this.gl.TRIANGLES, 0, this.vertex_count);\n    }\n}\n\n/**\n * A set of primitives\n *\n * This is the primary interface to this module. It's used to collect a set\n * of primitives (circles, polylines, and polygons), upload their data to the\n * GPU, and draw them together. This is conceptually a \"layer\", all primitives\n * are drawn at the same depth.\n *\n * Like the underlying primitive sets, this is intended to be write once. Once\n * you call commit() the primitive data is released from working RAM and exists\n * only in the GPU buffers. To modify the data, you'd dispose() of this layer\n * and create a new one.\n *\n */\nexport class PrimitiveSet implements IDisposable {\n    #polygons: Polygon[] = [];\n    #circles: Circle[] = [];\n    #lines: Polyline[] = [];\n\n    #polygon_set?: PolygonSet;\n    #circle_set?: CircleSet;\n    #polyline_set?: PolylineSet;\n\n    /**\n     * Load all shader programs required to render primitives.\n     */\n    static async load_shaders(gl: WebGL2RenderingContext) {\n        await Promise.all([\n            PolygonSet.load_shader(gl),\n            PolylineSet.load_shader(gl),\n            CircleSet.load_shader(gl),\n        ]);\n    }\n\n    /**\n     * Create a new primitive set\n     */\n    constructor(public gl: WebGL2RenderingContext) {\n        this.gl = gl;\n    }\n\n    /**\n     * Release GPU resources\n     */\n    dispose() {\n        this.#polygon_set?.dispose();\n        this.#circle_set?.dispose();\n        this.#polyline_set?.dispose();\n    }\n\n    /**\n     * Clear committed geometry\n     */\n    clear() {\n        this.#polygon_set?.dispose();\n        this.#circle_set?.dispose();\n        this.#polyline_set?.dispose();\n\n        this.#polygon_set = undefined;\n        this.#circle_set = undefined;\n        this.#polyline_set = undefined;\n\n        this.#polygons = [];\n        this.#circles = [];\n        this.#lines = [];\n    }\n\n    /**\n     * Collect a new filled circle\n     */\n    add_circle(circle: Circle) {\n        this.#circles.push(circle);\n    }\n\n    /**\n     * Collect a new filled polygon\n     */\n    add_polygon(polygon: Polygon) {\n        this.#polygons.push(polygon);\n    }\n\n    /**\n     * Collect a new polyline\n     */\n    add_line(line: Polyline) {\n        this.#lines.push(line);\n    }\n\n    /**\n     * Tesselate all collected primitives and upload their data to the GPU.\n     */\n    commit() {\n        if (this.#polygons.length) {\n            this.#polygon_set = new PolygonSet(this.gl);\n            this.#polygon_set.set(this.#polygons);\n            this.#polygons = undefined!;\n        }\n        if (this.#lines.length) {\n            this.#polyline_set = new PolylineSet(this.gl);\n            this.#polyline_set.set(this.#lines);\n            this.#lines = undefined!;\n        }\n        if (this.#circles.length) {\n            this.#circle_set = new CircleSet(this.gl);\n            this.#circle_set.set(this.#circles);\n            this.#circles = undefined!;\n        }\n    }\n\n    /**\n     * Draw all the previously commit()ed primitives\n     * @param matrix - complete view/projection matrix\n     * @param depth - used for depth testing\n     * @parama alpha - overrides the alpha for colors\n     */\n    render(matrix: Matrix3, depth = 0, alpha = 1) {\n        if (this.#polygon_set) {\n            this.#polygon_set.shader.bind();\n            this.#polygon_set.shader[\"u_matrix\"].mat3f(false, matrix.elements);\n            this.#polygon_set.shader[\"u_depth\"].f1(depth);\n            this.#polygon_set.shader[\"u_alpha\"].f1(alpha);\n            this.#polygon_set.render();\n        }\n\n        if (this.#circle_set) {\n            this.#circle_set.shader.bind();\n            this.#circle_set.shader[\"u_matrix\"].mat3f(false, matrix.elements);\n            this.#circle_set.shader[\"u_depth\"].f1(depth);\n            this.#circle_set.shader[\"u_alpha\"].f1(alpha);\n            this.#circle_set.render();\n        }\n\n        if (this.#polyline_set) {\n            this.#polyline_set.shader.bind();\n            this.#polyline_set.shader[\"u_matrix\"].mat3f(false, matrix.elements);\n            this.#polyline_set.shader[\"u_depth\"].f1(depth);\n            this.#polyline_set.shader[\"u_alpha\"].f1(alpha);\n            this.#polyline_set.render();\n        }\n    }\n}\n", "/*\n    Copyright (c) 2023 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nimport { Color } from \"../../base/color\";\nimport { Angle, Matrix3, Vec2 } from \"../../base/math\";\nimport { RenderLayer, Renderer } from \"../renderer\";\nimport { Arc, Circle, Polygon, Polyline } from \"../shapes\";\nimport { PrimitiveSet } from \"./vector\";\n\n/**\n * WebGL2-based renderer\n */\nexport class WebGL2Renderer extends Renderer {\n    /** Graphics layers */\n    #layers: WebGL2RenderLayer[] = [];\n\n    /** The layer currently being drawn to. */\n    #active_layer: WebGL2RenderLayer | null;\n\n    /** Projection matrix for clip -> screen */\n    projection_matrix: Matrix3 = Matrix3.identity();\n\n    /** WebGL backend */\n    gl?: WebGL2RenderingContext;\n\n    /**\n     * Create a new WebGL2Renderer\n     */\n    constructor(canvas: HTMLCanvasElement) {\n        super(canvas);\n    }\n\n    /**\n     * Create and configure the WebGL2 context.\n     */\n    override async setup() {\n        const gl = this.canvas.getContext(\"webgl2\", { alpha: false });\n\n        if (gl == null) {\n            throw new Error(\"Unable to create WebGL2 context\");\n        }\n\n        this.gl = gl;\n\n        gl.enable(gl.BLEND);\n        gl.blendEquation(gl.FUNC_ADD);\n        gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n\n        gl.enable(gl.DEPTH_TEST);\n        gl.depthFunc(gl.GREATER);\n\n        gl.clearColor(...this.background_color.to_array());\n        gl.clearDepth(0);\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n        this.update_canvas_size();\n\n        await PrimitiveSet.load_shaders(gl);\n    }\n\n    override dispose() {\n        for (const layer of this.layers) {\n            layer.dispose();\n        }\n        this.gl = undefined;\n    }\n\n    override update_canvas_size() {\n        if (!this.gl) {\n            return;\n        }\n\n        const dpr = window.devicePixelRatio;\n        const rect = this.canvas.getBoundingClientRect();\n\n        const logical_w = rect.width;\n        const logical_h = rect.height;\n        const pixel_w = Math.round(rect.width * dpr);\n        const pixel_h = Math.round(rect.height * dpr);\n\n        if (this.canvas_size.x == pixel_w && this.canvas_size.y == pixel_h) {\n            return;\n        }\n\n        this.canvas.width = pixel_w;\n        this.canvas.height = pixel_h;\n\n        this.gl.viewport(0, 0, pixel_w, pixel_h);\n        this.projection_matrix = Matrix3.orthographic(logical_w, logical_h);\n    }\n\n    override clear_canvas() {\n        if (this.gl == null) throw new Error(\"Uninitialized\");\n\n        // Upate canvas size and projection matrix if needed\n        this.update_canvas_size();\n\n        this.gl.clear(this.gl.COLOR_BUFFER_BIT | this.gl.DEPTH_BUFFER_BIT);\n    }\n\n    override start_layer(name: string, depth = 0) {\n        if (this.gl == null) throw new Error(\"Uninitialized\");\n        this.#active_layer = new WebGL2RenderLayer(\n            this,\n            name,\n            new PrimitiveSet(this.gl),\n        );\n    }\n\n    override end_layer(): RenderLayer {\n        if (this.#active_layer == null) throw new Error(\"No active layer\");\n\n        this.#active_layer.geometry.commit();\n        this.#layers.push(this.#active_layer);\n        this.#active_layer = null;\n\n        return this.#layers.at(-1)!;\n    }\n\n    override arc(\n        arc_or_center: Arc | Vec2,\n        radius?: number,\n        start_angle?: Angle,\n        end_angle?: Angle,\n        width?: number,\n        color?: Color,\n    ): void {\n        super.prep_arc(\n            arc_or_center,\n            radius,\n            start_angle,\n            end_angle,\n            width,\n            color,\n        );\n    }\n\n    override circle(\n        circle_or_center: Circle | Vec2,\n        radius?: number,\n        color?: Color,\n    ): void {\n        const circle = super.prep_circle(circle_or_center, radius, color);\n\n        if (!circle.color) {\n            return;\n        }\n\n        this.#active_layer!.geometry.add_circle(circle);\n    }\n\n    override line(\n        line_or_points: Polyline | Vec2[],\n        width?: number,\n        color?: Color,\n    ): void {\n        const line = super.prep_line(line_or_points, width, color);\n\n        if (!line.color) {\n            return;\n        }\n\n        this.#active_layer!.geometry.add_line(line);\n    }\n\n    override polygon(polygon_or_points: Polygon | Vec2[], color?: Color): void {\n        const polygon = super.prep_polygon(polygon_or_points, color);\n\n        if (!polygon.color) {\n            return;\n        }\n\n        this.#active_layer!.geometry.add_polygon(polygon);\n    }\n\n    override get layers(): Iterable<RenderLayer> {\n        const layers = this.#layers;\n        return {\n            *[Symbol.iterator]() {\n                for (const layer of layers) {\n                    yield layer;\n                }\n            },\n        };\n    }\n\n    override remove_layer(layer: WebGL2RenderLayer) {\n        const idx = this.#layers.indexOf(layer);\n        if (idx == -1) {\n            return;\n        }\n        this.#layers.splice(idx, 1);\n    }\n}\n\nclass WebGL2RenderLayer extends RenderLayer {\n    constructor(\n        public override readonly renderer: WebGL2Renderer,\n        public override readonly name: string,\n        public geometry: PrimitiveSet,\n    ) {\n        super(renderer, name);\n    }\n\n    override dispose(): void {\n        this.clear();\n    }\n\n    clear() {\n        this.geometry?.dispose();\n    }\n\n    render(transform: Matrix3, depth: number, global_alpha = 1) {\n        const gl = this.renderer.gl!;\n        const total_transform =\n            this.renderer.projection_matrix.multiply(transform);\n\n        if (this.composite_operation != \"source-over\") {\n            gl.blendFunc(gl.ONE_MINUS_DST_COLOR, gl.ONE_MINUS_SRC_ALPHA);\n        }\n\n        this.geometry.render(total_transform, depth, global_alpha);\n\n        if (this.composite_operation != \"source-over\") {\n            gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n        }\n    }\n}\n", "/*\n    Copyright (c) 2023 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nimport { Angle, BBox, Vec2 } from \"../../base/math\";\n\n/**\n * Glyph abstract base class\n *\n * Shared between stroke and outline fonts, altough outline fonts aren't\n * currently implemented.\n */\nexport abstract class Glyph {\n    abstract transform(\n        glyph_size: Vec2,\n        offset: Vec2,\n        tilt: number,\n        angle: Angle,\n        mirror: boolean,\n        origin: Vec2,\n    ): Glyph;\n\n    abstract get bbox(): BBox;\n}\n\ntype Stroke = Vec2[];\n\n/**\n * Glyphs for stroke fonts.\n */\nexport class StrokeGlyph extends Glyph {\n    constructor(\n        public strokes: Stroke[],\n        public bbox: BBox,\n    ) {\n        super();\n    }\n\n    override transform(\n        glyph_size: Vec2,\n        offset: Vec2,\n        tilt: number,\n        angle: Angle,\n        mirror: boolean,\n        origin: Vec2,\n    ): StrokeGlyph {\n        // Note: our bbox calculation differs from KiCAD's, however,\n        // when I wrote this it seems to be consistent in terms of final\n        // outcome.\n        const bb = this.bbox.copy();\n\n        bb.x = offset.x + bb.x * glyph_size.x;\n        bb.y = offset.y + bb.y * glyph_size.y;\n        bb.w = bb.w * glyph_size.x;\n        bb.h = bb.h * glyph_size.y;\n\n        if (tilt) {\n            bb.w += bb.h * tilt;\n        }\n\n        const strokes: Stroke[] = [];\n\n        for (const src_stroke of this.strokes) {\n            const points: Vec2[] = [];\n            for (const src_point of src_stroke) {\n                let point = src_point.multiply(glyph_size);\n\n                if (tilt > 0) {\n                    point.x -= point.y * tilt;\n                }\n\n                point = point.add(offset);\n\n                if (mirror) {\n                    point.x = origin.x - (point.x - origin.x);\n                }\n\n                if (angle.degrees != 0) {\n                    point = angle.rotate_point(point, origin);\n                }\n\n                points.push(point);\n            }\n            strokes.push(points);\n        }\n\n        return new StrokeGlyph(strokes, bb);\n    }\n}\n", "/*\n    Copyright (c) 2023 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\n/**\n * KiCAD text markup parser\n *\n * KiCAD uses basic text markup to express subscript, superscript, and overbar\n * text. For example \"normal ^{superscript} _{subscript} ~{overbar}\".\n */\nexport class Markup {\n    root: MarkupNode;\n\n    constructor(public text: string) {\n        this.root = parse(tokenize(text));\n        this.root.is_root = true;\n    }\n}\n\nexport class MarkupNode {\n    is_root = false;\n    subscript = false;\n    superscript = false;\n    overbar = false;\n    text = \"\";\n    children: MarkupNode[] = [];\n}\n\ntype Token = {\n    text?: string;\n    open?: number;\n    close?: number;\n    control?: \"^\" | \"_\" | \"~\";\n};\n\nfunction* tokenize(str: string): Generator<Token> {\n    const EOF = \"\\x04\";\n    let start_idx = 0;\n    let control_char = null;\n    let bracket_count = 0;\n\n    for (let i = 0; i < str.length + 1; i++) {\n        const c = i < str.length ? str[i] : EOF;\n        switch (c) {\n            case \"_\":\n            case \"^\":\n            case \"~\":\n                control_char = c;\n                break;\n            case \"{\":\n                if (control_char) {\n                    bracket_count++;\n                    yield { text: str.slice(start_idx, i - 1) };\n                    yield { open: bracket_count, control: control_char };\n                    control_char = null;\n                    start_idx = i + 1;\n                }\n                break;\n            case \"}\":\n                if (bracket_count) {\n                    yield { text: str.slice(start_idx, i) };\n                    yield { close: bracket_count };\n                    start_idx = i + 1;\n                    bracket_count--;\n                }\n                break;\n            case EOF:\n                yield { text: str.slice(start_idx, i) };\n                break;\n            default:\n                control_char = null;\n                break;\n        }\n    }\n}\n\nfunction parse(tokens: Generator<Token>): MarkupNode {\n    let token;\n\n    const node = new MarkupNode();\n\n    while ((token = tokens.next().value)) {\n        if (token.text) {\n            const c = new MarkupNode();\n            c.text = token.text;\n            node.children.push(c);\n            continue;\n        }\n        if (token.open) {\n            const c = parse(tokens);\n            switch (token.control) {\n                case \"^\":\n                    c.superscript = true;\n                    break;\n                case \"_\":\n                    c.subscript = true;\n                    break;\n                case \"~\":\n                    c.overbar = true;\n                    break;\n            }\n            node.children.push(c);\n            continue;\n        }\n        if (token.close) {\n            return node;\n        }\n    }\n\n    return node;\n}\n", "/*\n    Copyright (c) 2023 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nimport { Angle, BBox, Matrix3, Vec2 } from \"../../base/math\";\nimport { Color, Polyline, Renderer } from \"../../graphics\";\nimport { Glyph, StrokeGlyph } from \"./glyph\";\nimport { Markup, MarkupNode } from \"./markup\";\n\n/** Font base class\n *\n * Defines the interface and common methods used for both\n * stroke fonts and (eventually) outline fonts.\n *\n * Note: KiCAD always passes any coordinates or sizes in scaled internal units\n * (1 UI = 1 nm for PCBNew and 1 UI = 100 nm for EESchema). That is, 1.27 mm is\n * represented as 12700 IU for EESchema and 1270000 IU for PCBNew. See KiCAD's\n * EDA_UNITS for more details. Importantly, this means this code will likely\n * not work as expected if you use unscaled units!\n *\n * This is largely adapted from KiCAD's KIFONT::FONT base class and beaten\n * to death with a TypeScript hammer.\n */\nexport abstract class Font {\n    /** Used to apply italic slant to stroke fonts and to estimate size of italic outline fonts. */\n    static readonly italic_tilt = 1.0 / 8;\n\n    /** Used to determine the spacing between two lines */\n    static readonly interline_pitch_ratio = 1.62;\n\n    constructor(public name: string) {}\n\n    draw(\n        gfx: Renderer | null,\n        text: string,\n        position: Vec2,\n        attributes: TextAttributes,\n    ): void {\n        if (!gfx || !text) {\n            return;\n        }\n\n        const lines = this.get_line_positions(text, position, attributes);\n\n        gfx.state.stroke_width = attributes.stroke_width;\n\n        for (const line of lines) {\n            this.draw_line(gfx, line.text, line.position, position, attributes);\n        }\n    }\n\n    /**\n     * Computes the width and height of a single line of marked up text.\n     *\n     * Corresponds to KiCAD's FONT::StringBoundaryLimits\n     *\n     * Used by EDAText.get_text_box(), which, inexplicably, doesn't use\n     * get_line_bbox() for what I can only assume is historical reasons.\n     *\n     * @param text - the text, should be a single line of markup.\n     * @param size - width and height of a glyph\n     * @param thickness - text thickness, used only to inflate the bounding box.\n     * @param bold - note: currently ignored by stroke font, as boldness is\n     *               applied by increasing the thickness.\n     */\n    get_line_extents(\n        text: string,\n        size: Vec2,\n        thickness: number,\n        bold: boolean,\n        italic: boolean,\n    ): Vec2 {\n        const style = new TextStyle();\n\n        style.bold = bold;\n        style.italic = italic;\n\n        const { bbox } = this.get_markup_as_glyphs(\n            text,\n            new Vec2(0, 0),\n            size,\n            new Angle(0),\n            false,\n            new Vec2(0, 0),\n            style,\n        );\n\n        return new Vec2(bbox.w, bbox.h);\n    }\n\n    /**\n     * Adds additional line breaks to the given marked up text in order to limit\n     * the overall width to the given column_width.\n     *\n     * Note: this behaves like KiCAD's FONT::LinebreakText in that it only\n     * breaks on spaces, it does not break within superscript, subscript, or\n     * overbar, and it doesn't bother with justification.\n     *\n     * Used by SCH_TEXTBOX & PCB_TEXTBOX.\n     *\n     * @param bold - note: ignored by stroke font, as boldness is applied by\n     *               increasing the thickness.\n     */\n    break_lines(\n        text: string,\n        column_width: number,\n        glyph_size: Vec2,\n        thickness: number,\n        bold: boolean,\n        italic: boolean,\n    ): string {\n        //\n        const style = new TextStyle();\n        style.bold = bold;\n        style.italic = italic;\n\n        const space_width = this.get_text_as_glyphs(\n            \" \",\n            glyph_size,\n            new Vec2(0, 0),\n            new Angle(0),\n            false,\n            new Vec2(0, 0),\n            style,\n        ).cursor.x;\n\n        const in_lines = text.split(\"\\n\");\n        let out_text = \"\";\n\n        for (let line_n = 0; line_n < in_lines.length; line_n++) {\n            const in_line = in_lines[line_n]!;\n            let unset_line = true;\n            let line_width = 0;\n\n            const words = this.wordbreak_markup(in_line, glyph_size, style);\n\n            for (const { word, width } of words) {\n                if (unset_line) {\n                    out_text += word;\n                    line_width += width;\n                    unset_line = false;\n                } else if (\n                    line_width + space_width + width <\n                    column_width - thickness\n                ) {\n                    out_text += \" \" + word;\n                    line_width += space_width + width;\n                } else {\n                    out_text += \"\\n\";\n                    line_width = 0;\n                    unset_line = true;\n                }\n            }\n\n            if (line_n != in_lines.length - 1) {\n                out_text += \"\\n\";\n            }\n        }\n\n        return out_text;\n    }\n\n    abstract compute_overbar_vertical_position(glyph_height: number): number;\n    abstract compute_underline_vertical_position(glyph_height: number): number;\n    abstract get_interline(glyph_height: number, line_spacing: number): number;\n\n    /**\n     * Builds a list of glyphs from the given text string.\n     *\n     * @param size - cap height and em width\n     * @param position - position of the text or the cursor position after the\n     *                   last text.\n     * @param origin - the origin point used for rotation and mirroring.\n     */\n    abstract get_text_as_glyphs(\n        text: string,\n        size: Vec2,\n        position: Vec2,\n        angle: Angle,\n        mirror: boolean,\n        origin: Vec2,\n        style: TextStyle,\n    ): { bbox: BBox; glyphs: Glyph[]; cursor: Vec2 };\n\n    // protected interfaces below.\n\n    /**\n     * Draws a single line of text.\n     *\n     * Multitext text must be split before calling this function.\n     *\n     * Corresponds to KiCAD's Font::DrawSingleLineText\n     *\n     * Used by draw()\n     */\n    protected draw_line(\n        gfx: Renderer | null,\n        text: string,\n        position: Vec2,\n        origin: Vec2,\n        attributes: TextAttributes,\n    ): BBox {\n        if (!gfx) {\n            return new BBox(0, 0, 0, 0);\n        }\n\n        const style = new TextStyle();\n        style.italic = attributes.italic;\n        style.underline = attributes.underlined;\n\n        const { glyphs, bbox } = this.get_markup_as_glyphs(\n            text,\n            position,\n            attributes.size,\n            attributes.angle,\n            attributes.mirrored,\n            origin,\n            style,\n        );\n\n        const transform = Matrix3.scaling(0.0001, 0.0001);\n\n        for (const glyph of glyphs as StrokeGlyph[]) {\n            for (const stroke of glyph.strokes) {\n                const stroke_pts = Array.from(transform.transform_all(stroke));\n                gfx.line(\n                    new Polyline(\n                        stroke_pts,\n                        attributes.stroke_width / 10000,\n                        attributes.color,\n                    ),\n                );\n            }\n        }\n\n        return bbox;\n    }\n\n    /**\n     * Computes the bounding box for a single line of text.\n     *\n     * Corresponds to KiCAD's FONT::boundingBoxSingleLine\n     *\n     * Used by get_line_positions() and draw()\n     */\n    protected get_line_bbox(\n        text: string,\n        position: Vec2,\n        size: Vec2,\n        italic: boolean,\n    ): { bbox: BBox; cursor: Vec2 } {\n        const style = new TextStyle();\n        style.italic = italic;\n\n        const { bbox, next_position } = this.get_markup_as_glyphs(\n            text,\n            position,\n            size,\n            new Angle(0),\n            false,\n            new Vec2(0, 0),\n            style,\n        );\n\n        return { bbox: bbox, cursor: next_position };\n    }\n\n    /**\n     * Get positions for each line in a multiline text.\n     *\n     * Used by draw()\n     */\n    protected get_line_positions(\n        text: string,\n        position: Vec2,\n        attributes: TextAttributes,\n    ): { text: string; position: Vec2; extents: Vec2 }[] {\n        const extents: Vec2[] = [];\n        const positions: Vec2[] = [];\n\n        const lines = text.split(\"\\n\");\n        const num_lines = lines.length;\n        const interline = this.get_interline(\n            attributes.size.y,\n            attributes.line_spacing,\n        );\n        let height = 0;\n\n        for (let n = 0; n < num_lines; n++) {\n            const line = lines[n]!;\n            const line_position = new Vec2(\n                position.x,\n                position.y + n * interline,\n            );\n            const { cursor: line_end } = this.get_line_bbox(\n                line,\n                line_position,\n                attributes.size,\n                attributes.italic,\n            );\n\n            const line_extents = line_end.sub(line_position);\n            extents.push(line_extents);\n\n            if (n == 0) {\n                // Note: magic number 1.17 is a hack found in 7.0 used to\n                // match 6.0's positioning.\n                height += attributes.size.y * 1.17;\n            } else {\n                height += interline;\n            }\n        }\n\n        const offset = new Vec2(0, attributes.size.y);\n\n        switch (attributes.v_align) {\n            case \"top\":\n                break;\n            case \"center\":\n                offset.y -= height / 2;\n                break;\n            case \"bottom\":\n                offset.y -= height;\n                break;\n        }\n\n        for (let n = 0; n < num_lines; n++) {\n            const line_extents = extents[n]!;\n            const line_offset = offset.copy();\n\n            line_offset.y += n * interline;\n\n            switch (attributes.h_align) {\n                case \"left\":\n                    break;\n                case \"center\":\n                    line_offset.x = -line_extents.x / 2;\n                    break;\n                case \"right\":\n                    line_offset.x = -line_extents.x;\n                    break;\n            }\n\n            positions.push(position.add(line_offset));\n        }\n\n        const out = [];\n        for (let n = 0; n < num_lines; n++) {\n            out.push({\n                text: lines[n]!,\n                position: positions[n]!,\n                extents: extents[n]!,\n            });\n        }\n\n        return out;\n    }\n\n    /**\n     * Converts marked up text to glyphs\n     *\n     * Corresponds to KiCAD's FONT::drawMarkup, which doesn't actually draw,\n     * just converts to glyphs.\n     *\n     * Used by string_boundary_limits(), draw_single_line_text(), and\n     * bbox_single_line()\n     */\n    protected get_markup_as_glyphs(\n        text: string,\n        position: Vec2,\n        size: Vec2,\n        angle: Angle,\n        mirror: boolean,\n        origin: Vec2,\n        style: TextStyle,\n    ): { next_position: Vec2; bbox: BBox; glyphs: Glyph[] } {\n        const markup = new Markup(text);\n        return this.get_markup_node_as_glyphs(\n            markup.root,\n            position,\n            size,\n            angle,\n            mirror,\n            origin,\n            style,\n        );\n    }\n\n    /** Internal method used by get_markup_as_glyphs */\n    protected get_markup_node_as_glyphs(\n        node: MarkupNode,\n        position: Vec2,\n        size: Vec2,\n        angle: Angle,\n        mirror: boolean,\n        origin: Vec2,\n        style: TextStyle,\n    ): { next_position: Vec2; bbox: BBox; glyphs: Glyph[] } {\n        let glyphs: Glyph[] = [];\n        const bboxes: BBox[] = [];\n        const next_position = position.copy();\n\n        let node_style = style.copy();\n\n        if (!node.is_root) {\n            if (node.subscript) {\n                node_style = new TextStyle();\n                node_style.subscript = true;\n            }\n            if (node.superscript) {\n                node_style = new TextStyle();\n                node_style.superscript = true;\n            }\n            node_style.overbar ||= node.overbar;\n\n            if (node.text) {\n                const {\n                    glyphs: node_glyphs,\n                    cursor,\n                    bbox,\n                } = this.get_text_as_glyphs(\n                    node.text,\n                    size,\n                    position,\n                    angle,\n                    mirror,\n                    origin,\n                    node_style,\n                );\n\n                glyphs = node_glyphs;\n                bboxes.push(bbox);\n                next_position.set(cursor);\n            }\n        }\n\n        for (const child of node.children) {\n            const {\n                next_position: child_next_position,\n                bbox: child_bbox,\n                glyphs: child_glyphs,\n            } = this.get_markup_node_as_glyphs(\n                child,\n                next_position,\n                size,\n                angle,\n                mirror,\n                origin,\n                node_style,\n            );\n\n            next_position.set(child_next_position);\n            bboxes.push(child_bbox);\n            glyphs = glyphs.concat(child_glyphs);\n        }\n\n        return {\n            next_position: next_position,\n            bbox: BBox.combine(bboxes),\n            glyphs: glyphs,\n        };\n    }\n\n    /** Breaks text up into words, accounting for markup.\n     *\n     * Corresponds to KiCAD's FONT::workbreakMarkup\n     *\n     * As per KiCAD, a word can represent an actual word or a run of text\n     * with subscript, superscript, or overbar applied.\n     *\n     * Used by SCH_TEXTBOX & PCB_TEXTBOX\n     */\n    protected wordbreak_markup(\n        text: string,\n        size: Vec2,\n        style: TextStyle,\n    ): { word: string; width: number }[] {\n        const markup = new Markup(text);\n        return this.wordbreak_markup_node(markup.root, size, style);\n    }\n\n    /** Internal method used by wordbreak_markup */\n    protected wordbreak_markup_node(\n        node: MarkupNode,\n        size: Vec2,\n        style: TextStyle,\n    ): { word: string; width: number }[] {\n        const node_style = style.copy();\n\n        let output: { word: string; width: number }[] = [];\n\n        if (!node.is_root) {\n            let escape_char = \"\";\n\n            if (node.subscript) {\n                escape_char = \"_\";\n                node_style.subscript = true;\n            }\n            if (node.superscript) {\n                escape_char = \"^\";\n                node_style.superscript = true;\n            }\n            if (node.overbar) {\n                escape_char = \"~\";\n                node_style.overbar = true;\n            }\n\n            if (escape_char) {\n                let word = `${escape_char}{`;\n                let width = 0;\n\n                if (node.text) {\n                    const { cursor } = this.get_text_as_glyphs(\n                        node.text,\n                        size,\n                        new Vec2(0, 0),\n                        new Angle(0),\n                        false,\n                        new Vec2(0, 0),\n                        node_style,\n                    );\n\n                    word += node.text;\n                    width += cursor.x;\n                }\n\n                for (const child of node.children) {\n                    const child_words = this.wordbreak_markup_node(\n                        child,\n                        size,\n                        node_style,\n                    );\n                    for (const {\n                        word: child_word,\n                        width: child_width,\n                    } of child_words) {\n                        word += child_word;\n                        width += child_width;\n                    }\n                }\n\n                word += \"}\";\n\n                return [{ word: word, width: width }];\n            } else {\n                const words = node.text.trim().split(\" \");\n\n                // Add back trailing space\n                if (node.text.endsWith(\" \")) {\n                    words.push(\" \");\n                }\n\n                for (const word of words) {\n                    const { cursor } = this.get_text_as_glyphs(\n                        word,\n                        size,\n                        new Vec2(0, 0),\n                        new Angle(0),\n                        false,\n                        new Vec2(0, 0),\n                        node_style,\n                    );\n                    output.push({ word: word, width: cursor.x });\n                }\n            }\n        }\n\n        for (const child of node.children) {\n            output = output.concat(\n                this.wordbreak_markup_node(child, size, style),\n            );\n        }\n\n        return output;\n    }\n}\n\nexport class TextStyle {\n    constructor(\n        public bold = false,\n        public italic = false,\n        public subscript = false,\n        public superscript = false,\n        public overbar = false,\n        public underline = false,\n    ) {}\n\n    copy() {\n        return new TextStyle(\n            this.bold,\n            this.italic,\n            this.subscript,\n            this.superscript,\n            this.overbar,\n            this.underline,\n        );\n    }\n}\n\nexport type HAlign = \"left\" | \"center\" | \"right\";\nexport type VAlign = \"top\" | \"center\" | \"bottom\";\n\nexport class TextAttributes {\n    font: Font | null = null;\n    h_align: HAlign = \"center\";\n    v_align: VAlign = \"center\";\n    angle: Angle = new Angle(0);\n    line_spacing = 1;\n    stroke_width = 0;\n    italic = false;\n    bold = false;\n    underlined = false;\n    color: Color = Color.transparent_black;\n    visible = true;\n    mirrored = false;\n    multiline = true;\n    size: Vec2 = new Vec2(0, 0);\n\n    /** Used to keep the text from being rotated upside-down\n     * or backwards and becoming difficult to read. */\n    keep_upright = false;\n\n    copy() {\n        const a = new TextAttributes();\n        a.font = this.font;\n        a.h_align = this.h_align;\n        a.v_align = this.v_align;\n        a.angle = this.angle.copy();\n        a.line_spacing = this.line_spacing;\n        a.stroke_width = this.stroke_width;\n        a.italic = this.italic;\n        a.bold = this.bold;\n        a.underlined = this.underlined;\n        a.color = this.color.copy();\n        a.visible = this.visible;\n        a.mirrored = this.mirrored;\n        a.multiline = this.multiline;\n        a.size = this.size.copy();\n        return a;\n    }\n}\n", "/* Generated from third-party ./third_party/newstroke/newstroke_font.cpp for KiCanvas.\nSee below for original license. */\n\n/*\n * newstroke_font.cpp - definitions for automatically converted font\n *\n * This program source code file is part of KiCad, a free EDA CAD application.\n *\n * Copyright (C) 2010 vladimir uryvaev <vovanius@bk.ru>\n * Copyright (C) 1992-2019 KiCad Developers, see change_log.txt for contributors.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, you may find one here:\n * http://www.gnu.org/licenses/old-licenses/gpl-2.0.html\n * or you may search the http://www.gnu.org website for the version 2 license,\n * or you may write to the Free Software Foundation, Inc.,\n * 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA\n */\n\n/**\n * Modified 2019 to include based CJK Unicode Ideographs, using\n * code copyright (c) 2018 Lingdong Huang\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n * Font used for CJK is Source Han Sans from https://github.com/adobe-fonts/source-han-sans\n * Source Han Sans is Copyright 2014-2019 Adobe (http://www.adobe.com/), with Reserved Font\n * Name 'Source'. Source is a trademark of Adobe in the United States\n * and/or other countries.\n *\n * This Font Software is licensed under the SIL Open Font License,\n * Version 1.1.\n *\n * This license is copied below, and is also available with a FAQ at:\n * http://scripts.sil.org/OFL\n *\n * -----------------------------------------------------------\n * SIL OPEN FONT LICENSE Version 1.1 - 26 February 2007\n * -----------------------------------------------------------\n *\n * PREAMBLE\n * The goals of the Open Font License (OFL) are to stimulate worldwide\n * development of collaborative font projects, to support the font\n * creation efforts of academic and linguistic communities, and to\n * provide a free and open framework in which fonts may be shared and\n * improved in partnership with others.\n *\n * The OFL allows the licensed fonts to be used, studied, modified and\n * redistributed freely as long as they are not sold by themselves. The\n * fonts, including any derivative works, can be bundled, embedded,\n * redistributed and/or sold with any software provided that any reserved\n * names are not used by derivative works. The fonts and derivatives,\n * however, cannot be released under any other type of license. The\n * requirement for fonts to remain under this license does not apply to\n * any document created using the fonts or their derivatives.\n *\n * DEFINITIONS\n * \"Font Software\" refers to the set of files released by the Copyright\n * Holder(s) under this license and clearly marked as such. This may\n * include source files, build scripts and documentation.\n *\n * \"Reserved Font Name\" refers to any names specified as such after the\n * copyright statement(s).\n *\n * \"Original Version\" refers to the collection of Font Software\n * components as distributed by the Copyright Holder(s).\n *\n * \"Modified Version\" refers to any derivative made by adding to,\n * deleting, or substituting -- in part or in whole -- any of the\n * components of the Original Version, by changing formats or by porting\n * the Font Software to a new environment.\n *\n * \"Author\" refers to any designer, engineer, programmer, technical\n * writer or other person who contributed to the Font Software.\n *\n * PERMISSION & CONDITIONS\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of the Font Software, to use, study, copy, merge, embed,\n * modify, redistribute, and sell modified and unmodified copies of the\n * Font Software, subject to the following conditions:\n *\n * 1) Neither the Font Software nor any of its individual components, in\n * Original or Modified Versions, may be sold by itself.\n *\n * 2) Original or Modified Versions of the Font Software may be bundled,\n * redistributed and/or sold with any software, provided that each copy\n * contains the above copyright notice and this license. These can be\n * included either as stand-alone text files, human-readable headers or\n * in the appropriate machine-readable metadata fields within text or\n * binary files as long as those fields can be easily viewed by the user.\n *\n * 3) No Modified Version of the Font Software may use the Reserved Font\n * Name(s) unless explicit written permission is granted by the\n * corresponding Copyright Holder. This restriction only applies to the\n * primary font name as presented to the users.\n *\n * 4) The name(s) of the Copyright Holder(s) or the Author(s) of the Font\n * Software shall not be used to promote, endorse or advertise any\n * Modified Version, except to acknowledge the contribution(s) of the\n * Copyright Holder(s) and the Author(s) or with their explicit written\n * permission.\n *\n * 5) The Font Software, modified or unmodified, in part or in whole,\n * must be distributed entirely under this license, and must not be\n * distributed under any other license. The requirement for fonts to\n * remain under this license does not apply to any document created using\n * the Font Software.\n *\n * TERMINATION\n * This license becomes null and void if any of the above conditions are\n * not met.\n *\n * DISCLAIMER\n * THE FONT SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT\n * OF COPYRIGHT, PATENT, TRADEMARK, OR OTHER RIGHT. IN NO EVENT SHALL THE\n * COPYRIGHT HOLDER BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * INCLUDING ANY GENERAL, SPECIAL, INDIRECT, INCIDENTAL, OR CONSEQUENTIAL\n * DAMAGES, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF THE USE OR INABILITY TO USE THE FONT SOFTWARE OR FROM\n * OTHER DEALINGS IN THE FONT SOFTWARE.\n */\n\nexport const shared_glyphs = [\"E_JSZS\", \"G][EI`\", \"H\\\\KFXFQNTNVOWPXRXWWYVZT[N[LZKY\", \"I[MUWU RK[RFY[\", \"G\\\\SPVQWRXTXWWYVZT[L[LFSFUGVHWJWLVNUOSPLP\", \"F[WYVZS[Q[NZLXKVJRJOKKLINGQFSFVGWH\", \"H[MPTP RW[M[MFWF\", \"G]L[LF RLPXP RX[XF\", \"MWR[RF\", \"G\\\\L[LF RX[OO RXFLR\", \"F^K[KFRUYFY[\", \"G]PFTFVGXIYMYTXXVZT[P[NZLXKTKMLINGPF\", \"G\\\\L[LFTFVGWHXJXMWOVPTQLQ\", \"JZLFXF RR[RF\", \"H\\\\KFY[ RYFK[\", \"I[RQR[ RKFRQYF\", \"NVPESH\", \"HZVZT[P[NZMYLWLQMONNPMTMVN\", \"MWRMR_QaObNb RRFQGRHSGRFRH\", \"H[P[NZMYLWLQMONNPMSMUNVOWQWWVYUZS[P[\", \"JZMMR[WM\", \"G]JMN[RQV[ZM\", \"H\\\\RbRD\", \"F^K[KFYFY[K[\", \"RR\", \"NVTEQH\", \"JZRRQSRTSSRRRT\", \"MWR[RF RN?O@NAM@N?NA RV?W@VAU@V?VA\", \"G\\\\L[LFQFTGVIWKXOXRWVVXTZQ[L[ RIPQP\", \"H[P[NZMYLWLQMONNPMSMUNVOWQWWVYUZS[P[ RTEQH\", \"I[MUWU RK[RFY[ RN>O@QASAU@V>\", \"IZNMN[ RPSV[ RVMNU\", \"G]KPYP RPFTFVGXIYMYTXXVZT[P[NZLXKTKMLINGPF\", \"I[NNPMTMVNWPWXVZT[P[NZMXMVWT\", \"H]YMVWUYTZR[P[NZMYLVLRMONNPMRMTNUOVQWXXZZ[\", \"IZPTNUMWMXNZP[T[VZ RRTPTNSMQMPNNPMTMVN\", \"MXRMRXSZU[\", \"H[LTWT RP[NZMYLWLQMONNPMSMUNVOWQWWVYUZS[P[\", \"G]RFRb RPMTMVNXPYRYVXXVZT[P[NZLXKVKRLPNNPM\", \"H]YMVWUYTZR[P[NZMYLVLRMONNPMRMTNUOVQWXXZZ[ RTEQH\", \"IZPTNUMWMXNZP[T[VZ RRTPTNSMQMPNNPMTMVN RTEQH\", \"I\\\\NMN[ RNOONQMTMVNWPWb RTEQH\", \"MXRMRXSZU[ RTEQH\", \"G]RTRX RMMLNKPKXLZN[O[QZRXSZU[V[XZYXYPXNWM\", \"H[MMMXNZP[S[UZVYWWWPVNUM RTEQH\", \"G]RTRX RMMLNKPKXLZN[O[QZRXSZU[V[XZYXYPXNWM RTEQH\", \"LXOTUT\", \"E_PKTKXMZQZUXYT[P[LYJUJQLMPK RPQRPTQUSTURVPUOSPQ\", \"Pf\"];\n\nexport const glyph_data: (string|number|undefined)[]  = [\"JZ\",\n\"MWRYSZR[QZRYR[ RRSQGRFSGRSRF\",\n\"JZNFNJ RVFVJ\",\n\"H]LM[M RRDL_ RYVJV RS_YD\",\n\"H\\\\LZO[T[VZWYXWXUWSVRTQPPNOMNLLLJMHNGPFUFXG RRCR^\",\n\"F^J[ZF RMFOGPIOKMLKKJIKGMF RYZZXYVWUUVTXUZW[YZ\",\n\"E_[[Z[XZUWPQNNMKMINGPFQFSGTITJSLRMLQKRJTJWKYLZN[Q[SZTYWUXRXP\",\n\"MWSFQJ\",\n\"KYVcUbS_R]QZPUPQQLRISGUDVC\",\n\"KYNcObQ_R]SZTUTQSLRIQGODNC\",\n\"JZRFRK RMIRKWI ROORKUO\",\n\"E_JSZS RR[RK\",\n\"MWSZS[R]Q^\",\n0,\n\"MWRYSZR[QZRYR[\",\n1,\n\"H\\\\QFSFUGVHWJXNXSWWVYUZS[Q[OZNYMWLSLNMJNHOGQF\",\n\"H\\\\X[L[ RR[RFPINKLL\",\n\"H\\\\LHMGOFTFVGWHXJXLWOK[X[\",\n2,\n\"H\\\\VMV[ RQELTYT\",\n\"H\\\\WFMFLPMOONTNVOWPXRXWWYVZT[O[MZLY\",\n\"H\\\\VFRFPGOHMKLOLWMYNZP[T[VZWYXWXRWPVOTNPNNOMPLR\",\n\"H\\\\KFYFP[\",\n\"H\\\\PONNMMLKLJMHNGPFTFVGWHXJXKWMVNTOPONPMQLSLWMYNZP[T[VZWYXWXSWQVPTO\",\n\"H\\\\N[R[TZUYWVXRXJWHVGTFPFNGMHLJLOMQNRPSTSVRWQXO\",\n\"MWRYSZR[QZRYR[ RRNSORPQORNRP\",\n\"MWSZS[R]Q^ RRNSORPQORNRP\",\n\"E_ZMJSZY\",\n\"E_JPZP RZVJV\",\n\"E_JMZSJY\",\n\"I[QYRZQ[PZQYQ[ RMGOFTFVGWIWKVMUNSORPQRQS\",\n\"D_VQUPSOQOOPNQMSMUNWOXQYSYUXVW RVOVWWXXXZW[U[PYMVKRJNKKMIPHTIXK[N]R^V]Y[\",\n3,\n4,\n5,\n\"G\\\\L[LFQFTGVIWKXOXRWVVXTZQ[L[\",\n6,\n\"HZTPMP RM[MFWF\",\n\"F[VGTFQFNGLIKKJOJRKVLXNZQ[S[VZWYWRSR\",\n7,\n8,\n\"JZUFUUTXRZO[M[\",\n9,\n\"HYW[M[MF\",\n10,\n\"G]L[LFX[XF\",\n11,\n12,\n\"G]Z]X\\\\VZSWQVOV RP[NZLXKTKMLINGPFTFVGXIYMYTXXVZT[P[\",\n\"G\\\\X[QQ RL[LFTFVGWHXJXMWOVPTQLQ\",\n\"H\\\\LZO[T[VZWYXWXUWSVRTQPPNOMNLLLJMHNGPFUFXG\",\n13,\n\"G]LFLWMYNZP[T[VZWYXWXF\",\n\"I[KFR[YF\",\n\"F^IFN[RLV[[F\",\n14,\n15,\n\"H\\\\KFYFK[Y[\",\n\"KYVbQbQDVD\",\n\"KYID[_\",\n\"KYNbSbSDND\",\n\"LXNHREVH\",\n\"JZJ]Z]\",\n16,\n\"I\\\\W[WPVNTMPMNN RWZU[P[NZMXMVNTPSUSWR\",\n\"H[M[MF RMNOMSMUNVOWQWWVYUZS[O[MZ\",\n17,\n\"I\\\\W[WF RWZU[Q[OZNYMWMQNOONQMUMWN\",\n\"I[VZT[P[NZMXMPNNPMTMVNWPWRMT\",\n\"MYOMWM RR[RISGUFWF\",\n\"I\\\\WMW^V`UaSbPbNa RWZU[Q[OZNYMWMQNOONQMUMWN\",\n\"H[M[MF RV[VPUNSMPMNNMO\",\n\"MWR[RM RRFQGRHSGRFRH\",\n18,\n\"IZN[NF RPSV[ RVMNU\",\n\"MXU[SZRXRF\",\n\"D`I[IM RIOJNLMOMQNRPR[ RRPSNUMXMZN[P[[\",\n\"I\\\\NMN[ RNOONQMTMVNWPW[\",\n19,\n\"H[MMMb RMNOMSMUNVOWQWWVYUZS[O[MZ\",\n\"I\\\\WMWb RWZU[Q[OZNYMWMQNOONQMUMWN\",\n\"KXP[PM RPQQORNTMVM\",\n\"J[NZP[T[VZWXWWVUTTQTOSNQNPONQMTMVN\",\n\"MYOMWM RRFRXSZU[W[\",\n\"H[VMV[ RMMMXNZP[S[UZVY\",\n20,\n21,\n\"IZL[WM RLMW[\",\n\"JZMMR[ RWMR[P`OaMb\",\n\"IZLMWML[W[\",\n\"KYVcUcSbR`RVQTOSQRRPRFSDUCVC\",\n22,\n\"KYNcOcQbR`RVSTUSSRRPRFQDOCNC\",\n\"KZMSNRPQTSVRWQ\",\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n\"JZ\",\n\"MWROQNRMSNRORM RRUSaRbQaRURb\",\n\"HZVZT[P[NZMYLWLQMONNPMTMVN RRJR^\",\n\"H[LMTM RL[W[ RO[OIPGRFUFWG\",\n\"H]LYOV RLLOO RVVYY RVOYL RVVTWQWOVNTNQOOQNTNVOWQWTVV\",\n\"F^JTZT RJMZM RRQR[ RKFRQYF\",\n\"MWRbRW RRFRQ\",\n\"I[N]P^S^U]V[UYOSNQNPONQM RVGTFQFOGNIOKUQVSVTUVSW\",\n\"LXNFOGNHMGNFNH RVFWGVHUGVFVH\",\n\"@dVKTJPJNKLMKOKSLUNWPXTXVW RRCMDHGELDQEVH[M^R_W^\\\\[_V`Q_L\\\\GWDRC\",\n\"KZOEQDSDUEVGVN RVMTNQNOMNKOIQHVH\",\n\"H\\\\RMLSRY RXWTSXO\",\n\"E_JQZQZV\",\n24,\n\"@dWXRR RNXNJTJVKWMWOVQTRNR RRCMDHGELDQEVH[M^R_W^\\\\[_V`Q_L\\\\GWDRC\",\n\"LXMGWG\",\n\"JZRFPGOIPKRLTKUITGRF\",\n\"E_JOZO RRWRG RZ[J[\",\n\"JZNAP@S@UAVCVEUGNNVN\",\n\"JZN@V@RESEUFVHVKUMSNPNNM\",\n25,\n\"H^MMMb RWXXZZ[ RMXNZP[T[VZWXWM\",\n\"F]VMV[ ROMOXNZL[ RZMMMKNJP\",\n26,\n\"MWR\\\\T]U_TaRbOb\",\n\"JZVNNN RNCPBR@RN\",\n\"KYQNOMNKNGOEQDSDUEVGVKUMSNQN\",\n\"H\\\\RMXSRY RLWPSLO\",\n\"G]KQYQ RVNNN RNCPBR@RN RUYUa RQSN]W]\",\n\"G]KQYQ RVNNN RNCPBR@RN RNTPSSSUTVVVXUZNaVa\",\n\"G]KQYQ RN@V@RESEUFVHVKUMSNPNNM RUYUa RQSN]W]\",\n\"I[SORNSMTNSOSM RWaUbPbNaM_M]N[OZQYRXSVSU\",\n\"I[MUWU RK[RFY[ RP>SA\",\n\"I[MUWU RK[RFY[ RT>QA\",\n\"I[MUWU RK[RFY[ RNAR>VA\",\n\"I[MUWU RK[RFY[ RMAN@P?TAV@W?\",\n\"I[MUWU RK[RFY[ RN?O@NAM@N?NA RV?W@VAU@V?VA\",\n\"I[MUWU RK[RFY[ RRFPEOCPAR@TAUCTERF\",\n\"F`JURU RRPYP RH[OF\\\\F RRFR[\\\\[\",\n\"F[WYVZS[Q[NZLXKVJRJOKKLINGQFSFVGWH RR\\\\T]U_TaRbOb\",\n\"H[MPTP RW[M[MFWF RP>SA\",\n\"H[MPTP RW[M[MFWF RT>QA\",\n\"H[MPTP RW[M[MFWF RNAR>VA\",\n\"H[MPTP RW[M[MFWF RN?O@NAM@N?NA RV?W@VAU@V?VA\",\n\"MWR[RF RP>SA\",\n\"MWR[RF RT>QA\",\n\"MWR[RF RNAR>VA\",\n27,\n28,\n\"G]L[LFX[XF RMAN@P?TAV@W?\",\n\"G]PFTFVGXIYMYTXXVZT[P[NZLXKTKMLINGPF RP>SA\",\n\"G]PFTFVGXIYMYTXXVZT[P[NZLXKTKMLINGPF RT>QA\",\n\"G]PFTFVGXIYMYTXXVZT[P[NZLXKTKMLINGPF RNAR>VA\",\n\"G]PFTFVGXIYMYTXXVZT[P[NZLXKTKMLINGPF RMAN@P?TAV@W?\",\n\"G]PFTFVGXIYMYTXXVZT[P[NZLXKTKMLINGPF RN?O@NAM@N?NA RV?W@VAU@V?VA\",\n\"E_LMXY RXMLY\",\n\"G]ZFJ[ RP[NZLXKTKMLINGPFTFVGXIYMYTXXVZT[P[\",\n\"G]LFLWMYNZP[T[VZWYXWXF RP>SA\",\n\"G]LFLWMYNZP[T[VZWYXWXF RT>QA\",\n\"G]LFLWMYNZP[T[VZWYXWXF RNAR>VA\",\n\"G]LFLWMYNZP[T[VZWYXWXF RN?O@NAM@N?NA RV?W@VAU@V?VA\",\n\"I[RQR[ RKFRQYF RT>QA\",\n\"G\\\\LFL[ RLKTKVLWMXOXRWTVUTVLV\",\n\"F]K[KJLHMGOFRFTGUHVJVMSMQNPPPQQSSTVTXUYWYXXZV[R[PZ\",\n\"I\\\\W[WPVNTMPMNN RWZU[P[NZMXMVNTPSUSWR RPESH\",\n\"I\\\\W[WPVNTMPMNN RWZU[P[NZMXMVNTPSUSWR RTEQH\",\n\"I\\\\W[WPVNTMPMNN RWZU[P[NZMXMVNTPSUSWR RNHREVH\",\n\"I\\\\W[WPVNTMPMNN RWZU[P[NZMXMVNTPSUSWR RMHNGPFTHVGWF\",\n\"I\\\\W[WPVNTMPMNN RWZU[P[NZMXMVNTPSUSWR RNFOGNHMGNFNH RVFWGVHUGVFVH\",\n\"I\\\\W[WPVNTMPMNN RWZU[P[NZMXMVNTPSUSWR RRHPGOEPCRBTCUETGRH\",\n\"D`INKMOMQNRP R[ZY[U[SZRXRPSNUMYM[N\\\\P\\\\RRSKSITHVHXIZK[O[QZRX\",\n\"HZVZT[P[NZMYLWLQMONNPMTMVN RR\\\\T]U_TaRbOb\",\n\"I[VZT[P[NZMXMPNNPMTMVNWPWRMT RPESH\",\n\"I[VZT[P[NZMXMPNNPMTMVNWPWRMT RTEQH\",\n\"I[VZT[P[NZMXMPNNPMTMVNWPWRMT RNHREVH\",\n\"I[VZT[P[NZMXMPNNPMTMVNWPWRMT RNFOGNHMGNFNH RVFWGVHUGVFVH\",\n\"MWR[RM RPESH\",\n\"MWR[RM RTEQH\",\n\"LXNHREVH RR[RM\",\n\"LXNFOGNHMGNFNH RVFWGVHUGVFVH RR[RM\",\n\"I\\\\SCQI RWNUMQMONNOMQMXNZP[T[VZWXWLVITGRFNE\",\n\"I\\\\NMN[ RNOONQMTMVNWPW[ RMHNGPFTHVGWF\",\n\"H[P[NZMYLWLQMONNPMSMUNVOWQWWVYUZS[P[ RPESH\",\n29,\n\"H[P[NZMYLWLQMONNPMSMUNVOWQWWVYUZS[P[ RNHREVH\",\n\"H[P[NZMYLWLQMONNPMSMUNVOWQWWVYUZS[P[ RMHNGPFTHVGWF\",\n\"H[P[NZMYLWLQMONNPMSMUNVOWQWWVYUZS[P[ RNFOGNHMGNFNH RVFWGVHUGVFVH\",\n\"E_ZSJS RRXSYRZQYRXRZ RRLSMRNQMRLRN\",\n\"H[XMK[ RP[NZMYLWLQMONNPMSMUNVOWQWWVYUZS[P[\",\n\"H[VMV[ RMMMXNZP[S[UZVY RPESH\",\n\"H[VMV[ RMMMXNZP[S[UZVY RTEQH\",\n\"H[VMV[ RMMMXNZP[S[UZVY RNHREVH\",\n\"H[VMV[ RMMMXNZP[S[UZVY RNFOGNHMGNFNH RVFWGVHUGVFVH\",\n\"JZMMR[ RWMR[P`OaMb RTEQH\",\n\"H[MFMb RMNOMSMUNVOWQWWVYUZS[O[MZ\",\n\"JZMMR[ RWMR[P`OaMb RNFOGNHMGNFNH RVFWGVHUGVFVH\",\n\"I[MUWU RK[RFY[ RM@W@\",\n\"I\\\\W[WPVNTMPMNN RWZU[P[NZMXMVNTPSUSWR RMGWG\",\n30,\n\"I\\\\W[WPVNTMPMNN RWZU[P[NZMXMVNTPSUSWR RNEOGQHSHUGVE\",\n\"I[MUWU RK[RFY[ RY[W]V_WaYb[b\",\n\"I\\\\W[WPVNTMPMNN RWZU[P[NZMXMVNTPSUSWR RW[U]T_UaWbYb\",\n\"F[WYVZS[Q[NZLXKVJRJOKKLINGQFSFVGWH RT>QA\",\n\"HZVZT[P[NZMYLWLQMONNPMTMVN RTEQH\",\n\"F[WYVZS[Q[NZLXKVJRJOKKLINGQFSFVGWH RNAR>VA\",\n\"HZVZT[P[NZMYLWLQMONNPMTMVN RNHREVH\",\n\"F[WYVZS[Q[NZLXKVJRJOKKLINGQFSFVGWH RR?Q@RAS@R?RA\",\n\"HZVZT[P[NZMYLWLQMONNPMTMVN RRFQGRHSGRFRH\",\n\"F[WYVZS[Q[NZLXKVJRJOKKLINGQFSFVGWH RN>RAV>\",\n\"HZVZT[P[NZMYLWLQMONNPMTMVN RNERHVE\",\n\"G\\\\L[LFQFTGVIWKXOXRWVVXTZQ[L[ RN>RAV>\",\n\"IfW[WF RWZU[Q[OZNYMWMQNOONQMUMWN RbF`J\",\n28,\n\"I\\\\W[WF RWZU[Q[OZNYMWMQNOONQMUMWN RRHZH\",\n\"H[MPTP RW[M[MFWF RM@W@\",\n\"I[VZT[P[NZMXMPNNPMTMVNWPWRMT RMGWG\",\n\"H[MPTP RW[M[MFWF RN>O@QASAU@V>\",\n\"I[VZT[P[NZMXMPNNPMTMVNWPWRMT RNEOGQHSHUGVE\",\n\"H[MPTP RW[M[MFWF RR?Q@RAS@R?RA\",\n\"I[VZT[P[NZMXMPNNPMTMVNWPWRMT RRFQGRHSGRFRH\",\n\"H[MPTP RW[M[MFWF RR[P]O_PaRbTb\",\n\"I[VZT[P[NZMXMPNNPMTMVNWPWRMT RR[P]O_PaRbTb\",\n\"H[MPTP RW[M[MFWF RN>RAV>\",\n\"I[VZT[P[NZMXMPNNPMTMVNWPWRMT RNERHVE\",\n\"F[VGTFQFNGLIKKJOJRKVLXNZQ[S[VZWYWRSR RNAR>VA\",\n\"I\\\\WMW^V`UaSbPbNa RWZU[Q[OZNYMWMQNOONQMUMWN RNHREVH\",\n\"F[VGTFQFNGLIKKJOJRKVLXNZQ[S[VZWYWRSR RN>O@QASAU@V>\",\n\"I\\\\WMW^V`UaSbPbNa RWZU[Q[OZNYMWMQNOONQMUMWN RNEOGQHSHUGVE\",\n\"F[VGTFQFNGLIKKJOJRKVLXNZQ[S[VZWYWRSR RR?Q@RAS@R?RA\",\n\"I\\\\WMW^V`UaSbPbNa RWZU[Q[OZNYMWMQNOONQMUMWN RRFQGRHSGRFRH\",\n\"F[VGTFQFNGLIKKJOJRKVLXNZQ[S[VZWYWRSR RR\\\\T]U_TaRbOb\",\n\"I\\\\WMW^V`UaSbPbNa RWZU[Q[OZNYMWMQNOONQMUMWN RRGPFODPBRAUA\",\n\"G]L[LF RLPXP RX[XF RNAR>VA\",\n\"H[M[MF RV[VPUNSMPMNNMO RIAM>QA\",\n\"G]IJ[J RL[LF RLPXP RX[XF\",\n\"H[M[MF RV[VPUNSMPMNNMO RJHRH\",\n\"MWR[RF RMAN@P?TAV@W?\",\n\"MWR[RM RMHNGPFTHVGWF\",\n\"MWR[RF RM@W@\",\n\"MWR[RM RMGWG\",\n\"MWR[RF RN>O@QASAU@V>\",\n\"MWR[RM RNEOGQHSHUGVE\",\n\"MWR[RF RR[P]O_PaRbTb\",\n\"MWR[RM RR[P]O_PaRbTb\",\n\"MWR[RF RR?Q@RAS@R?RA\",\n\"MWR[RM\",\n\"MgR[RF RbFbUaX_Z\\\\[Z[\",\n\"MaR[RM RRFQGRHSGRFRH R\\\\M\\\\_[aYbXb R\\\\F[G\\\\H]G\\\\F\\\\H\",\n\"JZUFUUTXRZO[M[ RQAU>YA\",\n\"MWRMR_QaObNb RNHREVH\",\n\"G\\\\L[LF RX[OO RXFLR RR\\\\T]U_TaRbOb\",\n\"IZN[NF RPSV[ RVMNU RR\\\\T]U_TaRbOb\",\n31,\n\"HYW[M[MF RO>LA\",\n\"MXU[SZRXRF RTEQH\",\n\"HYW[M[MF RR\\\\T]U_TaRbOb\",\n\"MXU[SZRXRF RR\\\\T]U_TaRbOb\",\n\"HYW[M[MF RVHSK\",\n\"M^U[SZRXRF RZFXJ\",\n\"HYW[M[MF RUNTOUPVOUNUP\",\n\"M\\\\U[SZRXRF RYOZPYQXPYOYQ\",\n\"HYW[M[MF RJQPM\",\n\"MXU[SZRXRF ROQUM\",\n\"G]L[LFX[XF RT>QA\",\n\"I\\\\NMN[ RNOONQMTMVNWPW[ RTEQH\",\n\"G]L[LFX[XF RR\\\\T]U_TaRbOb\",\n\"I\\\\NMN[ RNOONQMTMVNWPW[ RR\\\\T]U_TaRbOb\",\n\"G]L[LFX[XF RN>RAV>\",\n\"I\\\\NMN[ RNOONQMTMVNWPW[ RNERHVE\",\n\"MjSFQJ R\\\\M\\\\[ R\\\\O]N_MbMdNePe[\",\n\"G]LFL[ RLINGPFTFVGWHXJX^W`VaTbQb\",\n\"I\\\\NMN[ RNOONQMTMVNWPW_VaTbRb\",\n\"G]PFTFVGXIYMYTXXVZT[P[NZLXKTKMLINGPF RM@W@\",\n\"H[P[NZMYLWLQMONNPMSMUNVOWQWWVYUZS[P[ RMGWG\",\n\"G]PFTFVGXIYMYTXXVZT[P[NZLXKTKMLINGPF RN>O@QASAU@V>\",\n\"H[P[NZMYLWLQMONNPMSMUNVOWQWWVYUZS[P[ RNEOGQHSHUGVE\",\n\"G]PFTFVGXIYMYTXXVZT[P[NZLXKTKMLINGPF RQ>NA RX>UA\",\n\"H[P[NZMYLWLQMONNPMSMUNVOWQWWVYUZS[P[ RQENH RXEUH\",\n\"E`RPYP RRFR[ R\\\\FNFLGJIIMITJXLZN[\\\\[\",\n\"C`[ZY[U[SZRXRPSNUMYM[N\\\\P\\\\RRT RRQQOPNNMKMINHOGQGWHYIZK[N[PZQYRW\",\n\"G\\\\X[QQ RL[LFTFVGWHXJXMWOVPTQLQ RT>QA\",\n\"KXP[PM RPQQORNTMVM RTEQH\",\n\"G\\\\X[QQ RL[LFTFVGWHXJXMWOVPTQLQ RR\\\\T]U_TaRbOb\",\n\"KXP[PM RPQQORNTMVM RR\\\\T]U_TaRbOb\",\n\"G\\\\X[QQ RL[LFTFVGWHXJXMWOVPTQLQ RN>RAV>\",\n\"KXP[PM RPQQORNTMVM RNERHVE\",\n\"H\\\\LZO[T[VZWYXWXUWSVRTQPPNOMNLLLJMHNGPFUFXG RT>QA\",\n\"J[NZP[T[VZWXWWVUTTQTOSNQNPONQMTMVN RTEQH\",\n\"H\\\\LZO[T[VZWYXWXUWSVRTQPPNOMNLLLJMHNGPFUFXG RNAR>VA\",\n\"J[NZP[T[VZWXWWVUTTQTOSNQNPONQMTMVN RNHREVH\",\n\"H\\\\LZO[T[VZWYXWXUWSVRTQPPNOMNLLLJMHNGPFUFXG RR\\\\T]U_TaRbOb\",\n\"J[NZP[T[VZWXWWVUTTQTOSNQNPONQMTMVN RR\\\\T]U_TaRbOb\",\n\"H\\\\LZO[T[VZWYXWXUWSVRTQPPNOMNLLLJMHNGPFUFXG RN>RAV>\",\n\"J[NZP[T[VZWXWWVUTTQTOSNQNPONQMTMVN RNERHVE\",\n\"JZLFXF RR[RF RR\\\\T]U_TaRbOb\",\n\"MYOMWM RRFRXSZU[W[ RR\\\\T]U_TaRbOb\",\n\"JZLFXF RR[RF RN>RAV>\",\n\"M[OMWM RYFXI RRFRXSZU[W[\",\n\"JZLFXF RR[RF RNQVQ\",\n\"MYOMWM RRFRXSZU[W[ ROSUS\",\n\"G]LFLWMYNZP[T[VZWYXWXF RMAN@P?TAV@W?\",\n\"H[VMV[ RMMMXNZP[S[UZVY RMHNGPFTHVGWF\",\n\"G]LFLWMYNZP[T[VZWYXWXF RM@W@\",\n\"H[VMV[ RMMMXNZP[S[UZVY RMGWG\",\n\"G]LFLWMYNZP[T[VZWYXWXF RN>O@QASAU@V>\",\n\"H[VMV[ RMMMXNZP[S[UZVY RNEOGQHSHUGVE\",\n\"G]LFLWMYNZP[T[VZWYXWXF RRAP@O>P<R;T<U>T@RA\",\n\"H[VMV[ RMMMXNZP[S[UZVY RRHPGOEPCRBTCUETGRH\",\n\"G]LFLWMYNZP[T[VZWYXWXF RQ>NA RX>UA\",\n\"H[VMV[ RMMMXNZP[S[UZVY RQENH RXEUH\",\n\"G]LFLWMYNZP[T[VZWYXWXF RR[P]O_PaRbTb\",\n\"H[VMV[ RMMMXNZP[S[UZVY RV[T]S_TaVbXb\",\n\"F^IFN[RLV[[F RNAR>VA\",\n\"G]JMN[RQV[ZM RNHREVH\",\n\"I[RQR[ RKFRQYF RNAR>VA\",\n\"JZMMR[ RWMR[P`OaMb RNHREVH\",\n\"JZLFXF RR[RF RN?O@NAM@N?NA RV?W@VAU@V?VA\",\n\"H\\\\KFYFK[Y[ RT>QA\",\n\"IZLMWML[W[ RTEQH\",\n\"H\\\\KFYFK[Y[ RR?Q@RAS@R?RA\",\n\"IZLMWML[W[ RRFQGRHSGRFRH\",\n\"H\\\\KFYFK[Y[ RN>RAV>\",\n\"IZLMWML[W[ RNERHVE\",\n\"MYR[RISGUFWF\",\n\"H[M[MF RMNOMSMUNVOWQWWVYUZS[O[MZ RJHRH\",\n\"C\\\\LFL[T[VZWYXWXTWRVQSPLP RFKFIGGIFSFUGVHWJWLVNUOSP\",\n\"G\\\\VFLFL[R[UZWXXVXSWQUORNLN\",\n\"H[WFMFM[ RMNOMSMUNVOWQWWVYUZS[O[MZ\",\n\"H]MFM[S[VZXXYVYSXQVOSNMN\",\n\"IZNMN[S[UZVXVUUSSRNR\",\n\"I^MHNGQFSFVGXIYKZOZRYVXXVZS[Q[NZMY\",\n\"F[WYVZS[Q[NZLXKVJRJOKKLINGQFSFVGWH RMHKGJEKCLB\",\n\"HZVZT[P[NZMYLWLQMONNPMTMVN RTMTIUGWFYF\",\n28,\n\"C\\\\FKFIGGIFQFTGVIWKXOXRWVVXTZQ[L[LF\",\n\"H]NFXFX[R[OZMXLVLSMQOORNXN\",\n\"I\\\\MFWFW[ RWNUMQMONNOMQMWNYOZQ[U[WZ\",\n\"I\\\\Q[T[VZWYXWXQWOVNTMQMONNOMQMWNYOZQ[T\\\\V]W_VaTbPbNa\",\n\"I\\\\WPPP RM[W[WFMF\",\n\"F^MHNGQFSFVGXIYKZOZRYVXXVZS[Q[NZLXKVJRZP\",\n\"G[PPTP RWGUFPFNGMHLJLLMNNOPPMQLRKTKWLYMZO[U[WZ\",\n\"HZTPMP RM[MFWF RM[M_LaJbHb\",\n\"MYOMWM RR[RISGUFWF RR[R_QaObMb\",\n\"F[VGTFQFNGLIKKJOJRKVLXNZQ[S[VZWYWRSR RMHKGJEKCLB\",\n\"I[KFU[U_TaRbPaO_O[YF\",\n\"D`I[IF RIOJNLMOMQNRPRXSZU[X[ZZ[Y\\\\W\\\\P[NZM\",\n\"MZRFRWSYTZV[X[\",\n\"MWR[RF RNPVP\",\n\"G_L[LF RX[OO RLRWGYF[G\\\\I\\\\K\",\n\"IZNMN[ RPSV[ RVMNU RNMNIOGQFSF\",\n\"MXU[SZRXRF RNOVO\",\n\"JZRMM[ RMFOFPGRMW[ RNLTH\",\n\"Ca\\\\F\\\\[ R\\\\XZZX[V[TZSYRWRF RRWQYPZN[L[JZIYHWHF\",\n\"G]L[LFX[XF RL[L_KaIbGb\",\n\"I\\\\NMN[ RNOONQMTMVNWPWb\",\n32,\n\"G]PFTFVGXIYMYTXXVZT[P[NZLXKTKMLINGPF RVGXFYDXBWA\",\n\"H[P[NZMYLWLQMONNPMSMUNVOWQWWVYUZS[P[ RUNWMXKWIVH\",\n\"DaSGQFMFKGIIHMHTIXKZM[Q[SZUXVTVMUISGUFYF[G\\\\I\\\\b\",\n\"E^RNPMMMKNJOIQIWJYKZM[P[RZSYTWTQSORNTMVMXNYPYb\",\n\"C\\\\LFL[ RFKFIGGIFTFVGWHXJXMWOVPTQLQ\",\n\"H[MMMb RMNOMSMUNVOWQWWVYUZS[O[MZ RRMRISGUFWF\",\n\"G\\\\LFL[ RQVXb RLKTKVLWMXOXRWTVUTVLV\",\n\"H\\\\XZU[P[NZMYLWLUMSNRPQTPVOWNXLXJWHVGTFOFLG\",\n\"IZVZT[P[NZMXMWNUPTSTUSVQVPUNSMPMNN\",\n\"H[W[L[SPLFWF\",\n\"JYWbUbSaR_RIQGOFMGLIMKOLQKRI\",\n\"MYOMWM RRFRXSZU[W[ RW[W_VaTbRb\",\n\"HZR[RF RKKKILGNFXF\",\n\"MYOMWM RWFUFSGRIRXSZU[W[\",\n\"JZLFXF RR[RF RR[R_SaUbWb\",\n\"G]LFLWMYNZP[T[VZWYXWXF RXFZE[CZAY@\",\n\"H[VMV[ RMMMXNZP[S[UZVY RVMXLYJXHWG\",\n\"F^ZFUFUJWKYMZPZUYXWZT[P[MZKXJUJPKMMKOJOFJF\",\n\"G]LFLWMYNZP[T[VZXXYVYIXGWF\",\n\"I`RQR[ RKFRQXGZF\\\\G]I]K\",\n\"J^MMR[ RMbOaP`R[VNXMZN[P[R\",\n\"H\\\\KFYFK[Y[ RNPVP\",\n\"IZLMWML[W[ RNTVT\",\n2,\n\"H\\\\YFLFSNPNNOMPLRLWMYNZP[V[XZYY\",\n\"JZWMNMUVRVPWOXNZN^O`PaRbUbWa\",\n\"JZMMVMOTSTUUVWVXUZS[Q[O\\\\N^N_OaQbVb\",\n\"H\\\\LHMGOFTFVGWHXJXLWOK[X[ RNSVS\",\n\"H\\\\WFMFLPMOONTNVOWPXRXWWYVZT[O[MZLY\",\n\"JZVMOMNSPRSRUSVUVXUZS[P[NZ\",\n\"J^MZP[T[WZYXZVZSYQWOTNPNPF RLITI\",\n\"H[MMMb RMONNPMTMVNWPWSVUM^\",\n\"MWRFRb\",\n\"JZOFOb RUFUb\",\n\"MWRFRb ROWUW ROQUQ\",\n\"MWRYSZR[QZRYR[ RRSQGRFSGRSRF\",\n\"GpL[LFQFTGVIWKXOXRWVVXTZQ[L[ R_FmF_[m[ Rb>fAj>\",\n\"GmL[LFQFTGVIWKXOXRWVVXTZQ[L[ R_MjM_[j[ RaEeHiE\",\n\"ImW[WF RWZU[Q[OZNYMWMQNOONQMUMWN R_MjM_[j[ RaEeHiE\",\n\"HiW[M[MF RdFdUcXaZ^[\\\\[\",\n\"HcW[M[MF R^M^_]a[bZb R^F]G^H_G^F^H\",\n\"MbU[SZRXRF R]M]_\\\\aZbYb R]F\\\\G]H^G]F]H\",\n\"GmL[LFX[XF RhFhUgXeZb[`[\",\n\"GgL[LFX[XF RbMb_aa_b^b RbFaGbHcGbFbH\",\n\"IfNMN[ RNOONQMTMVNWPW[ RaMa_`a^b]b RaF`GaHbGaFaH\",\n\"I[MUWU RK[RFY[ RN>RAV>\",\n\"I\\\\W[WPVNTMPMNN RWZU[P[NZMXMVNTPSUSWR RNERHVE\",\n\"MWR[RF RN>RAV>\",\n\"MWR[RM RNERHVE\",\n\"G]PFTFVGXIYMYTXXVZT[P[NZLXKTKMLINGPF RN>RAV>\",\n\"H[P[NZMYLWLQMONNPMSMUNVOWQWWVYUZS[P[ RNERHVE\",\n\"G]LFLWMYNZP[T[VZWYXWXF RN>RAV>\",\n\"H[VMV[ RMMMXNZP[S[UZVY RNERHVE\",\n\"G]LFLWMYNZP[T[VZWYXWXF RN?O@NAM@N?NA RV?W@VAU@V?VA RM;W;\",\n\"H[VMV[ RMMMXNZP[S[UZVY RNFOGNHMGNFNH RVFWGVHUGVFVH RM@W@\",\n\"G]LFLWMYNZP[T[VZWYXWXF RN?O@NAM@N?NA RV?W@VAU@V?VA RT9Q<\",\n\"H[VMV[ RMMMXNZP[S[UZVY RNFOGNHMGNFNH RVFWGVHUGVFVH RT>QA\",\n\"G]LFLWMYNZP[T[VZWYXWXF RN?O@NAM@N?NA RV?W@VAU@V?VA RN9R<V9\",\n\"H[VMV[ RMMMXNZP[S[UZVY RNFOGNHMGNFNH RVFWGVHUGVFVH RN>RAV>\",\n\"G]LFLWMYNZP[T[VZWYXWXF RN?O@NAM@N?NA RV?W@VAU@V?VA RP9S<\",\n\"H[VMV[ RMMMXNZP[S[UZVY RNFOGNHMGNFNH RVFWGVHUGVFVH RP>SA\",\n33,\n\"I[MUWU RK[RFY[ RN?O@NAM@N?NA RV?W@VAU@V?VA RM;W;\",\n\"I\\\\W[WPVNTMPMNN RWZU[P[NZMXMVNTPSUSWR RNFOGNHMGNFNH RVFWGVHUGVFVH RM@W@\",\n\"I[MUWU RK[RFY[ RR?Q@RAS@R?RA RM;W;\",\n\"I\\\\W[WPVNTMPMNN RWZU[P[NZMXMVNTPSUSWR RRFQGRHSGRFRH RM@W@\",\n\"F`JURU RRPYP RH[OF\\\\F RRFR[\\\\[ RO@Y@\",\n\"D`INKMOMQNRP R[ZY[U[SZRXRPSNUMYM[N\\\\P\\\\RRSKSITHVHXIZK[O[QZRX RMGWG\",\n\"F[VGTFQFNGLIKKJOJRKVLXNZQ[S[VZWYWRSR RSV[V\",\n\"I\\\\WMW^V`UaSbPbNa RWZU[Q[OZNYMWMQNOONQMUMWN RS^[^\",\n\"F[VGTFQFNGLIKKJOJRKVLXNZQ[S[VZWYWRSR RN>RAV>\",\n\"I\\\\WMW^V`UaSbPbNa RWZU[Q[OZNYMWMQNOONQMUMWN RNERHVE\",\n\"G\\\\L[LF RX[OO RXFLR RN>RAV>\",\n\"IZN[NF RPSV[ RVMNU RJANDRA\",\n\"G]R[P]O_PaRbTb RPFTFVGXIYMYTXXVZT[P[NZLXKTKMLINGPF\",\n\"H[R[P]O_PaRbTb RP[NZMYLWLQMONNPMSMUNVOWQWWVYUZS[P[\",\n\"G]R[P]O_PaRbTb RPFTFVGXIYMYTXXVZT[P[NZLXKTKMLINGPF RM@W@\",\n\"H[R[P]O_PaRbTb RP[NZMYLWLQMONNPMSMUNVOWQWWVYUZS[P[ RMGWG\",\n\"H\\\\KFXFQNTNVOWPXRXWWYVZT[N[LZKY RN>RAV>\",\n\"JZMMVMOVRVTWUXVZV^U`TaRbObMa RNERHVE\",\n\"MWRMR_QaObNb RNERHVE\",\n\"GpL[LFQFTGVIWKXOXRWVVXTZQ[L[ R_FmF_[m[\",\n\"GmL[LFQFTGVIWKXOXRWVVXTZQ[L[ R_MjM_[j[\",\n\"ImW[WF RWZU[Q[OZNYMWMQNOONQMUMWN R_MjM_[j[\",\n\"F[VGTFQFNGLIKKJOJRKVLXNZQ[S[VZWYWRSR RT>QA\",\n\"I\\\\WMW^V`UaSbPbNa RWZU[Q[OZNYMWMQNOONQMUMWN RTEQH\",\n\"CaH[HF RHPTP RTFTXUZW[Z[\\\\Z]X]M\",\n\"G\\\\LFLb RLINGPFTFVGWHXJXOWRUUL^\",\n\"G]L[LFX[XF RP>SA\",\n\"I\\\\NMN[ RNOONQMTMVNWPW[ RPESH\",\n\"I[MUWU RK[RFY[ RZ9X< RR;P<O>P@RAT@U>T<R;\",\n\"I\\\\W[WPVNTMPMNN RWZU[P[NZMXMVNTPSUSWR RZ@XC RRBPCOEPGRHTGUETCRB\",\n\"F`JURU RRPYP RH[OF\\\\F RRFR[\\\\[ RV>SA\",\n\"D`INKMOMQNRP R[ZY[U[SZRXRPSNUMYM[N\\\\P\\\\RRSKSITHVHXIZK[O[QZRX RTEQH\",\n\"G]ZFJ[ RP[NZLXKTKMLINGPFTFVGXIYMYTXXVZT[P[ RT>QA\",\n\"H[XMK[ RP[NZMYLWLQMONNPMSMUNVOWQWWVYUZS[P[ RTEQH\",\n\"I[MUWU RK[RFY[ ROAL> RVAS>\",\n\"I\\\\W[WPVNTMPMNN RWZU[P[NZMXMVNTPSUSWR ROHLE RVHSE\",\n\"I[MUWU RK[RFY[ RNAO?Q>S>U?VA\",\n\"I\\\\W[WPVNTMPMNN RWZU[P[NZMXMVNTPSUSWR RNHOFQESEUFVH\",\n\"H[MPTP RW[M[MFWF ROAL> RVAS>\",\n\"I[VZT[P[NZMXMPNNPMTMVNWPWRMT ROHLE RVHSE\",\n\"H[MPTP RW[M[MFWF RNAO?Q>S>U?VA\",\n\"I[VZT[P[NZMXMPNNPMTMVNWPWRMT RNHOFQESEUFVH\",\n\"MWR[RF ROAL> RVAS>\",\n\"MWR[RM ROHLE RVHSE\",\n\"MWR[RF RNAO?Q>S>U?VA\",\n\"MWR[RM RNHOFQESEUFVH\",\n\"G]PFTFVGXIYMYTXXVZT[P[NZLXKTKMLINGPF ROAL> RVAS>\",\n\"H[P[NZMYLWLQMONNPMSMUNVOWQWWVYUZS[P[ ROHLE RVHSE\",\n\"G]PFTFVGXIYMYTXXVZT[P[NZLXKTKMLINGPF RNAO?Q>S>U?VA\",\n\"H[P[NZMYLWLQMONNPMSMUNVOWQWWVYUZS[P[ RNHOFQESEUFVH\",\n\"G\\\\X[QQ RL[LFTFVGWHXJXMWOVPTQLQ ROAL> RVAS>\",\n\"KXP[PM RPQQORNTMVM RPHME RWHTE\",\n\"G\\\\X[QQ RL[LFTFVGWHXJXMWOVPTQLQ RNAO?Q>S>U?VA\",\n\"KXP[PM RPQQORNTMVM ROHPFRETEVFWH\",\n\"G]LFLWMYNZP[T[VZWYXWXF ROAL> RVAS>\",\n\"H[VMV[ RMMMXNZP[S[UZVY ROHLE RVHSE\",\n\"G]LFLWMYNZP[T[VZWYXWXF RNAO?Q>S>U?VA\",\n\"H[VMV[ RMMMXNZP[S[UZVY RNHOFQESEUFVH\",\n\"H\\\\LZO[T[VZWYXWXUWSVRTQPPNOMNLLLJMHNGPFUFXG RS`SaRcQd\",\n\"J[NZP[T[VZWXWWVUTTQTOSNQNPONQMTMVN RS`SaRcQd\",\n\"JZLFXF RR[RF RS`SaRcQd\",\n\"MYOMWM RRFRXSZU[W[ RU`UaTcSd\",\n\"I]VRXTYVY[X]V_T`Lb RLHMGOFUFWGXHYJYNXPVRTSNU\",\n\"J[UWVXWZW]V_U`SaMb RMNOMSMUNVOWQWTVVUWSXOY\",\n\"G]L[LF RLPXP RX[XF RN>RAV>\",\n\"H[M[MF RV[VPUNSMPMNNMO RI>MAQ>\",\n\"G]L[LFX[XF RX[Xb\",\n\"IbWFWXXZZ[\\\\[^Z_X^V\\\\UZVV^ RWNUMQMONNOMQMWNYOZQ[T[VZWX\",\n\"G]NFLGKIKKLMMNOO RVFXGYIYKXMWNUO ROOUOWPXQYSYWXYWZU[O[MZLYKWKSLQMPOO\",\n\"J[MJMMNORQVOWMWJ RPQTQVRWTWXVZT[P[NZMXMTNRPQ\",\n\"H\\\\KFYFK[Y[ RY[Y_XaVbTb\",\n\"IZLMWML[W[ RW[W_VaTbRb\",\n\"I[MUWU RK[RFY[ RR?Q@RAS@R?RA\",\n\"I\\\\W[WPVNTMPMNN RWZU[P[NZMXMVNTPSUSWR RRFQGRHSGRFRH\",\n\"H[MPTP RW[M[MFWF RR\\\\T]U_TaRbOb\",\n\"I[VZT[P[NZMXMPNNPMTMVNWPWRMT RR\\\\T]U_TaRbOb\",\n\"G]PFTFVGXIYMYTXXVZT[P[NZLXKTKMLINGPF RN?O@NAM@N?NA RV?W@VAU@V?VA RM;W;\",\n\"H[P[NZMYLWLQMONNPMSMUNVOWQWWVYUZS[P[ RNFOGNHMGNFNH RVFWGVHUGVFVH RM@W@\",\n\"G]PFTFVGXIYMYTXXVZT[P[NZLXKTKMLINGPF RMAN@P?TAV@W? RM;W;\",\n\"H[P[NZMYLWLQMONNPMSMUNVOWQWWVYUZS[P[ RMHNGPFTHVGWF RM@W@\",\n\"G]PFTFVGXIYMYTXXVZT[P[NZLXKTKMLINGPF RR?Q@RAS@R?RA\",\n\"H[P[NZMYLWLQMONNPMSMUNVOWQWWVYUZS[P[ RRFQGRHSGRFRH\",\n\"G]PFTFVGXIYMYTXXVZT[P[NZLXKTKMLINGPF RR?Q@RAS@R?RA RM;W;\",\n\"H[P[NZMYLWLQMONNPMSMUNVOWQWWVYUZS[P[ RRFQGRHSGRFRH RM@W@\",\n\"I[RQR[ RKFRQYF RM@W@\",\n\"JZMMR[ RWMR[P`OaMb RMGWG\",\n\"M]RFRXSZU[W[YZZXYVWUUVQ^\",\n\"IbNMN[ RNOONQMTMVNWPWXXZZ[\\\\[^Z_X^V\\\\UZVV^\",\n\"M]OMWM RRFRXSZU[W[YZZXYVWUUVQ^\",\n\"MWRMR_QaObNb\",\n\"D`R[RF RRZP[L[JZIYHWHQIOJNLMPMRN RTMXMZN[O\\\\Q\\\\W[YZZX[T[RZ\",\n\"D`RMRb RRZP[L[JZIYHWHQIOJNLMPMRN RTMXMZN[O\\\\Q\\\\W[YZZX[T[RZ\",\n\"I[MUWU RK[RFY[ RXCL`\",\n\"F[WYVZS[Q[NZLXKVJRJOKKLINGQFSFVGWH RXCL`\",\n\"HZVZT[P[NZMYLWLQMONNPMTMVN RWHM`\",\n\"HYW[M[MF RIOQO\",\n\"JZLFXF RR[RF RXCL`\",\n\"J[P[R^T_W_ RNZP[T[VZWXWWVUTTQTOSNQNPONQMTMVN\",\n\"IZLMWML[N[P\\\\R^T_W_\",\n\"J^MGPFTFWGYIZKZNYPWRTSPSP[\",\n\"J^NNPMTMVNWOXQXSWUVVTWPWP[\",\n\"G\\\\SPVQWRXTXWWYVZT[L[LFSFUGVHWJWLVNUOSPLP RIUOU\",\n\"G]IM[M RLFLWMYNZP[T[VZWYXWXF\",\n\"I[Y[RFK[\",\n\"H[MPTP RW[M[MFWF RXCL`\",\n\"I[VZT[P[NZMXMPNNPMTMVNWPWRMT RWHM`\",\n\"JZUFUUTXRZO[M[ RQPYP\",\n\"MWRMR_QaObNb ROTUT RRFQGRHSGRFRH\",\n\"G]XFX^Y`Za\\\\b^b RXIVGTFPFNGLIKMKTLXNZP[T[VZXX\",\n\"I\\\\WMW^X`Ya[b]b RWZU[Q[OZNYMWMQNOONQMUMWN\",\n\"G\\\\X[QQ RL[LFTFVGWHXJXMWOVPTQLQ RIQOQ\",\n\"KXP[PM RPQQORNTMVM RMTUT\",\n\"I[KIYI RRQR[ RKFRQYF\",\n\"JZLQXQ RMMR[ RWMR[P`OaMb\",\n\"H[MMMXNZP[T[VZ RMNOMTMVNWPWRVTTUOUMV\",\n34,\n\"G\\\\K[NQOOPNRMTMVNWOXRXVWYVZT[R[PZOYNWMPLNJM\",\n\"H[RFPFNGMIM[ RMNOMSMUNVOWQWWVYUZS[O[MZ\",\n\"J\\\\NNPMTMVNWOXQXWWYVZT[P[NZ\",\n\"HZVNTMPMNNMOLQLWMYNZP[S[UZVXUVSUQVM^\",\n\"I\\\\W[WF RWZU[Q[OZNYMWMQNOONQMUMWN RW[W_XaZb\\\\b\",\n\"I\\\\\\\\FZFXGWIW[ RWZU[Q[OZNYMWMQNOONQMUMWN\",\n\"I[NZP[T[VZWXWPVNTMPMNNMPMRWT\",\n33,\n\"IbNNPMTMVNWPWXVZT[P[NZMXMV\\\\S\\\\U]W_X`X\",\n35,\n\"J[TTVSWQWPVNTMPMNN RRTTTVUWWWXVZT[P[NZ\",\n\"JaRTTTVUWWWXVZT[P[NZ RNNPMTMVNWPWQVSTT[S[U\\\\W^X_X\",\n\"H[TTVSWQWPVNTMPMNNMOLRLVMYNZP[T[VZWXWWVUTTRT\",\n\"MWRMR_QaObNb ROTUT\",\n\"I\\\\WMW^V`UaSbPbNa RWZU[Q[OZNYMWMQNOONQMUMWN RWMWIXGZF\\\\F\",\n\"I\\\\WYVZT[P[NZMXMQNOONQMWMW^V`UaSbMb\",\n\"HZUNSMPMNNMOLQLWMYNZP[T[VZVUSU\",\n\"JZMMU[U_TaRbPaO_O[WM\",\n\"JZMMTVUXTZR[PZOXPVWM\",\n\"I\\\\WMWb RNMNXOZQ[T[VZWY\",\n\"H[RFPFNGMIM[ RV[VPUNSMPMNNMO\",\n\"H[RFPFNGMIM[ RV[VPUNSMPMNNMO RV[V_UaSbQb\",\n\"MWR[RM ROTUT RRFQGRHSGRFRH\",\n36,\n\"MWR[RM RU[O[ RUMOM\",\n\"MXU[SZRXRF RMONNPMTOVNWM\",\n\"IYU[SZRXRF RRQQOONMOLQMSOTWT\",\n\"MXRFR_SaUbWb\",\n\"GZLFLXMZO[ RLMVMOVRVTWUXVZV^U`TaRbObMa\",\n\"D`[M[[ R[YZZX[U[SZRXRM RRXQZO[L[JZIXIM\",\n\"D`[M[[ R[YZZX[U[SZRXRM RRXQZO[L[JZIXIM R[[[b\",\n\"D`I[IM RIOJNLMOMQNRPR[ RRPSNUMXMZN[P[[ R[[[_ZaXbVb\",\n\"I\\\\NMN[ RNOONQMTMVNWPW[ RN[N_MaKbIb\",\n\"I\\\\NMN[ RNOONQMTMVNWPW[ RW[W_XaZb\\\\b\",\n\"H[M[MMV[VM\",\n37,\n\"E]RTXT RRMR[ RZMMMKNJOIQIWJYKZM[Z[\",\n\"G]RTRXSZU[V[XZYXYQXOWNUMOMMNLOKQKXLZN[O[QZRX\",\n38,\n\"LYTMT[ RTWSYRZP[N[\",\n\"LYTMT[ RTWSYRZP[N[ RTMTF\",\n\"LYTMT[ RTWSYRZP[N[ RT[T_UaWbYb\",\n\"KXP[PM RPQQORNTMVM RP[Pb\",\n\"KXP[PM RPQQORNTMVM RP[P_QaSbUb\",\n\"KXM[S[ RVMTMRNQOPRP[\",\n\"LYW[Q[ RNMPMRNSOTRT[\",\n\"I[RUW[ RN[NMTMVNWPWRVTTUNU\",\n\"I[RSWM RNMN[T[VZWXWVVTTSNS\",\n\"J[NZP[T[VZWXWWVUTTQTOSNQNPONQMTMVN RN[N_OaQbSb\",\n\"KYWFUFSGRIR_QaObMb\",\n\"MWRMR_QaObNb ROTUT RRMRISGUFWF\",\n\"KYMFOFQGRIRXSZU[W[\",\n\"KYWFUFSGRIR_QaObMaL_M]O\\\\V\\\\\",\n\"KWU[M[ RRbRPQNOMMM\",\n\"MYOMWM RRFR_SaUbWb\",\n\"H[JRYR RVMV[ RMMMXNZP[S[UZVY\",\n\"I\\\\XMUMUPWRXTXWWYVZT[Q[OZNYMWMTNRPPPMMM\",\n\"H[MMMXNZP[S[UZVYWWWPVNUM\",\n\"JZW[RMM[\",\n\"G]Z[VMRWNMJ[\",\n\"JZW[RM RM[RMTHUGWF\",\n\"KYRTR[ RMMRTWM\",\n\"IZLMWML[W[ RW[W_XaZb\\\\b\",\n\"IZLMWML[T[VZWXVVTURVN^\",\n\"JZMMVMOVRVTWUXVZV^U`TaRbObMa\",\n\"JZMMVMOVRVTWUXVZV^U`TaRbPbNaM_N]P\\\\R]Uc\",\n\"J^MGPFTFWGYIZKZNYPWRTSPSP[\",\n\"FZWGTFPFMGKIJKJNKPMRPSTST[\",\n\"J^MZP[T[WZYXZVZSYQWOTNPNPF\",\n\"F[WHVGSFQFNGLIKKJOJYK]L_NaQbSbVaW`\",\n\"G]PFTFVGXIYMYTXXVZT[P[NZLXKTKMLINGPF RROQPRQSPRORQ\",\n\"I[STVUWWWXVZT[N[NMSMUNVPVQUSSTNT\",\n\"I\\\\PTNUMWMXNZP[T[VZWYXVXRWOVNTMPMNNMPMQNSPTRT\",\n\"HZUNSMPMNNMOLQLWMYNZP[T[VZVUSU RUMUIVGXFZF\",\n\"H[MTVT RMMM[ RVMV[\",\n\"LXRMR_QaObMaL_M]O\\\\V\\\\ RRFQGRHSGRFRH\",\n\"J[VMVb RTUNM RN[VS\",\n\"JYOMO[V[\",\n\"I\\\\WMWb RWZU[Q[OZNYMWMQNOONQMUMWN RWMWIXGZF\\\\F\",\n\"J^MGPFTFWGYIZKZNYPWRTSPSP[ RLXTX\",\n\"FZWGTFPFMGKIJKJNKPMRPSTST[ RPXXX\",\n\"D`R[RF RRM]MR[][ RRZP[L[JZIYHWHQIOJNLMPMRN\",\n\"E`RFR[ RRNPMMMKNJOIQIWJYKZM[P[RZ RRM\\\\MUVXVZW[X\\\\Z\\\\^[`ZaXbUbSa\",\n\"D`R[RF RRM]MR[Z[\\\\Z]X\\\\VZUXVT^ RRZP[L[JZIYHWHQIOJNLMPMRN\",\n\"G^IMQM RLFLXMZO[QZS[W[YZZXZWYUWTTTRSQQQPRNTMWMYN\",\n\"I[KMTM RNFNXOZQ[T[ RYFWFUGTIT_SaQbOb\",\n\"F^HMPM RKFKXLZN[P[RZ RZNXMTMRNQOPQPWQYRZT[W[YZZXYVWUUVQ^\",\n\"F]HMPMP[ RK[KILGNFPF RPOQNSMVMXNYPY_XaVbTb\",\n\"G^LFLXMZO[QZS[W[YZZXZWYUWTTTRSQQQPRNTMWMYN\",\n\"H^MM[MP[ RMFMXNZP[[[\",\n\"G]JSN[RUV[ZS RJFNNRHVNZF\",\n\"G]XXXSLSLX RXKXFLFLK\",\n\"I\\\\WMWb RNMNXOZQ[T[VZWY RNMNIMGKFIF\",\n\"I\\\\\\\\bZbXaW_WM RNMNXOZQ[T[VZWY RNMNIMGKFIF\",\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n\"H[MFM[ RXPMP\",\n\"IZNTVT RNMN[\",\n\"G]R[RF RKOKFYFYO\",\n\"I[R[RF RMOMFWFWO\",\n\"MWSFQJ\",\n\"MWS[Q_\",\n\"G]LFL[XFX[\",\n\"H\\\\MMM[WMW[\",\n23,\n23,\n\"NVR`RcSdTd\",\n\"J\\\\NZP[T[VZWYXWXQWOVNTMPMNN\",\n\"HZVZT[P[NZMYLWLQMONNPMTMVN RRSQTRUSTRSRU\",\n\"J\\\\NZP[T[VZWYXWXQWOVNTMPMNN RRSQTRUSTRSRU\",\n\"MWSZS[R]Q^ RRNSORPQORNRP\",\n23,\n23,\n23,\n23,\n23,\n25,\n\"LXNFOGNHMGNFNH RVFWGVHUGVFVH RT>QA\",\n\"G[MUWU RK[RFY[ RMEJH\",\n26,\n\"B[MPTP RW[M[MFWF RHEEH\",\n\"A]L[LF RLPXP RX[XF RGEDH\",\n\"GWR[RF RMEJH\",\n24,\n\"B]PFTFVGXIYMYTXXVZT[P[NZLXKTKMLINGPF RHEEH\",\n24,\n\"@[RQR[ RKFRQYF RFECH\",\n\"@^J[O[OWMVKTJQJLKIMGPFTFWGYIZLZQYTWVUWU[Z[ RFECH\",\n\"MXRMRXSZU[ RNFOGNHMGNFNH RVFWGVHUGVFVH RT>QA\",\n3,\n4,\n\"HZM[MFXF\",\n\"I[K[RFY[K[\",\n6,\n\"H\\\\KFYFK[Y[\",\n7,\n\"F^OPUP RPFTFVGXIYKZNZSYVXXVZT[P[NZLXKVJSJNKKLINGPF\",\n8,\n9,\n\"I[K[RFY[\",\n10,\n\"G]L[LFX[XF\",\n\"H[L[W[ RLFWF RUPNP\",\n11,\n\"G]L[LFXFX[\",\n12,\n24,\n\"H[W[L[SPLFWF\",\n13,\n15,\n\"G]R[RF RPITIWJYLZNZRYTWVTWPWMVKTJRJNKLMJPI\",\n14,\n\"G]R[RF RHFJGKIKNLQMROSUSWRXQYNYIZG\\\\F\",\n\"F^J[O[OWMVKTJQJLKIMGPFTFWGYIZLZQYTWVUWU[Z[\",\n27,\n\"I[RQR[ RKFRQYF RN?O@NAM@N?NA RV?W@VAU@V?VA\",\n39,\n40,\n41,\n42,\n\"H[MMMXNZP[S[UZVYWWWPVNUM RNFOGNHMGNFNH RVFWGVHUGVFVH RT>QA\",\n34,\n\"H[SOUPVQWSWWVYUZS[P[NZMY RKbLaM_MINGPFSFUGVIVLUNSOQO\",\n\"JZRYRb RLMMMNNRYWM\",\n\"H[SMPMNNMOLQLWMYNZP[S[UZVYWWWQVOUNSMPLNKMINGPFTFVG\",\n35,\n\"HZMFWFPMNPMSMWNYOZQ[S[U\\\\V^V_UaSbRb\",\n\"I\\\\NMN[ RNOONQMTMVNWPWb\",\n\"H[LPWP RPFSFUGVHWKWVVYUZS[P[NZMYLVLKMHNGPF\",\n36,\n31,\n\"JZRMM[ RMFOFPGRMW[\",\n\"H^MMMb RWXXZZ[ RMXNZP[T[VZWXWM\",\n\"J[MMR[WPWOVM\",\n\"HZMFWF RQFOGNINLONQOUO RQOOPNQMSMWNYOZQ[S[U\\\\V^V_UaSbRb\",\n19,\n\"F]VMV[ ROMOXNZL[ RZMMMKNJP\",\n\"H\\\\MbMQNOONQMTMVNWOXQXWWYVZT[Q[OZMX\",\n\"HZVNTMPMNNMOLQLWMYNZP[S[U\\\\V^V_UaSb\",\n\"H\\\\YMPMNNMOLQLWMYNZP[S[UZVYWWWQVOUNSM\",\n\"H\\\\LPMNOMXM RRMRXSZU[\",\n\"H[MMMXNZP[S[UZVYWWWPVNUM\",\n\"G]MMLNKPKVLXNZP[T[VZXXYVYPXNVMUMSNRPRb\",\n\"IZWMLb RLMNNOPT_UaWb\",\n\"G]RMRb RKMKVLXNZP[T[VZXXYVYM\",\n43,\n\"LXNFOGNHMGNFNH RVFWGVHUGVFVH RRMRXSZU[\",\n\"H[MMMXNZP[S[UZVYWWWPVNUM RNFOGNHMGNFNH RVFWGVHUGVFVH\",\n29,\n44,\n45,\n\"G\\\\L[LF RXFLR ROOX[Qb\",\n\"H[SOUPVQWSWWVYUZS[P[NZMXMINGPFSFUGVIVLUNSOQO\",\n\"H[JPKQLSLVMYNZP[S[UZVYWVWKVHUGSFPFNGMHLJLLMNNOPPWP\",\n\"I\\\\KFMFOGQIRKR[ RRKSHTGVFWFYGZI\",\n\"NiTEQH RXFZF\\\\G^I_K_[ R_K`HaGcFdFfGgI\",\n\"I\\\\KFMFOGQIRKR[ RRKSHTGVFWFYGZI RN?O@NAM@N?NA RV?W@VAU@V?VA\",\n38,\n\"F^RTRX R[MIM RMMLNKPKXLZN[O[QZRXSZU[V[XZYXYPXNWM\",\n\"IZLMNNOPOXNZM[LZLXMVVRWPWNVMUNTPTXUZW[V^U`TaRb\",\n\"G]R[Rb RPFTFVGXIYMYTXXVZT[P[NZLXKTKMLINGPF\",\n\"H[R[Rb RP[NZMYLWLQMONNPMSMUNVOWQWWVYUZS[P[\",\n\"FZWFQFNGLIKKJOJRKVLXNZQ[R[T\\\\U^U_TaSbQb\",\n\"HZVMPMNNMOLQLWMYNZP[R[T\\\\U^U_TaRbPb\",\n\"HZTPMP RM[MFWF\",\n\"MZVPRP RWFUFSGRIR_QaOb\",\n\"H\\\\MFOGPILSXNTXUZW[\",\n\"I[RFMPWPR[\",\n\"H\\\\NGNL RXIULTNTW RKIMGPFTFVGXIYKZOZUYYX[\",\n\"H\\\\L[UR RR[WV RLMPNSPURWVXZXb\",\n\"CaRWRR R\\\\XY]V`SaMa RLFJGHIGLGUHXJZL[N[PZQYRWSYTZV[X[ZZ\\\\X]U]L\\\\IZGXF\",\n\"G]RTRX RXZW\\\\S`PaOa RMMLNKPKXLZN[O[QZRXSZU[V[XZYXYPXNWM\",\n\"G]XFXb RPFNGLIKMKTLXNZP[T[VZXX\",\n\"I\\\\WMWb RQMONNOMQMWNYOZQ[T[VZWY\",\n\"F]KFK[ RKQMOPNTNVOXQYTYWXZW\\\\U^R`Nb\",\n\"I[WLWMVPTRRSPSNRMPMONMPLRLTMVPWSWWVYUZS[M[\",\n\"F]KHLGOFTFWGXHYJYLXOVQJ[N^Q_V_Y^\",\n\"J[NNPMTMVNWPWRVTTVN[P]R^U^W]\",\n\"G]I[[[ RIFJFLGXZZ[ R[FZFXGLZJ[\",\n\"H[KMMNVZX[K[MZVNXM\",\n\"G\\\\XEVFOFMGLHKJKWLYMZO[T[VZWYXWXPWNVMTLNLLMKN\",\n\"H[WEVFTGPGNHMILKLWMYNZP[S[UZVYWWWQVOUNSMOMMNLO\",\n\"G]RFRb RKQKMYMYQ\",\n\"I[MMWM RRFRb\",\n\"IZLMNNOPOXNZM[LZLXMVVRWPWNVMUNTPTXUZW[\",\n\"H\\\\WbQbOaN`M^MQNOONQMTMVNWOXQXWWYVZT[Q[OZMX\",\n17,\n18,\n32,\n\"HZLTST RVZT[P[NZMYLWLQMONNPMTMVN\",\n\"J\\\\XTQT RNZP[T[VZWYXWXQWOVNTMPMNN\",\n\"G\\\\LFL[ RLKTKVLWMXOXRWTVUTVLV\",\n\"H[MFMb RMNOMSMUNVOWQWWVYUZS[O[MZ\",\n5,\n\"F^K[KFRMYFY[\",\n\"G]LbLMRSXMX[\",\n\"G\\\\J`S` RMbMQNOONQMTMVNWOXQXWWYVZT[Q[OZMX\",\n\"I^MYNZQ[S[VZXXYVZRZOYKXIVGSFQFNGMH\",\n\"F[WYVZS[Q[NZLXKVJRJOKKLINGQFSFVGWH RROQPRQSPRORQ\",\n\"I^MYNZQ[S[VZXXYVZRZOYKXIVGSFQFNGMH RROQPRQSPRORQ\",\n\"H[MPTP RW[M[MFWF RP>SA\",\n\"H[MPTP RW[M[MFWF RN?O@NAM@N?NA RV?W@VAU@V?VA\",\n\"JbLFXF RR[RF RRMXM[N]P^S^\\\\]_[aXbVb\",\n\"HZM[MFXF RT>QA\",\n\"F[JPTP RWYVZS[Q[NZLXKVJRJOKKLINGQFSFVGWH\",\n\"H\\\\LZO[T[VZWYXWXUWSVRTQPPNOMNLLLJMHNGPFUFXG\",\n8,\n27,\n\"JZUFUUTXRZO[M[\",\n\"AbC[D[FZGXILJILGOFRFR[X[[Z]X^V^S]Q[OXNRN\",\n\"AbF[FF RRFR[X[[Z]X^V^S]Q[OXNFN\",\n\"JbLFXF RR[RF RRMXM[N]P^S^[\",\n\"G\\\\L[LF RX[OO RXFLR RT>QA\",\n\"G]LFL[XFX[ RP>SA\",\n\"G[KFRT RYFPXNZL[K[ RN>O@QASAU@V>\",\n\"G]R[R` RLFL[X[XF\",\n3,\n\"G\\\\VFLFL[R[UZWXXVXSWQUORNLN\",\n4,\n\"HZM[MFXF\",\n\"F^[`[[I[I` RW[WFRFPGOHNJL[\",\n6,\n\"BbOOF[ RR[RF RRRFF R^[UO R^FRR\",\n\"I]PPTP RMGOFTFVGWHXJXLWNVOTPWQXRYTYWXYWZU[O[MZ\",\n\"G]LFL[XFX[\",\n\"G]LFL[XFX[ RN>O@QASAU@V>\",\n9,\n\"F\\\\W[WFTFQGOINLLXKZI[H[\",\n10,\n7,\n11,\n\"G]L[LFXFX[\",\n12,\n5,\n13,\n\"G[KFRT RYFPXNZL[K[\",\n\"G]R[RF RPITIWJYLZNZRYTWVTWPWMVKTJRJNKLMJPI\",\n14,\n\"G]XFX[ RLFL[Z[Z`\",\n\"H\\\\WFW[ RLFLNMPNQPRWR\",\n\"CaRFR[ RHFH[\\\\[\\\\F\",\n\"CaRFR[ RHFH[\\\\[\\\\F R\\\\[^[^`\",\n\"F]HFMFM[S[VZXXYVYSXQVOSNMN\",\n\"Da\\\\F\\\\[ RIFI[O[RZTXUVUSTQROONIN\",\n\"H]MFM[S[VZXXYVYSXQVOSNMN\",\n\"I^ZQPQ RMHNGQFSFVGXIYKZOZRYVXXVZS[Q[NZMY\",\n\"CaHFH[ ROPHP RTFXFZG\\\\I]M]T\\\\XZZX[T[RZPXOTOMPIRGTF\",\n\"G\\\\RQK[ RW[WFOFMGLHKJKMLOMPOQWQ\",\n\"I\\\\W[WPVNTMPMNN RWZU[P[NZMXMVNTPSUSWR\",\n\"H[WEVFTGPGNHMILKLWMYNZP[S[UZVYWWWQVOUNSMOMMNLO\",\n\"I[STVUWWWXVZT[N[NMSMUNVPVQUSSTNT\",\n\"JYO[OMWM\",\n\"H[WOVNTMPMNNMOLQLWMYNZP[S[UZVYWWWJVHUGSFOFMG\",\n\"I[VZT[P[NZMXMPNNPMTMVNWPWRMT\",\n\"F^QTJ[ RRUJM RRMR[ RZ[ST RZMRU\",\n\"K[RTTT RNNPMTMVNWPWQVSTTVUWWWXVZT[P[NZ\",\n\"H\\\\MMM[WMW[\",\n\"H\\\\MMM[WMW[ RNEOGQHSHUGVE\",\n31,\n\"I[V[VMSMQNPPOXNZL[\",\n\"G]L[LMRXXMX[\",\n\"H[MTVT RMMM[ RVMV[\",\n19,\n\"H[M[MMVMV[\",\n\"H[MMMb RMNOMSMUNVOWQWWVYUZS[O[MZ\",\n17,\n\"KYMMWM RRMR[\",\n\"JZMMR[ RWMR[P`OaMb\",\n38,\n\"IZL[WM RLMW[\",\n\"I\\\\WMW[ RNMN[Y[Y`\",\n\"J\\\\VMV[ RNMNROTQUVU\",\n\"F^RMR[ RKMK[Y[YM\",\n\"F^RMR[ RKMK[Y[YM RY[[[[`\",\n\"HZJMNMN[S[UZVXVUUSSRNR\",\n\"F^YMY[ RKMK[P[RZSXSURSPRKR\",\n\"IZNMN[S[UZVXVUUSSRNR\",\n\"J\\\\XTQT RNNPMTMVNWOXQXWWYVZT[P[NZ\",\n\"E_JTPT RJMJ[ RT[RZQYPWPQQORNTMWMYNZO[Q[WZYYZW[T[\",\n\"I[RUM[ RV[VMPMNNMPMRNTPUVU\",\n\"I[VZT[P[NZMXMPNNPMTMVNWPWRMT RPESH\",\n\"I[VZT[P[NZMXMPNNPMTMVNWPWRMT RNFOGNHMGNFNH RVFWGVHUGVFVH\",\n\"M^OKXK RRFR[ RRSSRUQWQYRZTZ[Y^WaVb\",\n\"JYO[OMWM RTEQH\",\n\"HZLTST RVZT[P[NZMYLWLQMONNPMTMVN\",\n\"J[NZP[T[VZWXWWVUTTQTOSNQNPONQMTMVN\",\n\"MWR[RM RRFQGRHSGRFRH\",\n\"LXNFOGNHMGNFNH RVFWGVHUGVFVH RR[RM\",\n18,\n\"E^H[JZKXLPMNOMRMR[W[YZZXZUYSWRRR\",\n\"D^IMI[ RRMR[W[YZZXZVYTWSIS\",\n\"M^OKXK RRFR[ RRSSRUQWQYRZTZ[\",\n\"IZNMN[ RPSV[ RVMNU RTEQH\",\n\"H\\\\MMM[WMW[ RPESH\",\n\"JZMMR[ RWMR[P`OaMb RNEOGQHSHUGVE\",\n\"H]R[R` RMMM[W[WM\",\n\"CaRWRR RLFJGHIGLGUHXJZL[N[PZQYRWSYTZV[X[ZZ\\\\X]U]L\\\\IZGXF\",\n43,\n\"F]IIVI RMFM[S[VZXXYVYSXQVOSNMN\",\n\"HZJMTM RNFN[S[UZVXVUUSSRNR\",\n\"D`IFI[ RYPIP R\\\\Y[ZX[V[SZQXPVOROOPKQISGVFXF[G\\\\H\",\n\"F^KMK[ RWTKT RZZX[T[RZQYPWPQQORNTMXMZN\",\n\"F^LSXS RRSR[ RH[RF\\\\[\",\n\"I[NUVU RRUR[ RK[RMY[\",\n\"AbF[FF RFS\\\\S RVSV[ RL[VF`[\",\n\"E_J[JM RVUV[ RZUJU RO[VM][\",\n\"E_R[RPJFZFRP RI[IVJSLQOPUPXQZS[V[[\",\n\"G]R[RTLMXMRT RK[KXLVMUOTUTWUXVYXY[\",\n\"AcF[FF RFPSP RV[VPNF^FVP RM[MVNSPQSPYP\\\\Q^S_V_[\",\n\"DaI[IM RITST RV[VTPM\\\\MVT RO[OXPVQUSTYT[U\\\\V]X][\",\n\"H\\\\OPSP RNAQFSBTAUA RLGNFSFUGVHWJWLVNUOSPVQWRXTXWWYVZT[O[M\\\\L^L_MaObWb\",\n\"J[RTTT ROHRMTIUHVH RNNPMTMVNWPWQVSTTVUWWWXVZT[Q[O\\\\N^N_OaQbVb\",\n\"G]R[RF RHFJGKIKNLQMROSUSWRXQYNYIZG\\\\F\",\n\"G]RMRb RKMKVLXNZP[T[VZXXYVYM\",\n32,\n37,\n\"I[KFR[YF\",\n20,\n\"I[KFR[YF ROAL> RVAS>\",\n\"JZMMR[WM ROHLE RVHSE\",\n\"GmPFTFVGXIYMYTXXVZT[P[NZLXKTKMLINGPF R`Me[ RjMe[c`ba`b\",\n\"HkP[NZMYLWLQMONNPMSMUNVOWQWWVYUZS[P[ R^Mc[ RhMc[a``a^b\",\n\"CaRXR^ RRCRI RMFJGHIGLGUHXJZM[W[ZZ\\\\X]U]L\\\\IZGWFMF\",\n\"G]RYR] RRKRO ROMMNLOKQKWLYMZO[U[WZXYYWYQXOWNUMOM\",\n\"CaRWRR RLFJGHIGLGUHXJZL[N[PZQYRWSYTZV[X[ZZ\\\\X]U]L\\\\IZGXF RLBM@O?R?U@X@\",\n\"G]RTRX RMMLNKPKXLZN[O[QZRXSZU[V[XZYXYPXNWM RLIMGOFRFUGXG\",\n\"CaRWRR RLFJGHIGLGUHXJZL[N[PZQYRWSYTZV[X[ZZ\\\\X]U]L\\\\IZGXF RM<W< RR<R?\",\n\"G]RTRX RMMLNKPKXLZN[O[QZRXSZU[V[XZYXYPXNWM RMEWE RRERH\",\n\"FZWGTFPFMGKIJKJNKPMRPSTST[\",\n\"FZVNTMPMNNMOLQLSMUNVPWTWT[\",\n\"H[N]UO ROQWU RT[LW\",\n\"JZMHMFWGWE\",\n\"JZMHUEVH\",\n16,\n25,\n\"KZLIMGOFRFUGXG\",\n\":j>R?PAOCPDR RC^D\\\\F[H\\\\I^ RCFDDFCHDIF ROcPaR`TaUc ROAP?R>T?UA R[^\\\\\\\\^[`\\\\a^ R[F\\\\D^C`DaF R`RaPcOePfR\",\n\":jDQ>Q RH[D_ RHGDC RR_Re RRCR= R\\\\[`_ R\\\\G`C R`QfQ\",\n\"G]LFL[XFX[ RX[[[Ub RN>O@QASAU@V>\",\n\"H\\\\MMM[WMW[ RW[Z[Tb RNEOGQHSHUGVE\",\n\"H]MFM[S[VZXXYVYSXQVOSNMN RJIPI\",\n\"IZKMQM RNFN[S[UZVXVUUSSRNR\",\n\"G\\\\L[LFTFVGWHXJXMWOVPTQLQ RTMXS\",\n\"H[MMMb RMNOMSMUNVOWQWWVYUZS[O[MZ RSWW]\",\n\"HZM[MFXFXA\",\n\"JYO[OMWMWH\",\n\"HZM[MFXF RJQRQ\",\n\"JYO[OMWM RLTTT\",\n\"H]M[MFXF RMMSMVNXPYSY\\\\X_VaSbQb\",\n\"J\\\\O[OMWM ROTTTVUWVXXX[W^UaTb\",\n\"BbOOF[ RR[RF RRRFF R^[UO R^FRR R^[`[``\",\n\"F^QTJ[ RRUJM RRMR[ RZ[ST RZMRU RZ[\\\\[\\\\`\",\n\"I]PPTP RMGOFTFVGWHXJXLWNVOTPWQXRYTYWXYWZU[O[MZ RR\\\\T]U_TaRbOb\",\n\"K[RTTT RNNPMTMVNWPWQVSTTVUWWWXVZT[P[NZ RR\\\\T]U_TaRbOb\",\n\"G\\\\L[LF RX[OO RXFLR RX[Z[Z`\",\n\"IZNMN[ RPSV[ RVMNU RV[X[X`\",\n\"G\\\\L[LF RX[OO RXFLR RPKPS\",\n\"IZNMN[ RPSV[ RVMNU RRORW\",\n\"G\\\\L[LF RX[OO RXFLR RIJOJ\",\n\"IZN[NF RPSV[ RVMNU RKJQJ\",\n\"E\\\\X[OO RXFLR RGFLFL[\",\n\"HZPSV[ RVMNU RJMNMN[\",\n\"G]L[LF RLPXP RX[XF RX[Z[Z`\",\n\"H[MTVT RMMM[ RVMV[ RV[X[X`\",\n\"GeL[LF RLPXP RX[XFcF\",\n\"H`MTVT RMMM[ RV[VM^M\",\n\"GhL[LFXFX[ RXM^MaNcPdSd\\\\c_aa^b\\\\b\",\n\"HcM[MMVMV[ RVT[T]U^V_X_[^^\\\\a[b\",\n\"F^QFNGLIKKJOJRKVLXNZQ[S[VZXXYVZRZMYJWIVITJSMSRTVUXWZY[[[\",\n\"H\\\\QMPMNNMOLQLWMYNZP[T[VZWYXWXRWPUOSPRRRWSYTZV[Y[\",\n\"F[WYVZS[Q[NZLXKVJRJOKKLINGQFSFVGWH RR\\\\T]U_TaRbOb\",\n\"HZVZT[P[NZMYLWLQMONNPMTMVN RR\\\\T]U_TaRbOb\",\n\"JZLFXF RR[RF RR[T[T`\",\n\"KYMMWM RRMR[ RR[T[T`\",\n15,\n\"JZR[Rb RMMR[WM\",\n\"I[RQR[ RKFRQYF RNUVU\",\n\"JZR[Rb RMMR[WM RN]V]\",\n\"H\\\\KFY[ RYFK[ RX[Z[Z`\",\n\"IZL[WM RLMW[ RV[X[X`\",\n\"D]FFRF RXFX[ RLFL[Z[Z`\",\n\"G\\\\RMIM RWMW[ RNMN[Y[Y`\",\n\"H\\\\WFW[ RLFLNMPNQPRWR RW[Y[Y`\",\n\"J\\\\VMV[ RNMNROTQUVU RV[X[X`\",\n\"H\\\\WFW[ RLFLNMPNQPRWR RRNRV\",\n\"J\\\\VMV[ RNMNROTQUVU RRQRY\",\n\"G]L[LF RL[ RLPRPUQWSXVX[\",\n\"H[M[MF RV[VPUNSMPMNNMO\",\n\"@^WYVZS[Q[NZLXKVJRJOKKLINGQFSFVGXIYKZOJQGQEPDOCMCK\",\n\"E[VZT[P[NZMXMPNNPMTMVNWPWRMTKTISHQHO\",\n\"@^WYVZS[Q[NZLXKVJRJOKKLINGQFSFVGXIYKZOJQGQEPDOCMCK RR[P]O_PaRbTb\",\n\"E[VZT[P[NZMXMPNNPMTMVNWPWRMTKTISHQHO RR[P]O_PaRbTb\",\n8,\n\"BbOOF[ RR[RF RRRFF R^[UO R^FRR RN>O@QASAU@V>\",\n\"F^QTJ[ RRUJM RRMR[ RZ[ST RZMRU RNEOGQHSHUGVE\",\n\"G\\\\L[LF RX[OO RXFLR RX[X_WaUbSb\",\n\"IZNMN[ RPSV[ RVMNU RV[V_UaSbQb\",\n\"F\\\\W[WFTFQGOINLLXKZI[H[ RW[Z[Tb\",\n\"I[V[VMSMQNPPOXNZL[ RV[Y[Sb\",\n\"G]L[LF RLPXP RX[XF RX[X_WaUbSb\",\n\"H[MTVT RMMM[ RVMV[ RV[V_UaSbQb\",\n\"G]L[LF RLPXP RX[XF RX[[[Ub\",\n\"H[MTVT RMMM[ RVMV[ RV[Y[Sb\",\n\"H\\\\WFW[ RLFLNMPNQPRWR RW[U[U`\",\n\"J\\\\VMV[ RNMNROTQUVU RV[T[T`\",\n\"F^K[KFRUYFY[ RY[\\\\[Vb\",\n\"G]L[LMRXXMX[ RX[[[Ub\",\n8,\n30,\n\"I\\\\W[WPVNTMPMNN RWZU[P[NZMXMVNTPSUSWR RNEOGQHSHUGVE\",\n\"I[MUWU RK[RFY[ RN?O@NAM@N?NA RV?W@VAU@V?VA\",\n\"I\\\\W[WPVNTMPMNN RWZU[P[NZMXMVNTPSUSWR RNFOGNHMGNFNH RVFWGVHUGVFVH\",\n\"F`JURU RRPYP RH[OF\\\\F RRFR[\\\\[\",\n\"D`INKMOMQNRP R[ZY[U[SZRXRPSNUMYM[N\\\\P\\\\RRSKSITHVHXIZK[O[QZRX\",\n\"H[MPTP RW[M[MFWF RN>O@QASAU@V>\",\n\"I[VZT[P[NZMXMPNNPMTMVNWPWRMT RNEOGQHSHUGVE\",\n\"F^MHNGQFSFVGXIYKZOZRYVXXVZS[Q[NZLXKVJRZP\",\n33,\n\"F^MHNGQFSFVGXIYKZOZRYVXXVZS[Q[NZLXKVJRZP RNBOCNDMCNBND RVBWCVDUCVBVD\",\n\"I[NNPMTMVNWPWXVZT[P[NZMXMVWT RNFOGNHMGNFNH RVFWGVHUGVFVH\",\n\"BbOOF[ RR[RF RRRFF R^[UO R^FRR RN?O@NAM@N?NA RV?W@VAU@V?VA\",\n\"F^QTJ[ RRUJM RRMR[ RZ[ST RZMRU RNFOGNHMGNFNH RVFWGVHUGVFVH\",\n\"I]PPTP RMGOFTFVGWHXJXLWNVOTPWQXRYTYWXYWZU[O[MZ RN?O@NAM@N?NA RV?W@VAU@V?VA\",\n\"K[RTTT RNNPMTMVNWPWQVSTTVUWWWXVZT[P[NZ RNFOGNHMGNFNH RVFWGVHUGVFVH\",\n2,\n\"JZMMVMOVRVTWUXVZV^U`TaRbObMa\",\n\"G]LFL[XFX[ RM@W@\",\n\"H\\\\MMM[WMW[ RMGWG\",\n\"G]LFL[XFX[ RN?O@NAM@N?NA RV?W@VAU@V?VA\",\n\"H\\\\MMM[WMW[ RNFOGNHMGNFNH RVFWGVHUGVFVH\",\n\"G]PFTFVGXIYMYTXXVZT[P[NZLXKTKMLINGPF RN?O@NAM@N?NA RV?W@VAU@V?VA\",\n\"H[P[NZMYLWLQMONNPMSMUNVOWQWWVYUZS[P[ RNFOGNHMGNFNH RVFWGVHUGVFVH\",\n32,\n37,\n\"G]KPYP RPFTFVGXIYMYTXXVZT[P[NZLXKTKMLINGPF RN?O@NAM@N?NA RV?W@VAU@V?VA\",\n\"H[LTWT RP[NZMYLWLQMONNPMSMUNVOWQWWVYUZS[P[ RNFOGNHMGNFNH RVFWGVHUGVFVH\",\n\"I^ZPPP RMYNZQ[S[VZXXYVZRZOYKXIVGSFQFNGMH RN?O@NAM@N?NA RV?W@VAU@V?VA\",\n\"J\\\\XTQT RNZP[T[VZWYXWXQWOVNTMPMNN RNFOGNHMGNFNH RVFWGVHUGVFVH\",\n\"G[KFRT RYFPXNZL[K[ RM@W@\",\n\"JZMMR[ RWMR[P`OaMb RMGWG\",\n\"G[KFRT RYFPXNZL[K[ RN?O@NAM@N?NA RV?W@VAU@V?VA\",\n\"JZMMR[ RWMR[P`OaMb RNFOGNHMGNFNH RVFWGVHUGVFVH\",\n\"G[KFRT RYFPXNZL[K[ RQ>NA RX>UA\",\n\"JZMMR[ RWMR[P`OaMb RQENH RXEUH\",\n\"H\\\\WFW[ RLFLNMPNQPRWR RN?O@NAM@N?NA RV?W@VAU@V?VA\",\n\"J\\\\VMV[ RNMNROTQUVU RNFOGNHMGNFNH RVFWGVHUGVFVH\",\n\"HZM[MFXF RM[O[O`\",\n\"JYO[OMWM RO[Q[Q`\",\n\"Da\\\\F\\\\[ RIFI[O[RZTXUVUSTQROONIN RN?O@NAM@N?NA RV?W@VAU@V?VA\",\n\"F^YMY[ RKMK[P[RZSXSURSPRKR RNFOGNHMGNFNH RVFWGVHUGVFVH\",\n\"HZWFMFM[Q[Q_PaNbLb RJQRQ\",\n\"JYWMOMO[S[S_RaPbNb RLTTT\",\n\"H\\\\KFY[ RYFK[ RX[X_WaUbSb\",\n\"IZL[WM RLMW[ RV[V_UaSbQb\",\n\"H\\\\KFY[ RYFK[ RNPVP\",\n\"IZL[WM RLMW[ RNTVT\",\n\"G\\\\WFW[Q[NZLXKVKSLQNOQNWN\",\n\"J[VMV[Q[OZNXNUOSQRVR\",\n\"B_RXSZU[X[ZZ[X[M RRFRXQZO[L[IZGXFVFSGQIOLNRN\",\n\"E]RXSZU[V[XZYXYQ RRMRXQZO[M[KZJXJUKSMRRR\",\n\"IePPTP RMGOFTFVGWHXJXLWNVOTPVQWRXTXXYZ[[^[`ZaXaM\",\n\"KbRTTT RNNPMTMVNWPWQVSTTVUWWWXXZZ[[[]Z^X^Q\",\n\"I\\\\PPTP RMGOFTFVGWHXJXLWNVOTPVQWRXTX[Z[Z`\",\n\"K[RTTT RNNPMTMVNWPWQVSTTVUWWW[Y[Y`\",\n\"FdH[I[KZLXNLOIQGTFWFWXXZZ[][_Z`X`M\",\n\"IaL[NZOXPPQNSMVMVXWZY[Z[\\\\Z]X]Q\",\n\"CaH[HF RHPTP RTFTXUZW[Z[\\\\Z]X]M\",\n\"F^KTTT RKMK[ RTMTXUZW[X[ZZ[X[R\",\n\"F[VGTFQFNGLIKKJOJRKVLXNZQ[S[VZWYWRSR\",\n\"HZUNSMPMNNMOLQLWMYNZP[T[VZVUSU\",\n\"J_LFXF RRFRXSZU[X[ZZ[X[M\",\n\"K]MMWM RRMRXSZU[V[XZYXYS\",\n\"G[PPTP RWGUFPFNGMHLJLLMNNOPPMQLRKTKWLYMZO[U[WZ\",\n35,\n\"F\\\\W[WFTFQGOINLLXKZI[H[ RW[W_VaTbRb\",\n\"I[V[VMSMQNPPOXNZL[ RV[V_UaSbQb\",\n\"BaP[^F RD[E[GZHXJLKIMGPF^[\",\n\"E^[MO[ RH[JZKXLPMNOM[[\",\n\"E_\\\\FUO\\\\[ RJ[JFRFTGUHVJVMUOTPRQJQ\",\n\"F^KMKb R[MUT[[ RKNMMQMSNTOUQUWTYSZQ[M[KZ\",\n\"DaOQH[ RTFT[^[ R[QLQJPIOHMHJIHJGLF^F\",\n\"D`H[MU RRPRMKMINHPHRITKURU R[ZY[U[SZRXRPSNUMYM[N\\\\P\\\\RRT\",\n\"G]Z]X\\\\VZSWQVOV RP[NZLXKTKMLINGPFTFVGXIYMYTXXVZT[P[\",\n\"I\\\\WMWb RWZU[Q[OZNYMWMQNOONQMUMWN\",\n\"F^IFN[RLV[[F\",\n21,\n\"G\\\\L[LF RX[OO RXFLR RXKRG\",\n\"IZNMN[ RPSV[ RVMNU RWQQM\",\n\"FgW[WFTFQGOINLLXKZI[H[ RWM]M`NbPcSc\\\\b_`a]b[b\",\n\"IcV[VMSMQNPPOXNZL[ RVT[T]U^V_X_[^^\\\\a[b\",\n\"GhL[LF RLPXP RX[XF RXM^MaNcPdSd\\\\c_aa^b\\\\b\",\n\"HcMTVT RMMM[ RVMV[ RVT[T]U^V_X_[^^\\\\a[b\",\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n\"JZNXVX RM[RMW[\",\n\"H\\\\LXRX RRTWT RRMR[Y[ RYMPMK[\",\n\"D`[ZY[U[SZRX RINKMOMQNRPRXQZO[K[IZHXHVRUYU[T\\\\R\\\\P[NYMUMSNRP\",\n\"I[STVUWWWXVZT[N[NMSMUNVPVQUSSTNT RKWQW\",\n17,\n\"J[SMOMO[S[UZVYWVWRVOUNSM\",\n\"J[SMOMO[S[UZVYWVWRVOUNSM RLTRT\",\n\"JYOTTT RVMOMO[V[\",\n\"J[TTVSWQWPVNTMPMNN RRTTTVUWWWXVZT[P[NZ\",\n\"MWRMR[ RRbSaR`QaRbR`\",\n\"LYTMTWSYRZP[O[\",\n31,\n\"JYOMO[V[ RLVRR\",\n\"G]L[LMRXXMX[\",\n\"I\\\\W[WMN[NM\",\n19,\n\"J\\\\NNPMTMVNWOXQXWWYVZT[P[NZ\",\n\"G]YSYVXXWYUZOZMYLXKVKSLQMPOOUOWPXQYS\",\n\"G]XYYWYSXQWPUOOOMPLQKSKWLY\",\n\"G]YNK[ RYSYVXXWYUZOZMYLXKVKSLQMPOOUOWPXQYS\",\n\"DaINKMOMQNRPRXQZO[K[IZHXHVRT RRWSYTZV[Y[[Z\\\\Y]W]Q\\\\O[NYMVMTNSORQ\",\n\"G]OMNNMPNRPS RTSVRWPVNUM RPSTSVTWVWXVZT[P[NZMXMVNTPS\",\n\"I\\\\XTXQWOVNTMQMONNOMQMT\",\n\"H[LTLWMYNZP[S[UZVYWWWT\",\n\"I[N[NMTMVNWPWRVTTUNU\",\n\"I[RUM[ RV[VMPMNNMPMRNTPUVU\",\n\"I[RSMM RVMV[P[NZMXMVNTPSVS\",\n\"KYMMWM RRMR[\",\n\"H[MMMXNZP[S[UZVXVM\",\n\"G]KPYP RKYVYXXYVYSXQWP\",\n\"@]KPYP RKYVYXXYVYSXQWP REWFXEYDXEWEY REOFPEQDPEOEQ\",\n\"G]KKYK RWKXLYNYQXSVTKT RVTXUYWYZX\\\\V]K]\",\n20,\n21,\n\"IZLMWML[W[\",\n\"JZNMVMRRSRUSVUVXUZS[P[NZ\",\n\"H\\\\XNUMPMNNMOLQLSMUNVPWTXVYWZX\\\\X^W`VaTbObLa RRTR\\\\\",\n\"JZW[PROPPNRMTNUPTRM[\",\n\"JYO[OMWM\",\n\"JZM[RMW[\",\n\"H[M[MMVMV[\",\n\"I[N[NMTMVNWPWRVTTUNU\",\n\"I[RMR[ RLMMNMRNTPUTUVTWRWNXM\",\n\"I[V[VMSMQNPPOXNZL[\",\n\"JZNKVK RMNR@WN\",\n\"H\\\\LKRK RRGWG RR@RNYN RY@P@KN\",\n\"I[SGVHWJWKVMTNNNN@S@UAVCVDUFSGNG\",\n\"I[SGVHWJWKVMTNNNN@S@UAVCVDUFSGNG RKGQG\",\n\"J[S@O@ONSNUMVLWIWEVBUAS@\",\n\"JYOGTG RV@O@ONVN\",\n\"KZUGPG RN@U@UNNN\",\n\"HZUAS@P@NAMBLDLJMLNMPNTNVMVHSH\",\n\"H[MGVG RM@MN RV@VN\",\n\"MWRNR@ RUNON RU@O@\",\n\"LYT@TJSLRMPNON\",\n\"IZN@NN RPFVN RV@NH\",\n\"JYO@ONVN\",\n\"G]LNL@RKX@XN\",\n\"H[MNM@VNV@\",\n\"I\\\\WNW@NNN@\",\n\"H[PNNMMLLJLDMBNAP@S@UAVBWDWJVLUMSNPN\",\n\"G]O@NAMCNEPF RTFVEWCVAU@ RPFTFVGWIWKVMTNPNNMMKMINGPF\",\n\"I[NNN@T@VAWCWEVGTHNH\",\n\"I[RHWN RNNN@T@VAWCWEVGTHNH\",\n\"KYM@W@ RR@RN\",\n\"H[M@MKNMPNSNUMVKV@\",\n\"G]J@NNRDVNZ@\",\n\"KZOEQDSDUEVGVN RVMTNQNOMNKOIQHVH\",\n\"JYNDNKOMQNSNUM RNEPDSDUEVGUISJNJ\",\n\"H]WDUKTMRNPNNMMKMGNEPDRDTEVMWN\",\n\"H\\\\XMVNUNSMRK RLDODQERHRKQMONNNLMKKKJVJXIYGXEVDUDSERH\",\n\"KYO@ON ROMQNSNUMVKVGUESDQDOE\",\n\"KYU@UN RUESDQDOENGNKOMQNSNUM\",\n\"LYVMTNRNPMOKOGPERDSDUEVGVHOI\",\n\"LYOEQDSDUEVGVKUMSNRNPMOKOJVI\",\n\"LXPIRI RUETDPDOEOHPIOJOMPNTNUM\",\n\"LXRITI ROEPDTDUEUHTIUJUMTNPNOM\",\n\"KYUDUPTRRSOS RUESDQDOENGNKOMQNSNUM\",\n\"NVRDRN RRUSTRSQTRURS\",\n\"IZO@ON RUNQH RUDOJ\",\n\"G]KNKD RKEMDODQERGRN RRGSEUDVDXEYGYN\",\n\"KZODON ROEQDSDUEVGVPURSSRS\",\n\"KYQNOMNKNGOEQDSDUEVGVKUMSNQN\",\n\"LYOEQDSDUEVGVKUMSNQNOM\",\n\"KYNINGOEQDSDUEVGVI\",\n\"KYNINKOMQNSNUMVKVI\",\n\"KYOSOD ROEQDSDUEVGVKUMSNQNOM\",\n\"NXPDVD RR@RKSMUNVN\",\n\"KYUDUN RNDNKOMQNSNUM\",\n\"I[MFWF RMMTMVLWJWHVF\",\n\"G]YDYN RYMWNUNSMRKRD RRKQMONNNLMKKKD\",\n\"LXNDRNVD\",\n\"LXVNPGPEQDSDTETGNN\",\n\"KYSFRF RNSOQOCPAR@S@UAVCUESFUGVIVKUMSNQNOM\",\n\"KXRMRS RMDOERMVD\",\n\"KYSDQDOENGNKOMQNSNUMVKVGUESDPCOBOAP@U@\",\n\"I[MDLFLJMLNMPNTNVMWLXJXGWEUDSERGRS\",\n\"LXVDNS RNDPETRVS\",\n\"NVRWRa RRPQQRRSQRPRR\",\n\"LWPWPa RPZQXSWUW\",\n\"KYUWUa RNWN^O`QaSaU`\",\n\"LXNWRaVW\",\n\"KYSYRY RNfOdOVPTRSSSUTVVUXSYUZV\\\\V^U`SaQaO`\",\n\"KXR`Rf RMWOXR`VW\",\n\"KYOfOZPXRWSWUXVZV^U`SaQaO`\",\n\"I[MWLYL]M_N`PaTaV`W_X]XZWXUWSXRZRf\",\n\"LXVWNf RNWPXTeVf\",\n\"D`IMIXJZL[O[QZRX R[ZY[U[SZRXRPSNUMYM[N\\\\P\\\\RRT\",\n\"H[M[MF RMNOMSMUNVOWQWWVYUZS[O[MZ RIHJGLFPHRGSF\",\n\"I\\\\W[WF RWZU[Q[OZNYMWMQNOONQMUMWN RQHRGTFXHZG[F\",\n\"MYOMWM RR[RISGUFWF RMTNSPRTTVSWR\",\n\"D`I[IM RIOJNLMOMQNRPR[ RRPSNUMXMZN[P[[ RMTNSPRTTVSWR\",\n\"I\\\\NMN[ RNOONQMTMVNWPW[ RMTNSPRTTVSWR\",\n\"H[MMMb RMNOMSMUNVOWQWWVYUZS[O[MZ RI`J_L^P`R_S^\",\n\"KXP[PM RPQQORNTMVM RLTMSORSTUSVR\",\n\"KXM[S[ RVMTMRNQOPRP[ RLTMSORSTUSVR\",\n\"J[NZP[T[VZWXWWVUTTQTOSNQNPONQMTMVN RNTOSQRUTWSXR\",\n\"MYOMWM RRFRXSZU[W[ RMSNRPQTSVRWQ\",\n\"IZLMWML[W[ RMTNSPRTTVSWR\",\n\"H[M[MJNHOGQFTFVG RMNOMSMUNVOWQWWVYUZS[O[MZ\",\n\"H[MGVG RM@MN RV@VN\",\n\"JZMMVMOURUTVUWVYV^U`TaRbPbNaM_M^N\\\\P[V[\",\n\"MlOMWM RRFRXSZU[W[ R^[^F Rg[gPfNdMaM_N^O RiC]`\",\n\"MWR[RM RU[O[ RUMOM ROTUT\",\n\"MXRMRXSZU[ ROTUT\",\n\"H[MMMb RMNOMSMUNVOWQWWVYUZS[O[MZ RHT\\\\T\",\n\"H[MMMXNZP[S[UZVXVM RHT\\\\T\",\n\"I\\\\XMUMUPWRXTXWWYVZT[Q[OZNYMWMTNRPPPMMM RHU\\\\U\",\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n\"I[MUWU RK[RFY[ RR`TaUcTeRfPeOcPaR`\",\n\"I\\\\W[WPVNTMPMNN RWZU[P[NZMXMVNTPSUSWR RR`TaUcTeRfPeOcPaR`\",\n\"G\\\\SPVQWRXTXWWYVZT[L[LFSFUGVHWJWLVNUOSPLP RR?Q@RAS@R?RA\",\n\"H[M[MF RMNOMSMUNVOWQWWVYUZS[O[MZ RN?M@NAO@N?NA\",\n\"G\\\\SPVQWRXTXWWYVZT[L[LFSFUGVHWJWLVNUOSPLP RRbSaR`QaRbR`\",\n\"H[M[MF RMNOMSMUNVOWQWWVYUZS[O[MZ RRbSaR`QaRbR`\",\n\"G\\\\SPVQWRXTXWWYVZT[L[LFSFUGVHWJWLVNUOSPLP RWaMa\",\n\"H[M[MF RMNOMSMUNVOWQWWVYUZS[O[MZ RWaMa\",\n\"F[WYVZS[Q[NZLXKVJRJOKKLINGQFSFVGWH RR\\\\T]U_TaRbOb RT>QA\",\n\"HZVZT[P[NZMYLWLQMONNPMTMVN RR\\\\T]U_TaRbOb RTEQH\",\n\"G\\\\L[LFQFTGVIWKXOXRWVVXTZQ[L[ RR?Q@RAS@R?RA\",\n\"I\\\\W[WF RWZU[Q[OZNYMWMQNOONQMUMWN RV?U@VAW@V?VA\",\n\"G\\\\L[LFQFTGVIWKXOXRWVVXTZQ[L[ RRbSaR`QaRbR`\",\n\"I\\\\W[WF RWZU[Q[OZNYMWMQNOONQMUMWN RSbTaS`RaSbS`\",\n\"G\\\\L[LFQFTGVIWKXOXRWVVXTZQ[L[ RWaMa\",\n\"I\\\\W[WF RWZU[Q[OZNYMWMQNOONQMUMWN RXaNa\",\n\"G\\\\L[LFQFTGVIWKXOXRWVVXTZQ[L[ RQ\\\\S]T_SaQbNb\",\n\"I\\\\W[WF RWZU[Q[OZNYMWMQNOONQMUMWN RS\\\\U]V_UaSbPb\",\n\"G\\\\L[LFQFTGVIWKXOXRWVVXTZQ[L[ RVcR`Nc\",\n\"I\\\\W[WF RWZU[Q[OZNYMWMQNOONQMUMWN RWcS`Oc\",\n\"H[MPTP RW[M[MFWF RM@W@ RP9S<\",\n\"I[VZT[P[NZMXMPNNPMTMVNWPWRMT RMGWG RP>SA\",\n\"H[MPTP RW[M[MFWF RM@W@ RT9Q<\",\n\"I[VZT[P[NZMXMPNNPMTMVNWPWRMT RMGWG RT>QA\",\n\"H[MPTP RW[M[MFWF RVcR`Nc\",\n\"I[VZT[P[NZMXMPNNPMTMVNWPWRMT RVcR`Nc\",\n\"H[MPTP RW[M[MFWF RW`VaTbP`NaMb\",\n\"I[VZT[P[NZMXMPNNPMTMVNWPWRMT RW`VaTbP`NaMb\",\n\"H[MPTP RW[M[MFWF RR\\\\T]U_TaRbOb RN>O@QASAU@V>\",\n\"I[VZT[P[NZMXMPNNPMTMVNWPWRMT RR\\\\T]U_TaRbOb RNEOGQHSHUGVE\",\n\"HZTPMP RM[MFWF RR?Q@RAS@R?RA\",\n\"MYOMWM RR[RISGUFWF RT?S@TAU@T?TA\",\n\"F[VGTFQFNGLIKKJOJRKVLXNZQ[S[VZWYWRSR RM@W@\",\n\"I\\\\WMW^V`UaSbPbNa RWZU[Q[OZNYMWMQNOONQMUMWN RMGWG\",\n\"G]L[LF RLPXP RX[XF RR?Q@RAS@R?RA\",\n\"H[M[MF RV[VPUNSMPMNNMO RM?L@MAN@M?MA\",\n\"G]L[LF RLPXP RX[XF RRbSaR`QaRbR`\",\n\"H[M[MF RV[VPUNSMPMNNMO RRbSaR`QaRbR`\",\n\"G]L[LF RLPXP RX[XF RN?O@NAM@N?NA RV?W@VAU@V?VA\",\n\"H[M[MF RV[VPUNSMPMNNMO RI?J@IAH@I?IA RQ?R@QAP@Q?QA\",\n\"G]L[LF RLPXP RX[XF RL\\\\N]O_NaLbIb\",\n\"H[M[MF RV[VPUNSMPMNNMO RM\\\\O]P_OaMbJb\",\n\"G]L[LF RLPXP RX[XF RV`UbScQcObN`\",\n\"H[M[MF RV[VPUNSMPMNNMO RV`UbScQcObN`\",\n\"MWR[RF RW`VaTbP`NaMb\",\n\"MWR[RM RRFQGRHSGRFRH RW`VaTbP`NaMb\",\n\"MWR[RF RN?O@NAM@N?NA RV?W@VAU@V?VA RT9Q<\",\n\"MWR[RM RNFOGNHMGNFNH RVFWGVHUGVFVH RT>QA\",\n\"G\\\\L[LF RX[OO RXFLR RT>QA\",\n\"IZN[NF RPSV[ RVMNU RPAMD\",\n\"G\\\\L[LF RX[OO RXFLR RRbSaR`QaRbR`\",\n\"IZN[NF RPSV[ RVMNU RRbSaR`QaRbR`\",\n\"G\\\\L[LF RX[OO RXFLR RWaMa\",\n\"IZN[NF RPSV[ RVMNU RWaMa\",\n\"HYW[M[MF RRbSaR`QaRbR`\",\n\"MXU[SZRXRF RSbTaS`RaSbS`\",\n\"HYW[M[MF RH@R@ RRbSaR`QaRbR`\",\n\"MXU[SZRXRF RM@W@ RSbTaS`RaSbS`\",\n\"HYW[M[MF RWaMa\",\n\"MXU[SZRXRF RXaNa\",\n\"HYW[M[MF RVcR`Nc\",\n\"MXU[SZRXRF RWcS`Oc\",\n\"F^K[KFRUYFY[ RT>QA\",\n\"D`I[IM RIOJNLMOMQNRPR[ RRPSNUMXMZN[P[[ RTEQH\",\n\"F^K[KFRUYFY[ RR?Q@RAS@R?RA\",\n\"D`I[IM RIOJNLMOMQNRPR[ RRPSNUMXMZN[P[[ RRFQGRHSGRFRH\",\n\"F^K[KFRUYFY[ RRbSaR`QaRbR`\",\n\"D`I[IM RIOJNLMOMQNRPR[ RRPSNUMXMZN[P[[ RRbSaR`QaRbR`\",\n\"G]L[LFX[XF RR?Q@RAS@R?RA\",\n\"I\\\\NMN[ RNOONQMTMVNWPW[ RRFQGRHSGRFRH\",\n\"G]L[LFX[XF RRbSaR`QaRbR`\",\n\"I\\\\NMN[ RNOONQMTMVNWPW[ RRbSaR`QaRbR`\",\n\"G]L[LFX[XF RWaMa\",\n\"I\\\\NMN[ RNOONQMTMVNWPW[ RWaMa\",\n\"G]L[LFX[XF RVcR`Nc\",\n\"I\\\\NMN[ RNOONQMTMVNWPW[ RVcR`Nc\",\n\"G]PFTFVGXIYMYTXXVZT[P[NZLXKTKMLINGPF RMAN@P?TAV@W? RT9Q<\",\n\"H[P[NZMYLWLQMONNPMSMUNVOWQWWVYUZS[P[ RMHNGPFTHVGWF RT>QA\",\n\"G]PFTFVGXIYMYTXXVZT[P[NZLXKTKMLINGPF RMAN@P?TAV@W? RN:O;N<M;N:N< RV:W;V<U;V:V<\",\n\"H[P[NZMYLWLQMONNPMSMUNVOWQWWVYUZS[P[ RMHNGPFTHVGWF RN?O@NAM@N?NA RV?W@VAU@V?VA\",\n\"G]PFTFVGXIYMYTXXVZT[P[NZLXKTKMLINGPF RM@W@ RP9S<\",\n\"H[P[NZMYLWLQMONNPMSMUNVOWQWWVYUZS[P[ RMGWG RP>SA\",\n\"G]PFTFVGXIYMYTXXVZT[P[NZLXKTKMLINGPF RM@W@ RT9Q<\",\n\"H[P[NZMYLWLQMONNPMSMUNVOWQWWVYUZS[P[ RMGWG RT>QA\",\n\"G\\\\L[LFTFVGWHXJXMWOVPTQLQ RT>QA\",\n\"H[MMMb RMNOMSMUNVOWQWWVYUZS[O[MZ RTEQH\",\n\"G\\\\L[LFTFVGWHXJXMWOVPTQLQ RR?Q@RAS@R?RA\",\n\"H[MMMb RMNOMSMUNVOWQWWVYUZS[O[MZ RRFQGRHSGRFRH\",\n\"G\\\\X[QQ RL[LFTFVGWHXJXMWOVPTQLQ RR?Q@RAS@R?RA\",\n\"KXP[PM RPQQORNTMVM RSFRGSHTGSFSH\",\n\"G\\\\X[QQ RL[LFTFVGWHXJXMWOVPTQLQ RRbSaR`QaRbR`\",\n\"KXP[PM RPQQORNTMVM RPbQaP`OaPbP`\",\n\"G\\\\X[QQ RL[LFTFVGWHXJXMWOVPTQLQ RM@W@ RRbSaR`QaRbR`\",\n\"KXP[PM RPQQORNTMVM RNGXG RPbQaP`OaPbP`\",\n\"G\\\\X[QQ RL[LFTFVGWHXJXMWOVPTQLQ RWaMa\",\n\"KXP[PM RPQQORNTMVM RUaKa\",\n\"H\\\\LZO[T[VZWYXWXUWSVRTQPPNOMNLLLJMHNGPFUFXG RR?Q@RAS@R?RA\",\n\"J[NZP[T[VZWXWWVUTTQTOSNQNPONQMTMVN RRFQGRHSGRFRH\",\n\"H\\\\LZO[T[VZWYXWXUWSVRTQPPNOMNLLLJMHNGPFUFXG RRbSaR`QaRbR`\",\n\"J[NZP[T[VZWXWWVUTTQTOSNQNPONQMTMVN RRbSaR`QaRbR`\",\n\"H\\\\LZO[T[VZWYXWXUWSVRTQPPNOMNLLLJMHNGPFUFXG RU>RA RM>N?M@L?M>M@\",\n\"J[NZP[T[VZWXWWVUTTQTOSNQNPONQMTMVN RUERH RMENFMGLFMEMG\",\n\"H\\\\LZO[T[VZWYXWXUWSVRTQPPNOMNLLLJMHNGPFUFXG RN>RAV> RR:Q;R<S;R:R<\",\n\"J[NZP[T[VZWXWWVUTTQTOSNQNPONQMTMVN RNERHVE RR?Q@RAS@R?RA\",\n\"H\\\\LZO[T[VZWYXWXUWSVRTQPPNOMNLLLJMHNGPFUFXG RR?Q@RAS@R?RA RRbSaR`QaRbR`\",\n\"J[NZP[T[VZWXWWVUTTQTOSNQNPONQMTMVN RRFQGRHSGRFRH RRbSaR`QaRbR`\",\n\"JZLFXF RR[RF RR?Q@RAS@R?RA\",\n\"MYOMWM RRFRXSZU[W[ RR?Q@RAS@R?RA\",\n\"JZLFXF RR[RF RRbSaR`QaRbR`\",\n\"MYOMWM RRFRXSZU[W[ RTbUaT`SaTbT`\",\n\"JZLFXF RR[RF RWaMa\",\n\"MYOMWM RRFRXSZU[W[ RYaOa\",\n\"JZLFXF RR[RF RVcR`Nc\",\n\"MYOMWM RRFRXSZU[W[ RXcT`Pc\",\n\"G]LFLWMYNZP[T[VZWYXWXF RVbUaV`WaVbV` RNbMaN`OaNbN`\",\n\"H[VMV[ RMMMXNZP[S[UZVY RVbUaV`WaVbV` RNbMaN`OaNbN`\",\n\"G]LFLWMYNZP[T[VZWYXWXF RW`VaTbP`NaMb\",\n\"H[VMV[ RMMMXNZP[S[UZVY RW`VaTbP`NaMb\",\n\"G]LFLWMYNZP[T[VZWYXWXF RVcR`Nc\",\n\"H[VMV[ RMMMXNZP[S[UZVY RVcR`Nc\",\n\"G]LFLWMYNZP[T[VZWYXWXF RMAN@P?TAV@W? RT9Q<\",\n\"H[VMV[ RMMMXNZP[S[UZVY RMHNGPFTHVGWF RT>QA\",\n\"G]LFLWMYNZP[T[VZWYXWXF RM@W@ RN:O;N<M;N:N< RV:W;V<U;V:V<\",\n\"H[VMV[ RMMMXNZP[S[UZVY RMGWG RN?O@NAM@N?NA RV?W@VAU@V?VA\",\n\"I[KFR[YF RMAN@P?TAV@W?\",\n\"JZMMR[WM RMHNGPFTHVGWF\",\n\"I[KFR[YF RRbSaR`QaRbR`\",\n\"JZMMR[WM RRbSaR`QaRbR`\",\n\"F^IFN[RLV[[F RP>SA\",\n\"G]JMN[RQV[ZM RPESH\",\n\"F^IFN[RLV[[F RT>QA\",\n\"G]JMN[RQV[ZM RTEQH\",\n\"F^IFN[RLV[[F RN?O@NAM@N?NA RV?W@VAU@V?VA\",\n\"G]JMN[RQV[ZM RNFOGNHMGNFNH RVFWGVHUGVFVH\",\n\"F^IFN[RLV[[F RR?Q@RAS@R?RA\",\n\"G]JMN[RQV[ZM RRFQGRHSGRFRH\",\n\"F^IFN[RLV[[F RRbSaR`QaRbR`\",\n\"G]JMN[RQV[ZM RRbSaR`QaRbR`\",\n\"H\\\\KFY[ RYFK[ RR?Q@RAS@R?RA\",\n\"IZL[WM RLMW[ RRFQGRHSGRFRH\",\n\"H\\\\KFY[ RYFK[ RN?O@NAM@N?NA RV?W@VAU@V?VA\",\n\"IZL[WM RLMW[ RNFOGNHMGNFNH RVFWGVHUGVFVH\",\n\"I[RQR[ RKFRQYF RR?Q@RAS@R?RA\",\n\"JZMMR[ RWMR[P`OaMb RRFQGRHSGRFRH\",\n\"H\\\\KFYFK[Y[ RNAR>VA\",\n\"IZLMWML[W[ RNHREVH\",\n\"H\\\\KFYFK[Y[ RRbSaR`QaRbR`\",\n\"IZLMWML[W[ RRbSaR`QaRbR`\",\n\"H\\\\KFYFK[Y[ RWaMa\",\n\"IZLMWML[W[ RWaMa\",\n\"H[M[MF RV[VPUNSMPMNNMO RWaMa\",\n\"MYOMWM RRFRXSZU[W[ RN?O@NAM@N?NA RV?W@VAU@V?VA\",\n\"G]JMN[RQV[ZM RRHPGOEPCRBTCUETGRH\",\n\"JZMMR[ RWMR[P`OaMb RRHPGOEPCRBTCUETGRH\",\n\"I\\\\W[WPVNTMPMNN RWZU[P[NZMXMVNTPSUSWR RWJYIZGYEWD\",\n\"MYR[RISGUFWF RT?S@TAU@T?TA\",\n\"MYR[RISGUFWF ROSUO\",\n\"MYR[RISGUFWF ROLUL\",\n\"E^J[JLKIMGPFZFSNVNXOYPZRZWYYXZV[R[PZOY\",\n\"H[SMPMNNMOLQLWMYNZP[S[UZVYWWWQVOUNSMPLNKMINGPFTFVG\",\n\"I[MUWU RK[RFY[ RRbSaR`QaRbR`\",\n\"I\\\\W[WPVNTMPMNN RWZU[P[NZMXMVNTPSUSWR RRbSaR`QaRbR`\",\n\"I[MUWU RK[RFY[ RRAT?U=T;R:P:\",\n\"I\\\\W[WPVNTMPMNN RWZU[P[NZMXMVNTPSUSWR RRHTFUDTBRAPA\",\n\"I[MUWU RK[RFY[ RU>X; RNAR>VA\",\n\"I\\\\W[WPVNTMPMNN RWZU[P[NZMXMVNTPSUSWR RUEXB RNHREVH\",\n\"I[MUWU RK[RFY[ RO>L; RNAR>VA\",\n\"I\\\\W[WPVNTMPMNN RWZU[P[NZMXMVNTPSUSWR ROELB RNHREVH\",\n\"I[MUWU RK[RFY[ RNAR>VA RXAZ?[=Z;X:V:\",\n\"I\\\\W[WPVNTMPMNN RWZU[P[NZMXMVNTPSUSWR RNHREVH RXHZF[DZBXAVA\",\n\"I[MUWU RK[RFY[ RNAR>VA RM<N;P:T<V;W:\",\n\"I\\\\W[WPVNTMPMNN RWZU[P[NZMXMVNTPSUSWR RNHREVH RMAN@P?TAV@W?\",\n\"I[MUWU RK[RFY[ RNAR>VA RRbSaR`QaRbR`\",\n\"I\\\\W[WPVNTMPMNN RWZU[P[NZMXMVNTPSUSWR RNHREVH RRbSaR`QaRbR`\",\n\"I[MUWU RK[RFY[ RN>O@QASAU@V> RT9Q<\",\n\"I\\\\W[WPVNTMPMNN RWZU[P[NZMXMVNTPSUSWR RNEOGQHSHUGVE RT>QA\",\n\"I[MUWU RK[RFY[ RN>O@QASAU@V> RP9S<\",\n\"I\\\\W[WPVNTMPMNN RWZU[P[NZMXMVNTPSUSWR RNEOGQHSHUGVE RP>SA\",\n\"I[MUWU RK[RFY[ RN>O@QASAU@V> RP>R<S:R8P7N7\",\n\"I\\\\W[WPVNTMPMNN RWZU[P[NZMXMVNTPSUSWR RNEOGQHSHUGVE RPERCSAR?P>N>\",\n\"I[MUWU RK[RFY[ RN>O@QASAU@V> RM<N;P:T<V;W:\",\n\"I\\\\W[WPVNTMPMNN RWZU[P[NZMXMVNTPSUSWR RNEOGQHSHUGVE RMAN@P?TAV@W?\",\n\"I[MUWU RK[RFY[ RN>O@QASAU@V> RRbSaR`QaRbR`\",\n\"I\\\\W[WPVNTMPMNN RWZU[P[NZMXMVNTPSUSWR RNEOGQHSHUGVE RRbSaR`QaRbR`\",\n\"H[MPTP RW[M[MFWF RRbSaR`QaRbR`\",\n\"I[VZT[P[NZMXMPNNPMTMVNWPWRMT RRbSaR`QaRbR`\",\n\"H[MPTP RW[M[MFWF RRAT?U=T;R:P:\",\n\"I[VZT[P[NZMXMPNNPMTMVNWPWRMT RRHTFUDTBRAPA\",\n\"H[MPTP RW[M[MFWF RMAN@P?TAV@W?\",\n\"I[VZT[P[NZMXMPNNPMTMVNWPWRMT RMHNGPFTHVGWF\",\n\"H[MPTP RW[M[MFWF RU>X; RNAR>VA\",\n\"I[VZT[P[NZMXMPNNPMTMVNWPWRMT RUEXB RNHREVH\",\n\"H[MPTP RW[M[MFWF RO>L; RNAR>VA\",\n\"I[VZT[P[NZMXMPNNPMTMVNWPWRMT ROELB RNHREVH\",\n\"H[MPTP RW[M[MFWF RNAR>VA RXAZ?[=Z;X:V:\",\n\"I[VZT[P[NZMXMPNNPMTMVNWPWRMT RNHREVH RXHZF[DZBXAVA\",\n\"H[MPTP RW[M[MFWF RNAR>VA RM<N;P:T<V;W:\",\n\"I[VZT[P[NZMXMPNNPMTMVNWPWRMT RNHREVH RMAN@P?TAV@W?\",\n\"H[MPTP RW[M[MFWF RNAR>VA RRbSaR`QaRbR`\",\n\"I[VZT[P[NZMXMPNNPMTMVNWPWRMT RNHREVH RRbSaR`QaRbR`\",\n\"MWR[RF RRAT?U=T;R:P:\",\n\"MWR[RM RRHTFUDTBRAPA\",\n\"MWR[RF RRbSaR`QaRbR`\",\n\"MWR[RM RRFQGRHSGRFRH RRbSaR`QaRbR`\",\n\"G]PFTFVGXIYMYTXXVZT[P[NZLXKTKMLINGPF RRbSaR`QaRbR`\",\n\"H[P[NZMYLWLQMONNPMSMUNVOWQWWVYUZS[P[ RRbSaR`QaRbR`\",\n\"G]PFTFVGXIYMYTXXVZT[P[NZLXKTKMLINGPF RRAT?U=T;R:P:\",\n\"H[P[NZMYLWLQMONNPMSMUNVOWQWWVYUZS[P[ RRHTFUDTBRAPA\",\n\"G]PFTFVGXIYMYTXXVZT[P[NZLXKTKMLINGPF RU>X; RNAR>VA\",\n\"H[P[NZMYLWLQMONNPMSMUNVOWQWWVYUZS[P[ RUEXB RNHREVH\",\n\"G]PFTFVGXIYMYTXXVZT[P[NZLXKTKMLINGPF RO>L; RNAR>VA\",\n\"H[P[NZMYLWLQMONNPMSMUNVOWQWWVYUZS[P[ ROELB RNHREVH\",\n\"G]PFTFVGXIYMYTXXVZT[P[NZLXKTKMLINGPF RNAR>VA RXAZ?[=Z;X:V:\",\n\"H[P[NZMYLWLQMONNPMSMUNVOWQWWVYUZS[P[ RNHREVH RXHZF[DZBXAVA\",\n\"G]PFTFVGXIYMYTXXVZT[P[NZLXKTKMLINGPF RNAR>VA RM<N;P:T<V;W:\",\n\"H[P[NZMYLWLQMONNPMSMUNVOWQWWVYUZS[P[ RNHREVH RMAN@P?TAV@W?\",\n\"G]PFTFVGXIYMYTXXVZT[P[NZLXKTKMLINGPF RNAR>VA RRbSaR`QaRbR`\",\n\"H[P[NZMYLWLQMONNPMSMUNVOWQWWVYUZS[P[ RNHREVH RRbSaR`QaRbR`\",\n\"G]PFTFVGXIYMYTXXVZT[P[NZLXKTKMLINGPF RVGXFYDXBWA RT>QA\",\n\"H[P[NZMYLWLQMONNPMSMUNVOWQWWVYUZS[P[ RUNWMXKWIVH RTEQH\",\n\"G]PFTFVGXIYMYTXXVZT[P[NZLXKTKMLINGPF RVGXFYDXBWA RP>SA\",\n\"H[P[NZMYLWLQMONNPMSMUNVOWQWWVYUZS[P[ RUNWMXKWIVH RPESH\",\n\"G]PFTFVGXIYMYTXXVZT[P[NZLXKTKMLINGPF RVGXFYDXBWA RRAT?U=T;R:P:\",\n\"H[P[NZMYLWLQMONNPMSMUNVOWQWWVYUZS[P[ RUNWMXKWIVH RRHTFUDTBRAPA\",\n\"G]PFTFVGXIYMYTXXVZT[P[NZLXKTKMLINGPF RVGXFYDXBWA RWAVBTCPANBMC\",\n\"H[P[NZMYLWLQMONNPMSMUNVOWQWWVYUZS[P[ RUNWMXKWIVH RWHVITJPHNIMJ\",\n\"G]PFTFVGXIYMYTXXVZT[P[NZLXKTKMLINGPF RVGXFYDXBWA RRbSaR`QaRbR`\",\n\"H[P[NZMYLWLQMONNPMSMUNVOWQWWVYUZS[P[ RUNWMXKWIVH RRbSaR`QaRbR`\",\n\"G]LFLWMYNZP[T[VZWYXWXF RRbSaR`QaRbR`\",\n\"H[VMV[ RMMMXNZP[S[UZVY RRbSaR`QaRbR`\",\n\"G]LFLWMYNZP[T[VZWYXWXF RRAT?U=T;R:P:\",\n\"H[VMV[ RMMMXNZP[S[UZVY RRHTFUDTBRAPA\",\n\"G]LFLWMYNZP[T[VZWYXWXF RXFZE[CZAY@ RT>QA\",\n\"H[VMV[ RMMMXNZP[S[UZVY RVMXLYJXHWG RTEQH\",\n\"G]LFLWMYNZP[T[VZWYXWXF RXFZE[CZAY@ RP>SA\",\n\"H[VMV[ RMMMXNZP[S[UZVY RVMXLYJXHWG RPESH\",\n\"G]LFLWMYNZP[T[VZWYXWXF RXFZE[CZAY@ RRAT?U=T;R:P:\",\n\"H[VMV[ RMMMXNZP[S[UZVY RVMXLYJXHWG RRHTFUDTBRAPA\",\n\"G]LFLWMYNZP[T[VZWYXWXF RXFZE[CZAY@ RWAVBTCPANBMC\",\n\"H[VMV[ RMMMXNZP[S[UZVY RVMXLYJXHWG RWHVITJPHNIMJ\",\n\"G]LFLWMYNZP[T[VZWYXWXF RXFZE[CZAY@ RRbSaR`QaRbR`\",\n\"H[VMV[ RMMMXNZP[S[UZVY RVMXLYJXHWG RRbSaR`QaRbR`\",\n\"I[RQR[ RKFRQYF RP>SA\",\n\"JZMMR[ RWMR[P`OaMb RPESH\",\n\"I[RQR[ RKFRQYF RRbSaR`QaRbR`\",\n\"JZMMR[ RWMR[P`OaMb RVbWaV`UaVbV`\",\n\"I[RQR[ RKFRQYF RRAT?U=T;R:P:\",\n\"JZMMR[ RWMR[P`OaMb RRHTFUDTBRAPA\",\n\"I[RQR[ RKFRQYF RMAN@P?TAV@W?\",\n\"JZMMR[ RWMR[P`OaMb RMHNGPFTHVGWF\",\n\"E\\\\PFP[ RJFJ[Z[\",\n\"J[MMWM ROFOXPZR[ RX[VZUXUF\",\n\"G]QFOGMJLMLWMYNZP[T[VZXXYVYTXPVMUL\",\n\"H[QMONNOMQMWNYOZQ[S[UZVYWWWUVSURSQ\",\n\"G[KFRT RYFRTPXOZM[KZJXKVMUOVPX\",\n\"JZMMR[ RWMR[Q_PaNbLaK_L]N\\\\P]Q_\",\n\"H]YMVWUYTZR[P[NZMYLVLRMONNPMRMTNUOVQWXXZZ[ RQHRHSGSE\",\n\"H]YMVWUYTZR[P[NZMYLVLRMONNPMRMTNUOVQWXXZZ[ RQEQGRHSH\",\n\"H]YMVWUYTZR[P[NZMYLVLRMONNPMRMTNUOVQWXXZZ[ RTEWH RMHNHOGOE\",\n\"H]YMVWUYTZR[P[NZMYLVLRMONNPMRMTNUOVQWXXZZ[ RTEWH RMEMGNHOH\",\n\"H]YMVWUYTZR[P[NZMYLVLRMONNPMRMTNUOVQWXXZZ[ RXEUH RMHNHOGOE\",\n\"H]YMVWUYTZR[P[NZMYLVLRMONNPMRMTNUOVQWXXZZ[ RXEUH RMEMGNHOH\",\n\"H]YMVWUYTZR[P[NZMYLVLRMONNPMRMTNUOVQWXXZZ[ RQHRHSGSE RMAN@P?TAV@W?\",\n\"H]YMVWUYTZR[P[NZMYLVLRMONNPMRMTNUOVQWXXZZ[ RQEQGRHSH RMAN@P?TAV@W?\",\n\"G[MUWU RK[RFY[ RJHKHLGLE\",\n\"G[MUWU RK[RFY[ RJEJGKHLH\",\n\"?[MUWU RK[RFY[ RIELH RBHCHDGDE\",\n\"?[MUWU RK[RFY[ RIELH RBEBGCHDH\",\n\"?[MUWU RK[RFY[ RMEJH RBHCHDGDE\",\n\"?[MUWU RK[RFY[ RMEJH RBEBGCHDH\",\n\"D[MUWU RK[RFY[ RFAG@I?MAO@P? RJHKHLGLE\",\n\"D[MUWU RK[RFY[ RFAG@I?MAO@P? RJEJGKHLH\",\n\"IZPTNUMWMXNZP[T[VZ RRTPTNSMQMPNNPMTMVN RQHRHSGSE\",\n\"IZPTNUMWMXNZP[T[VZ RRTPTNSMQMPNNPMTMVN RQEQGRHSH\",\n\"IZPTNUMWMXNZP[T[VZ RRTPTNSMQMPNNPMTMVN RTEWH RMHNHOGOE\",\n\"IZPTNUMWMXNZP[T[VZ RRTPTNSMQMPNNPMTMVN RTEWH RMEMGNHOH\",\n\"IZPTNUMWMXNZP[T[VZ RRTPTNSMQMPNNPMTMVN RXEUH RMHNHOGOE\",\n\"IZPTNUMWMXNZP[T[VZ RRTPTNSMQMPNNPMTMVN RXEUH RMEMGNHOH\",\n23,\n23,\n\"B[MPTP RW[M[MFWF REHFHGGGE\",\n\"B[MPTP RW[M[MFWF REEEGFHGH\",\n\":[MPTP RW[M[MFWF RDEGH R=H>H?G?E\",\n\":[MPTP RW[M[MFWF RDEGH R=E=G>H?H\",\n\":[MPTP RW[M[MFWF RHEEH R=H>H?G?E\",\n\":[MPTP RW[M[MFWF RHEEH R=E=G>H?H\",\n23,\n23,\n\"I\\\\NMN[ RNOONQMTMVNWPWb RQHRHSGSE\",\n\"I\\\\NMN[ RNOONQMTMVNWPWb RQEQGRHSH\",\n\"I\\\\NMN[ RNOONQMTMVNWPWb RTEWH RMHNHOGOE\",\n\"I\\\\NMN[ RNOONQMTMVNWPWb RTEWH RMEMGNHOH\",\n\"I\\\\NMN[ RNOONQMTMVNWPWb RXEUH RMHNHOGOE\",\n\"I\\\\NMN[ RNOONQMTMVNWPWb RXEUH RMEMGNHOH\",\n\"I\\\\NMN[ RNOONQMTMVNWPWb RQHRHSGSE RMAN@P?TAV@W?\",\n\"I\\\\NMN[ RNOONQMTMVNWPWb RQEQGRHSH RMAN@P?TAV@W?\",\n\"A]L[LF RLPXP RX[XF RDHEHFGFE\",\n\"A]L[LF RLPXP RX[XF RDEDGEHFH\",\n\"9]L[LF RLPXP RX[XF RCEFH R<H=H>G>E\",\n\"9]L[LF RLPXP RX[XF RCEFH R<E<G=H>H\",\n\"9]L[LF RLPXP RX[XF RGEDH R<H=H>G>E\",\n\"9]L[LF RLPXP RX[XF RGEDH R<E<G=H>H\",\n\">]L[LF RLPXP RX[XF R@AA@C?GAI@J? RDHEHFGFE\",\n\">]L[LF RLPXP RX[XF R@AA@C?GAI@J? RDEDGEHFH\",\n\"MXRMRXSZU[ RQHRHSGSE\",\n\"MXRMRXSZU[ RQEQGRHSH\",\n\"MXRMRXSZU[ RTEWH RMHNHOGOE\",\n\"MXRMRXSZU[ RTEWH RMEMGNHOH\",\n\"MXRMRXSZU[ RXEUH RMHNHOGOE\",\n\"MXRMRXSZU[ RXEUH RMEMGNHOH\",\n\"MXRMRXSZU[ RQHRHSGSE RMAN@P?TAV@W?\",\n\"MXRMRXSZU[ RQEQGRHSH RMAN@P?TAV@W?\",\n\"GWR[RF RJHKHLGLE\",\n\"GWR[RF RJEJGKHLH\",\n\"?WR[RF RIELH RBHCHDGDE\",\n\"?WR[RF RIELH RBEBGCHDH\",\n\"?WR[RF RMEJH RBHCHDGDE\",\n\"?WR[RF RMEJH RBEBGCHDH\",\n\"DWR[RF RFAG@I?MAO@P? RJHKHLGLE\",\n\"DWR[RF RFAG@I?MAO@P? RJEJGKHLH\",\n\"H[P[NZMYLWLQMONNPMSMUNVOWQWWVYUZS[P[ RQHRHSGSE\",\n\"H[P[NZMYLWLQMONNPMSMUNVOWQWWVYUZS[P[ RQEQGRHSH\",\n\"H[P[NZMYLWLQMONNPMSMUNVOWQWWVYUZS[P[ RTEWH RMHNHOGOE\",\n\"H[P[NZMYLWLQMONNPMSMUNVOWQWWVYUZS[P[ RTEWH RMEMGNHOH\",\n\"H[P[NZMYLWLQMONNPMSMUNVOWQWWVYUZS[P[ RXEUH RMHNHOGOE\",\n\"H[P[NZMYLWLQMONNPMSMUNVOWQWWVYUZS[P[ RXEUH RMEMGNHOH\",\n23,\n23,\n\"B]PFTFVGXIYMYTXXVZT[P[NZLXKTKMLINGPF REHFHGGGE\",\n\"B]PFTFVGXIYMYTXXVZT[P[NZLXKTKMLINGPF REEEGFHGH\",\n\":]PFTFVGXIYMYTXXVZT[P[NZLXKTKMLINGPF RDEGH R=H>H?G?E\",\n\":]PFTFVGXIYMYTXXVZT[P[NZLXKTKMLINGPF RDEGH R=E=G>H?H\",\n\":]PFTFVGXIYMYTXXVZT[P[NZLXKTKMLINGPF RHEEH R=H>H?G?E\",\n\":]PFTFVGXIYMYTXXVZT[P[NZLXKTKMLINGPF RHEEH R=E=G>H?H\",\n23,\n23,\n\"H[MMMXNZP[S[UZVYWWWPVNUM RQHRHSGSE\",\n\"H[MMMXNZP[S[UZVYWWWPVNUM RQEQGRHSH\",\n\"H[MMMXNZP[S[UZVYWWWPVNUM RTEWH RMHNHOGOE\",\n\"H[MMMXNZP[S[UZVYWWWPVNUM RTEWH RMEMGNHOH\",\n\"H[MMMXNZP[S[UZVYWWWPVNUM RXEUH RMHNHOGOE\",\n\"H[MMMXNZP[S[UZVYWWWPVNUM RXEUH RMEMGNHOH\",\n\"H[MMMXNZP[S[UZVYWWWPVNUM RQHRHSGSE RMAN@P?TAV@W?\",\n\"H[MMMXNZP[S[UZVYWWWPVNUM RQEQGRHSH RMAN@P?TAV@W?\",\n23,\n\"@[RQR[ RKFRQYF RCECGDHEH\",\n23,\n\"8[RQR[ RKFRQYF RBEEH R;E;G<H=H\",\n23,\n\"8[RQR[ RKFRQYF RFECH R;E;G<H=H\",\n23,\n\"=[RQR[ RKFRQYF R?A@@B?FAH@I? RCECGDHEH\",\n\"G]RTRX RMMLNKPKXLZN[O[QZRXSZU[V[XZYXYPXNWM RQHRHSGSE\",\n\"G]RTRX RMMLNKPKXLZN[O[QZRXSZU[V[XZYXYPXNWM RQEQGRHSH\",\n\"G]RTRX RMMLNKPKXLZN[O[QZRXSZU[V[XZYXYPXNWM RTEWH RMHNHOGOE\",\n\"G]RTRX RMMLNKPKXLZN[O[QZRXSZU[V[XZYXYPXNWM RTEWH RMEMGNHOH\",\n\"G]RTRX RMMLNKPKXLZN[O[QZRXSZU[V[XZYXYPXNWM RXEUH RMHNHOGOE\",\n\"G]RTRX RMMLNKPKXLZN[O[QZRXSZU[V[XZYXYPXNWM RXEUH RMEMGNHOH\",\n\"G]RTRX RMMLNKPKXLZN[O[QZRXSZU[V[XZYXYPXNWM RQHRHSGSE RMAN@P?TAV@W?\",\n\"G]RTRX RMMLNKPKXLZN[O[QZRXSZU[V[XZYXYPXNWM RQEQGRHSH RMAN@P?TAV@W?\",\n\"@^J[O[OWMVKTJQJLKIMGPFTFWGYIZLZQYTWVUWU[Z[ RCHDHEGEE\",\n\"@^J[O[OWMVKTJQJLKIMGPFTFWGYIZLZQYTWVUWU[Z[ RCECGDHEH\",\n\"8^J[O[OWMVKTJQJLKIMGPFTFWGYIZLZQYTWVUWU[Z[ RBEEH R;H<H=G=E\",\n\"8^J[O[OWMVKTJQJLKIMGPFTFWGYIZLZQYTWVUWU[Z[ RBEEH R;E;G<H=H\",\n\"8^J[O[OWMVKTJQJLKIMGPFTFWGYIZLZQYTWVUWU[Z[ RFECH R;H<H=G=E\",\n\"8^J[O[OWMVKTJQJLKIMGPFTFWGYIZLZQYTWVUWU[Z[ RFECH R;E;G<H=H\",\n\"=^J[O[OWMVKTJQJLKIMGPFTFWGYIZLZQYTWVUWU[Z[ R?A@@B?FAH@I? RCHDHEGEE\",\n\"=^J[O[OWMVKTJQJLKIMGPFTFWGYIZLZQYTWVUWU[Z[ R?A@@B?FAH@I? RCECGDHEH\",\n39,\n39,\n40,\n40,\n41,\n41,\n42,\n42,\n29,\n29,\n44,\n44,\n45,\n45,\n23,\n23,\n\"H]YMVWUYTZR[P[NZMYLVLRMONNPMRMTNUOVQWXXZZ[ RQHRHSGSE RR`RcSdTd\",\n\"H]YMVWUYTZR[P[NZMYLVLRMONNPMRMTNUOVQWXXZZ[ RQEQGRHSH RR`RcSdTd\",\n\"H]YMVWUYTZR[P[NZMYLVLRMONNPMRMTNUOVQWXXZZ[ RTEWH RMHNHOGOE RR`RcSdTd\",\n\"H]YMVWUYTZR[P[NZMYLVLRMONNPMRMTNUOVQWXXZZ[ RTEWH RMEMGNHOH RR`RcSdTd\",\n\"H]YMVWUYTZR[P[NZMYLVLRMONNPMRMTNUOVQWXXZZ[ RXEUH RMHNHOGOE RR`RcSdTd\",\n\"H]YMVWUYTZR[P[NZMYLVLRMONNPMRMTNUOVQWXXZZ[ RXEUH RMEMGNHOH RR`RcSdTd\",\n\"H]YMVWUYTZR[P[NZMYLVLRMONNPMRMTNUOVQWXXZZ[ RQHRHSGSE RMAN@P?TAV@W? RR`RcSdTd\",\n\"H]YMVWUYTZR[P[NZMYLVLRMONNPMRMTNUOVQWXXZZ[ RQEQGRHSH RMAN@P?TAV@W? RR`RcSdTd\",\n\"G[MUWU RK[RFY[ RJHKHLGLE RR`RcSdTd\",\n\"G[MUWU RK[RFY[ RJEJGKHLH RR`RcSdTd\",\n\"?[MUWU RK[RFY[ RIELH RBHCHDGDE RR`RcSdTd\",\n\"?[MUWU RK[RFY[ RIELH RBEBGCHDH RR`RcSdTd\",\n\"?[MUWU RK[RFY[ RMEJH RBHCHDGDE RR`RcSdTd\",\n\"?[MUWU RK[RFY[ RMEJH RBEBGCHDH RR`RcSdTd\",\n\"D[MUWU RK[RFY[ RFAG@I?MAO@P? RJHKHLGLE RR`RcSdTd\",\n\"D[MUWU RK[RFY[ RFAG@I?MAO@P? RJEJGKHLH RR`RcSdTd\",\n\"I\\\\NMN[ RNOONQMTMVNWPWb RQHRHSGSE RN`NcOdPd\",\n\"I\\\\NMN[ RNOONQMTMVNWPWb RQEQGRHSH RN`NcOdPd\",\n\"I\\\\NMN[ RNOONQMTMVNWPWb RTEWH RMHNHOGOE RN`NcOdPd\",\n\"I\\\\NMN[ RNOONQMTMVNWPWb RTEWH RMEMGNHOH RN`NcOdPd\",\n\"I\\\\NMN[ RNOONQMTMVNWPWb RXEUH RMHNHOGOE RN`NcOdPd\",\n\"I\\\\NMN[ RNOONQMTMVNWPWb RXEUH RMEMGNHOH RN`NcOdPd\",\n\"I\\\\NMN[ RNOONQMTMVNWPWb RQHRHSGSE RMAN@P?TAV@W? RN`NcOdPd\",\n\"I\\\\NMN[ RNOONQMTMVNWPWb RQEQGRHSH RMAN@P?TAV@W? RN`NcOdPd\",\n\"N]L[LF RLPXP RX[XF RR`RcSdTd\",\n\"A]L[LF RLPXP RX[XF RDEDGEHFH RR`RcSdTd\",\n\"9]L[LF RLPXP RX[XF RCEFH R<H=H>G>E RR`RcSdTd\",\n\"9]L[LF RLPXP RX[XF RCEFH R<E<G=H>H RR`RcSdTd\",\n\"9]L[LF RLPXP RX[XF RGEDH R<H=H>G>E RR`RcSdTd\",\n\"9]L[LF RLPXP RX[XF RGEDH R<E<G=H>H RR`RcSdTd\",\n\">]L[LF RLPXP RX[XF R@AA@C?GAI@J? RDHEHFGFE RR`RcSdTd\",\n\">]L[LF RLPXP RX[XF R@AA@C?GAI@J? RDEDGEHFH RR`RcSdTd\",\n\"G]RTRX RMMLNKPKXLZN[O[QZRXSZU[V[XZYXYPXNWM RQHRHSGSE RR`RcSdTd\",\n\"G]RTRX RMMLNKPKXLZN[O[QZRXSZU[V[XZYXYPXNWM RQEQGRHSH RR`RcSdTd\",\n\"G]RTRX RMMLNKPKXLZN[O[QZRXSZU[V[XZYXYPXNWM RTEWH RMHNHOGOE RR`RcSdTd\",\n\"G]RTRX RMMLNKPKXLZN[O[QZRXSZU[V[XZYXYPXNWM RTEWH RMEMGNHOH RR`RcSdTd\",\n\"G]RTRX RMMLNKPKXLZN[O[QZRXSZU[V[XZYXYPXNWM RXEUH RMHNHOGOE RR`RcSdTd\",\n\"G]RTRX RMMLNKPKXLZN[O[QZRXSZU[V[XZYXYPXNWM RXEUH RMEMGNHOH RR`RcSdTd\",\n\"G]RTRX RMMLNKPKXLZN[O[QZRXSZU[V[XZYXYPXNWM RQHRHSGSE RMAN@P?TAV@W? RR`RcSdTd\",\n\"G]RTRX RMMLNKPKXLZN[O[QZRXSZU[V[XZYXYPXNWM RQEQGRHSH RMAN@P?TAV@W? RR`RcSdTd\",\n\"@^J[O[OWMVKTJQJLKIMGPFTFWGYIZLZQYTWVUWU[Z[ RCHDHEGEE RR`RcSdTd\",\n\"@^J[O[OWMVKTJQJLKIMGPFTFWGYIZLZQYTWVUWU[Z[ RCECGDHEH RR`RcSdTd\",\n\"8^J[O[OWMVKTJQJLKIMGPFTFWGYIZLZQYTWVUWU[Z[ RBEEH R;H<H=G=E RR`RcSdTd\",\n\"8^J[O[OWMVKTJQJLKIMGPFTFWGYIZLZQYTWVUWU[Z[ RBEEH R;E;G<H=H RR`RcSdTd\",\n\"8^J[O[OWMVKTJQJLKIMGPFTFWGYIZLZQYTWVUWU[Z[ RFECH R;H<H=G=E RR`RcSdTd\",\n\"8^J[O[OWMVKTJQJLKIMGPFTFWGYIZLZQYTWVUWU[Z[ RFECH R;E;G<H=H RR`RcSdTd\",\n\"=^J[O[OWMVKTJQJLKIMGPFTFWGYIZLZQYTWVUWU[Z[ R?A@@B?FAH@I? RCHDHEGEE RR`RcSdTd\",\n\"=^J[O[OWMVKTJQJLKIMGPFTFWGYIZLZQYTWVUWU[Z[ R?A@@B?FAH@I? RCECGDHEH RR`RcSdTd\",\n\"H]YMVWUYTZR[P[NZMYLVLRMONNPMRMTNUOVQWXXZZ[ RNEOGQHSHUGVE\",\n\"H]YMVWUYTZR[P[NZMYLVLRMONNPMRMTNUOVQWXXZZ[ RMGWG\",\n\"H]YMVWUYTZR[P[NZMYLVLRMONNPMRMTNUOVQWXXZZ[ RPESH RR`RcSdTd\",\n\"H]YMVWUYTZR[P[NZMYLVLRMONNPMRMTNUOVQWXXZZ[ RR`RcSdTd\",\n\"H]YMVWUYTZR[P[NZMYLVLRMONNPMRMTNUOVQWXXZZ[ RTEQH RR`RcSdTd\",\n23,\n\"H]YMVWUYTZR[P[NZMYLVLRMONNPMRMTNUOVQWXXZZ[ RMHNGPFTHVGWF\",\n\"H]YMVWUYTZR[P[NZMYLVLRMONNPMRMTNUOVQWXXZZ[ RMHNGPFTHVGWF RR`RcSdTd\",\n30,\n\"I[MUWU RK[RFY[ RM@W@\",\n\"G[MUWU RK[RFY[ RIELH\",\n\"G[MUWU RK[RFY[ RMEJH\",\n\"I[MUWU RK[RFY[ RR`RcSdTd\",\n\"NVQHRHSGSE\",\n\"NVR`RcSdTd\",\n\"NVQHRHSGSE\",\n\"KZMHNGPFTHVGWF\",\n\"LXMCNBPATCVBWA RNFOGNHMGNFNH RVFWGVHUGVFVH\",\n\"I\\\\NMN[ RNOONQMTMVNWPWb RPESH RN`NcOdPd\",\n\"I\\\\NMN[ RNOONQMTMVNWPWb RN`NcOdPd\",\n\"I\\\\NMN[ RNOONQMTMVNWPWb RTEQH RN`NcOdPd\",\n23,\n\"I\\\\NMN[ RNOONQMTMVNWPWb RMHNGPFTHVGWF\",\n\"I\\\\NMN[ RNOONQMTMVNWPWb RMHNGPFTHVGWF RN`NcOdPd\",\n\"B[MPTP RW[M[MFWF RDEGH\",\n\"B[MPTP RW[M[MFWF RHEEH\",\n\"A]L[LF RLPXP RX[XF RCEFH\",\n\"A]L[LF RLPXP RX[XF RGEDH\",\n\"G]L[LF RLPXP RX[XF RR`RcSdTd\",\n\"JZTEWH RMHNHOGOE\",\n\"JZXEUH RMHNHOGOE\",\n\"NVQHRHSGSE RMAN@P?TAV@W?\",\n\"MXRMRXSZU[ RNEOGQHSHUGVE\",\n\"MXRMRXSZU[ RMGWG\",\n\"MXRMRXSZU[ RNFOGNHMGNFNH RVFWGVHUGVFVH RP>SA\",\n\"MXRMRXSZU[ RNFOGNHMGNFNH RVFWGVHUGVFVH RT>QA\",\n23,\n23,\n\"MXRMRXSZU[ RMHNGPFTHVGWF\",\n\"MXRMRXSZU[ RMCNBPATCVBWA RNFOGNHMGNFNH RVFWGVHUGVFVH\",\n\"MWR[RF RN>O@QASAU@V>\",\n\"MWR[RF RM@W@\",\n\"GWR[RF RIELH\",\n\"GWR[RF RMEJH\",\n23,\n\"JZTEWH RMEMGNHOH\",\n\"JZXEUH RMEMGNHOH\",\n\"NVQEQGRHSH RMAN@P?TAV@W?\",\n\"H[MMMXNZP[S[UZVYWWWPVNUM RNEOGQHSHUGVE\",\n\"H[MMMXNZP[S[UZVYWWWPVNUM RMGWG\",\n\"H[MMMXNZP[S[UZVYWWWPVNUM RNFOGNHMGNFNH RVFWGVHUGVFVH RP>SA\",\n\"H[MMMXNZP[S[UZVYWWWPVNUM RNFOGNHMGNFNH RVFWGVHUGVFVH RT>QA\",\n\"H\\\\MbMQNOONQMTMVNWOXQXWWYVZT[Q[OZMX RQHRHSGSE\",\n\"H\\\\MbMQNOONQMTMVNWOXQXWWYVZT[Q[OZMX RQEQGRHSH\",\n\"H[MMMXNZP[S[UZVYWWWPVNUM RMHNGPFTHVGWF\",\n\"H[MMMXNZP[S[UZVYWWWPVNUM RMCNBPATCVBWA RNFOGNHMGNFNH RVFWGVHUGVFVH\",\n\"I[RQR[ RKFRQYF RN>O@QASAU@V>\",\n\"I[RQR[ RKFRQYF RM@W@\",\n\"@[RQR[ RKFRQYF RBEEH\",\n\"@[RQR[ RKFRQYF RFECH\",\n\"A\\\\L[LFTFVGWHXJXMWOVPTQLQ RDEDGEHFH\",\n\"LXNFOGNHMGNFNH RVFWGVHUGVFVH RP>SA\",\n\"LXNFOGNHMGNFNH RVFWGVHUGVFVH RT>QA\",\n16,\n23,\n23,\n\"G]RTRX RMMLNKPKXLZN[O[QZRXSZU[V[XZYXYPXNWM RPESH RR`RcSdTd\",\n\"G]RTRX RMMLNKPKXLZN[O[QZRXSZU[V[XZYXYPXNWM RR`RcSdTd\",\n\"G]RTRX RMMLNKPKXLZN[O[QZRXSZU[V[XZYXYPXNWM RTEQH RR`RcSdTd\",\n23,\n\"G]RTRX RMMLNKPKXLZN[O[QZRXSZU[V[XZYXYPXNWM RMHNGPFTHVGWF\",\n\"G]RTRX RMMLNKPKXLZN[O[QZRXSZU[V[XZYXYPXNWM RMHNGPFTHVGWF RR`RcSdTd\",\n\"B]PFTFVGXIYMYTXXVZT[P[NZLXKTKMLINGPF RDEGH\",\n\"B]PFTFVGXIYMYTXXVZT[P[NZLXKTKMLINGPF RHEEH\",\n\"@^J[O[OWMVKTJQJLKIMGPFTFWGYIZLZQYTWVUWU[Z[ RBEEH\",\n\"@^J[O[OWMVKTJQJLKIMGPFTFWGYIZLZQYTWVUWU[Z[ RFECH\",\n\"F^J[O[OWMVKTJQJLKIMGPFTFWGYIZLZQYTWVUWU[Z[ RR`RcSdTd\",\n25,\n\"NVQEQGRHSH\",\n23,\n\"F^\",\n\"LX\",\n\"F^\",\n\"LX\",\n\"NV\",\n\"OU\",\n\"PT\",\n\"H\\\\\",\n\"MW\",\n\"PT\",\n\"QS\",\n24,\n24,\n24,\n24,\n24,\n46,\n46,\n\"H\\\\JRZR\",\n\"LXVTNT\",\n\"F^IT[T\",\n\"F^IT[T\",\n\"H\\\\ODOb RUDUb\",\n\"JZJbZb RJ]Z]\",\n\"MWQGQFRDSC\",\n\"MWSFSGRIQJ\",\n\"MWSZS[R]Q^\",\n\"MWQFQGRISJ\",\n\"JZUGUFVDWC RMGMFNDOC\",\n\"JZOFOGNIMJ RWFWGVIUJ\",\n\"JZOZO[N]M^ RWZW[V]U^\",\n\"JZUFUGVIWJ RMFMGNIOJ\",\n\"I[MMWM RRFRb\",\n\"I[M[W[ RMMWM RRFRb\",\n\"E_PQPU RQUQQ RRPRV RSUSQ RTQTU RPTRVTT RPRRPTR RPQRPTQUSTURVPUOSPQ\",\n\"E_PPPV RQQQU RRQRU RSSUS RSRST ROPUSOV RVSOWOOVS\",\n\"MWRYSZR[QZRYR[\",\n\"MaRYSZR[QZRYR[ R\\\\Y]Z\\\\[[Z\\\\Y\\\\[\",\n\"MkRYSZR[QZRYR[ R\\\\Y]Z\\\\[[Z\\\\Y\\\\[ RfYgZf[eZfYf[\",\n26,\n24,\n24,\n24,\n24,\n24,\n24,\n24,\n24,\n\"FjJ[ZF RMFOGPIOKMLKKJIKGMF RcUeVfXeZc[aZ`XaVcU RYZZXYVWUUVTXUZW[YZ\",\n\"FvJ[ZF RMFOGPIOKMLKKJIKGMF RcUeVfXeZc[aZ`XaVcU RoUqVrXqZo[mZlXmVoU RYZZXYVWUUVTXUZW[YZ\",\n\"MWTFQL\",\n\"JZQFNL RWFTL\",\n\"G]NFKL RTFQL RZFWL\",\n\"MWPFSL\",\n\"JZSFVL RMFPL\",\n\"G]VFYL RPFSL RJFML\",\n\"LXVcR`Nc\",\n\"KYUMOSUY\",\n\"KYOMUSOY\",\n\"E_LMXY RXMLY RKRLSKTJSKRKT RRYSZR[QZRYR[ RRKSLRMQLRKRM RYRZSYTXSYRYT\",\n\"MaRYSZR[QZRYR[ RRSQGRFSGRSRF R\\\\Y]Z\\\\[[Z\\\\Y\\\\[ R\\\\S[G\\\\F]G\\\\S\\\\F\",\n\"I[QFQS RQYRZQ[PZQYQ[ RQYRZQ[PZQYQ[ RMGOFTFVGWIWKVMUNSORPQRQS RMGOFTFVGWIWKVMUNSORPQRQS\",\n\"E_JGZG\",\n\"OUb`aa^c\\\\dYeTfPfKeHdFcCaB`\",\n\"OUBFCEFCHBKAP@T@YA\\\\B^CaEbF\",\n\"E_N_VW RV_R[\",\n\"CaKRKW RRFRK RYRYW RFUKWPU RH[KWN[ RMIRKWI ROORKUO RTUYW^U RV[YW\\\\[\",\n46,\n1,\n\"KYQSVS RVbQbQDVD\",\n\"KYSSNS RNbSbSDND\",\n\"ImQYRZQ[PZQYQ[ RMGOFTFVGWIWKVMUNSORPQRQS RcYdZc[bZcYc[ R_GaFfFhGiIiKhMgNeOdPcRcS\",\n\"IeQYRZQ[PZQYQ[ RMGOFTFVGWIWKVMUNSORPQRQS R`YaZ`[_Z`Y`[ R`S_G`FaG`S`F\",\n\"MiRYSZR[QZRYR[ RRSQGRFSGRSRF R_Y`Z_[^Z_Y_[ R[G]FbFdGeIeKdMcNaO`P_R_S\",\n\"KYNMVMPb\",\n\"G^NMN[ RUMUXVZX[ RJMWMYNZP\",\n\"H\\\\NQNU RWPWV RPVPPOQOUPV RQPPPNQMSNUPVQVQP\",\n\"H\\\\VQVU RMPMV RTVTPUQUUTV RSPTPVQWSVUTVSVSP\",\n\"JZR[RV RWXRVMX RURRVOR\",\n\"MWQZQ[R]S^ RRNQORPSORNRP\",\n\"OUBFCEFCHBKAP@T@YA\\\\B^CaEbF Rb`aa^c\\\\dYeTfPfKeHdFcCaB`\",\n\"JZRFRK RMIRKWI ROORKUO RRFRK RWIRKMI RUORKOO\",\n\"JZM^WB RNFOGNHMGNFNH RVYWZV[UZVYV[\",\n\"E_JSKRNQQRSTVUYTZS\",\n\">fB^B]C[EZOZQYRWSYUZ_Za[b]b^\",\n\"E_JSZS RR[RK RLMXY RXMLY\",\n\"E_LRMSLTKSLRLT RXYYZX[WZXYX[ RXKYLXMWLXKXM\",\n\"D`KFHL RQFNL RWFTL R]FZL\",\n\"E_KRLSKTJSKRKT RRYSZR[QZRYR[ RRKSLRMQLRKRM RYRZSYTXSYRYT\",\n\"E_LXMYLZKYLXLZ RLLMMLNKMLLLN RRRSSRTQSRRRT RXXYYXZWYXXXZ RXLYMXNWMXLXN\",\n\"MWRYSZR[QZRYR[ RRNSORPQORNRP\",\n\"E_KRLSKTJSKRKT RRYSZR[QZRYR[ RRKSLRMQLRKRM RYRZSYTXSYRYT\",\n\"E_JSZS RR[RK RLXMYLZKYLXLZ RLLMMLNKMLLLN RXXYYXZWYXXXZ RXLYMXNWMXLXN\",\n\"CaR\\\\S]R^Q]R\\\\R^ RRRSSRTQSRRRT RRHSIRJQIRHRJ\",\n\"CaR^S_R`Q_R^R` RRVSWRXQWRVRX RRNSORPQORNRP RRFSGRHQGRFRH\",\n\"OU\",\n24,\n24,\n24,\n24,\n24,\n23,\n23,\n23,\n23,\n23,\n24,\n24,\n24,\n24,\n24,\n24,\n\"JZQ@S@UAVDVJUMSNQNOMNJNDOAQ@\",\n\"NVRDRN RR=Q>R?S>R=R?\",\n23,\n23,\n\"JZUFUN RQ@NJWJ\",\n\"JZV@O@NFPESEUFVHVKUMSNPNNM\",\n\"JZNHOFQESEUFVHVKUMSNQNOMNKNFOCPAR@U@\",\n\"JZM@W@PN\",\n\"JZQFOENCOAQ@S@UAVCUESFQFOGNINKOMQNSNUMVKVIUGSF\",\n\"JZVFUHSIQIOHNFNCOAQ@S@UAVCVHUKTMRNON\",\n\"I[LHXH RRBRN\",\n\"I[LHXH\",\n\"I[LJXJ RLFXF\",\n\"MWT=S>RAQFQJROSRTS\",\n\"MWP=Q>RASFSJROQRPS\",\n\"KZODON ROEQDSDUEVGVN\",\n\"JZQSSSUTVWV]U`SaQaO`N]NWOTQS\",\n\"JZVaNa RNVPURSRa\",\n\"JZNTPSSSUTVVVXUZNaVa\",\n\"JZNSVSRXSXUYV[V^U`SaPaN`\",\n\"JZUYUa RQSN]W]\",\n\"JZVSOSNYPXSXUYV[V^U`SaPaN`\",\n\"JZN[OYQXSXUYV[V^U`SaQaO`N^NYOVPTRSUS\",\n\"JZMSWSPa\",\n\"JZQYOXNVOTQSSSUTVVUXSYQYOZN\\\\N^O`QaSaU`V^V\\\\UZSY\",\n\"JZVYU[S\\\\Q\\\\O[NYNVOTQSSSUTVVV[U^T`RaOa\",\n\"I[L[X[ RRURa\",\n\"I[L[X[\",\n\"I[L]X] RLYXY\",\n\"MWTPSQRTQYQ]RbSeTf\",\n\"MWPPQQRTSYS]RbQePf\",\n24,\n\"KZOXQWSWUXVZVa RV`TaQaO`N^O\\\\Q[V[\",\n\"LYV`TaRaP`O^OZPXRWSWUXVZV[O\\\\\",\n\"KYQaO`N^NZOXQWSWUXVZV^U`SaQa\",\n\"KYNWVa RVWNa\",\n\"LYOXQWSWUXVZV^U`SaRaP`O^O]V\\\\\",\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n\"F[XMPMP[X[ RTGRFNFLGKHJJJPKRLSNTUT\",\n\"F[WYVZS[Q[NZLXKVJRJOKKLINGQFSFVGWH RSBG_ RZBN_\",\n\"F[WYVZS[Q[NZLXKVJRJOKKLINGQFSFVGWH RR[RM RRQSOTNVMXM\",\n\"HZTPMP RM[MFWF RJVRV\",\n\"H[LMTM RL[W[ RO[OIPGRFUFWG RLSTS\",\n\"D`I[IM RIOJNLMOMQNRPR[ RRPSNUMXMZN[P[[ RWHM`\",\n\"G]L[LFX[XF RHV\\\\V RHP\\\\P\",\n\"GyL[LFTFVGWHXJXMWOVPTQLQ R^MfM RaFaXbZd[f[ RlZn[r[tZuXuWtUrToTmSlQlPmNoMrMtN\",\n\"GmX[QQ RL[LFTFVGWHXJXMWOVPTQLQ R`Zb[f[hZiXiWhUfTcTaS`Q`PaNcMfMhN\",\n\"F^IFN[RLV[[F RHV\\\\V RHP\\\\P\",\n\"D`I[IFOFRGTIULUR RONOUPXRZU[[[[F\",\n\"I\\\\W[WF RWZU[Q[OZNYMWMQNOONQMUMWN RRHZH RXaNa\",\n\"F[HSQS RHNTN RWYVZS[Q[NZLXKVJRJOKKLINGQFSFVGWH\",\n\"G\\\\L[LF RX[OO RXFLR RLOTO\",\n\"JZLFXF RR[RF ROVUR ROPUL\",\n\"IoK[RFY[K[ R`b`QaObNdMgMiNjOkQkWjYiZg[d[bZ`X\",\n\"G]ITJSLRNSOTQUSTXOYLYIXGVFUFSGRIRLSOXTYVYWXYWZT[\",\n\"G\\\\L[LFTFVGWHXJXMWOVPTQLQ RHL\\\\L\",\n\"F[VGTFQFNGLIKKJOJRKVLXNZQ[S[VZWYWRSR RRCR^\",\n\"I[K[RFY[ RHV\\\\V RHP\\\\P\",\n\"H\\\\XZU[P[NZMYLWLUMSNRPQTPVOWNXLXJWHVGTFOFLG RRCR^\",\n\"HZVZT[P[NZMYLWLQMONNPMTMVN RRJR^\",\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n\"F^J[O[OWMVKTJQJLKIMGPFTFWGYIZLZQYTWVUWU[Z[\",\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n\"E_ZSJS RNWJSNO\",\n\"E_R[RK RNORKVO\",\n\"E_JSZS RVWZSVO\",\n\"E_RKR[ RVWR[NW\",\n\"E_JSZS RVWZSVO RNOJSNW\",\n\"E_R[RK RNORKVO RVWR[NW\",\n\"E_KLYZ RRLKLKS\",\n\"E_YLKZ RRLYLYS\",\n\"E_YZKL RRZYZYS\",\n\"E_KZYL RRZKZKS\",\n\"E_ZSJS RRWVO RNOJSNW\",\n\"E_JSZS RRONW RVWZSVO\",\n\"E_JWJQPQ RJQMTOUQTSRUQWRZU\",\n\"E_ZWZQTQ RZQWTUUSTQROQMRJU\",\n\"E_ZSJS RTOPSTW RNWJSNO\",\n\"E_R[RK RNURQVU RNORKVO\",\n\"E_JSZS RPOTSPW RVWZSVO\",\n\"E_RKR[ RVQRUNQ RVWR[NW\",\n\"E_JSVS RZOVSZW RNWJSNO\",\n\"E_ZSNS RJONSJW RVWZSVO\",\n\"E_ZOZW RJSZS RNWJSNO\",\n\"E_R[RK RV[N[ RNORKVO\",\n\"E_JOJW RZSJS RVWZSVO\",\n\"E_RKR[ RNKVK RVWR[NW\",\n\"E_N[V[ RR[RK RNWR[VW RNORKVO\",\n\"E_NWJSNO RJSWSYRZPYNWM\",\n\"E_VWZSVO RZSMSKRJPKNMM\",\n\"E_NWJSNO RJSWSYRZPYNWMUNTPTW\",\n\"E_VWZSVO RZSMSKRJPKNMMONPPPW\",\n\"E_PUJUJO RZWZQTQ RZQWTUUSTQROQMRJU\",\n\"E_JSZS RTOPW RNOJSNW RVWZSVO\",\n\"E_PWR[VY ROKLTVOR[\",\n\"E_V[VOJO RNSJONK\",\n\"E_N[NOZO RVSZOVK\",\n\"E_VKVWJW RNSJWN[\",\n\"E_NKNWZW RVSZWV[\",\n\"E_JOVOV[ RZWV[RW\",\n\"E_VKVWJW RNSJWN[\",\n\"E_OQKUGQ RYRYQXNVLSKQKNLLNKQKU\",\n\"E_UQYU]Q RKRKQLNNLQKSKVLXNYQYU\",\n\"E_KLYZ RKHYH RRLKLKS\",\n\"E_JWZW RJKJS RZSZ[ RZOJO RNSJONK RV[ZWVS\",\n\"E_[KUKUQ RMMLNKQKSLVNXQYSYVXXVYSYQXNUK\",\n\"E_IKOKOQ RWMXNYQYSXVVXSYQYNXLVKSKQLNOK\",\n\"E_ZSJSNO\",\n\"E_ZSJSNW\",\n\"E_R[RKVO\",\n\"E_R[RKNO\",\n\"E_JSZSVO\",\n\"E_JSZSVW\",\n\"E_RKR[VW\",\n\"E_RKR[NW\",\n\"E_ZWJW RJOZO RVSZOVK RN[JWNS\",\n\"E_N[NK RVKV[ RJONKRO RRWV[ZW\",\n\"E_JWZW RZOJO RNSJONK RV[ZWVS\",\n\"E_ZWJW RJOZO RN[JWNSJONK\",\n\"E_N[NK RVKV[ RJONKROVKZO\",\n\"E_JWZW RZOJO RV[ZWVSZOVK\",\n\"E_VKV[ RN[NK RZWV[RWN[JW\",\n\"E_JVZVVZ RZPJPNL\",\n\"E_ZVJVNZ RJPZPVL\",\n\"E_ZPMP RZVMV RRXVN ROXJSON\",\n\"E_MVWV RMPWP RSNQX ROXJSON RUNZSUX\",\n\"E_JVWV RJPWP RRNNX RUNZSUX\",\n\"E_ZPMP RZVMV ROXJSON\",\n\"E_ONO[ RUNU[ RWPRKMP\",\n\"E_JVWV RJPWP RUNZSUX\",\n\"E_UXUK ROXOK RMVR[WV\",\n\"E_MVWV RMPWP ROXJSON RUNZSUX\",\n\"E_OXON RUXUN RMVR[WV RWPRKMP\",\n\"E_[XOL RW\\\\KP RSLKLKT\",\n\"E_IXUL RM\\\\YP RQLYLYT\",\n\"E_INUZ RMJYV RQZYZYR\",\n\"E_[NOZ RWJKV RSZKZKR\",\n\"E_ZXOX RZSJS RZNON RQLJSQZ\",\n\"E_JXUX RJSZS RJNUN RSLZSSZ\",\n\"E_NWJSNO RZUWQTUQQNULSJS\",\n\"E_VWZSVO RJUMQPUSQVUXSZS\",\n\"E_NXVX RNSVS RR[RK RNORKVO\",\n\"E_VNNN RVSNS RRKR[ RVWR[NW\",\n\"E_ZSWS RSSQS RMSJS RNOJSNW\",\n\"E_R[RX RRTRR RRNRK RNORKVO\",\n\"E_JSMS RQSSS RWSZS RVWZSVO\",\n\"E_RKRN RRRRT RRXR[ RVWR[NW\",\n\"E_ZSJS RJWJO RNOJSNW\",\n\"E_JSZS RZOZW RVWZSVO\",\n\"E_ZPZVOVOXJSONOPZP\",\n\"E_U[O[OPMPRKWPUPU[\",\n\"E_JVJPUPUNZSUXUVJV\",\n\"E_OKUKUVWVR[MVOVOK\",\n\"E_U[O[OWUWU[ RUSOSOPMPRKWPUPUS\",\n\"E_W[M[MWOWOPMPRKWPUPUWWWW[\",\n\"E_ONUN RW[M[MWOWOPMPRKWPUPUWWWW[\",\n\"E_RKR[ RW[M[MWOWOPMPRKWPUPUWWWW[\",\n\"E_PPMPRKWPTP RU[O[OSMSRNWSUSU[\",\n\"E_PPMPRKWPTP RW[M[MWOWOSMSRNWSUSUWWWW[\",\n\"E_JNNNNPUPUNZSUXUVNVNXJXJN\",\n\"E_Z[NO RZKJKJ[ RUONONV\",\n\"E_JKVW RJ[Z[ZK ROWVWVP\",\n\"E_MPRKWPUPUVWVR[MVOVOPMP\",\n\"E_JSZS RVWZSVO RTRTTSVQWOWMVLTLRMPOOQOSPTR\",\n\"E_V[VK RNKN[ RZOVKRO RRWN[JW\",\n\"E_J[Z[ RJKZK RZSJS RVGZKVOZSVWZ[V_\",\n\"E_ZSJS RTWTO RNOJSNW\",\n\"E_JSZS RPOPW RVWZSVO\",\n\"E_JSZS RRORW RNOJSNW RVWZSVO\",\n\"E_ZSJS RWWWO RRWRO RNOJSNW\",\n\"E_JSZS RMOMW RRORW RVWZSVO\",\n\"E_JSZS RPOPW RTOTW RNWJSNO RVWZSVO\",\n\"E_NSZS RNWNOJSNW\",\n\"E_VSJS RVWVOZSVW\",\n\"E_NSVS RNWJSNONW RVWVOZSVW\",\n\"I[MLWL RKFR[YF\",\n\"HZVHUGSFPFNGMHLKLVMYNZP[S[UZVY\",\n\"H[WOVNTMPMNNMOLQLWMYNZP[S[UZVYWWWJVHUGSFOFMG\",\n\"I\\\\WPPP RM[W[WFMF\",\n\"I\\\\WQPQ RMFWFW[M[ RXCL`\",\n\"C`G[\\\\F ROFTFXHZJ\\\\N\\\\SZWXYT[O[KYIWGSGNIJKHOF\",\n\"I[K[RFY[K[\",\n\"I[YFR[KFYF\",\n\"C`\\\\QGQ R\\\\GOGKIIKGOGSIWKYO[\\\\[\",\n\"C`[CH^ R\\\\QGQ R\\\\GOGKIIKGOGSIWKYO[\\\\[\",\n\"E_JSZS RZZPZMYKWJTJRKOMMPLZL\",\n\"DaHP]P RHZUZYX[V]R]N[JYHUFHF\",\n\"DaI^\\\\C RHP]P RHZUZYX[V]R]N[JYHUFHF\",\n\"E_ZSJS RJZTZWYYWZTZRYOWMTLJL\",\n\"E_M[WQ RMZWP RMYWO RMXWN RMWWM RMVWL RMUWK RMTVK RMSUK RMRTK RMQSK RMPRK RMOQK RMNPK RMMOK RMLNK RN[WR RO[WS RP[WT RQ[WU RR[WV RS[WW RT[WX RU[WY RV[WZ RM[MKWKW[M[\",\n\"E_Z`ZFJFJ`\",\n\"E_ZFZ`J`JF\",\n\"E_Z`I`TSIF[F\",\n0,\n\"E_ZWJW RROR_ RJKZK\",\n\"E_JSZS RR[RK RRDQERFSERDRF\",\n1,\n\"KYID[_\",\n\"E_KOYW RR[RK RYOKW\",\n\"E_PQRPTQUSTURVPUOSPQ\",\n\"E_PQPU RQUQQ RRPRV RSUSQ RTQTU RPTRVTT RPRRPTR RPQRPTQUSTURVPUOSPQ\",\n\"IbMTQSS[bB\",\n\"IbMTQSS[bB RN@V@RESEUFVHVKUMSNPNNM\",\n\"IbMTQSS[bB RUFUN RQ@NJWJ\",\n\"E_XPWPUQQUOVMULSMQOPQQUUWVXV\",\n\"E_TQVPXQYSXUVVTUPQNPLQKSLUNVPUTQ\",\n\"E_JKJ[Z[\",\n\"E_ZKJ[Z[\",\n\"E_ZKJ[Z[ RPSRUTZT]\",\n\"E_Z[JSZK RSYTWUSTOSM\",\n22,\n\"H\\\\NUVQ RRDRb\",\n\"H\\\\ODOb RUDUb\",\n\"H\\\\LVXP RODOb RUDUb\",\n\"E_[[RKI[\",\n\"E_IKR[[K\",\n\"E_Z[ZQXMTKPKLMJQJ[\",\n\"E_JKJULYP[T[XYZUZK\",\n\"H\\\\L]M_O`Q_R]RISGUFWGXI\",\n\"D`H]I_K`M_N]NIOGQFSGTI RP]Q_S`U_V]VIWGYF[G\\\\I\",\n\"@dD]E_G`I_J]JIKGMFOGPI RL]M_O`Q_R]RISGUFWGXI RT]U_W`Y_Z]ZI[G]F_G`I\",\n\"H\\\\L]M_O`Q_R]RISGUFWGXI RRMUNWPXSWVUXRYOXMVLSMPONRM\",\n\"D`H]I_K`M_N]NIOGQFSGTI RP]Q_S`U_V]VIWGYF[G\\\\I RVMYN[P\\\\S[VYXVYNYKXIVHSIPKNNMVM\",\n\"@dD]E_G`I_J]JIKGMFOGPI RL]M_O`Q_R]RISGUFWGXI RT]U_W`Y_Z]ZI[G]F_G`I RZM]N_P`S_V]XZYJYGXEVDSEPGNJMZM\",\n\"H\\\\URXU[R RLSMPONRMUNWPXSXU RL]M_O`Q_R]RISGUFWGXI\",\n\"H\\\\UQXT[Q RL]M_O`Q_R]RISGUFWGXI RLSMPONRMUNWPXSWVUXRYOXMVLS\",\n\"H\\\\UUXR[U RL]M_O`Q_R]RISGUFWGXI RLSMPONRMUNWPXSWVUXRYOXMVLS\",\n\"E_KXLYKZJYKXKZ RRLSMRNQMRLRN RYXZYYZXYYXYZ\",\n\"E_YNXMYLZMYNYL RRZQYRXSYRZRX RKNJMKLLMKNKL\",\n\"JZRXSYRZQYRXRZ RRLSMRNQMRLRN\",\n\"E_LXMYLZKYLXLZ RLLMMLNKMLLLN RXXYYXZWYXXXZ RXLYMXNWMXLXN\",\n\"E_JSZS RRFQGRHSGRFRH\",\n\"E_JSTS RYXZYYZXYYXYZ RYLZMYNXMYLYN\",\n\"E_JSZS RLXMYLZKYLXLZ RLLMMLNKMLLLN RXXYYXZWYXXXZ RXLYMXNWMXLXN\",\n\"E_JSKRNQQRSTVUYTZS RRXSYRZQYRXRZ RRLSMRNQMRLRN\",\n\"E_JSKRNQQRSTVUYTZS\",\n\"E_ZSYRVQSRQTNUKTJS\",\n\"E_WPYQZSYUWVTUPQMPKQJSKUMV\",\n\"E_JSKNLLNKPLQNSXTZV[XZYXZS\",\n\"E_RKSLTOSRQTPWQZR[\",\n\"E_JSKRNQQRSTVUYTZS RVKN[\",\n\"E_ZPJP RZVYWVXSWQUNTKUJV\",\n\"E_JVZV RJPKONNQOSQVRYQZP\",\n\"E_JVZV RJPKONNQOSQVRYQZP RVKN[\",\n\"E_JYZY RJSZS RJMKLNKQLSNVOYNZM\",\n\"E_JYZY RJSZS RUPO\\\\ RJMKLNKQLSNVOYNZM\",\n\"E_JYZY RJSZS RJMKLNKQLSNVOYNZM RXGL_\",\n\"E_JVKUNTQUSWVXYWZV RJPKONNQOSQVRYQZP\",\n\"E_JVKUNTQUSWVXYWZV RJPKONNQOSQVRYQZP RVKN[\",\n\"E_JYZY RJSKRNQQRSTVUYTZS RJMKLNKQLSNVOYNZM\",\n\"E_JYKXNWQXSZV[YZZY RJSKRNQQRSTVUYTZS RJMKLNKQLSNVOYNZM\",\n\"E_ZYJY RZSJS RZMYLVKSLQNNOKNJM\",\n\"E_JXLWPVTVXWZX RJNLOPPTPXOZN\",\n\"E_JVNVNWOYQZSZUYVWVVZV RJPNPNOOMQLSLUMVOVPZP\",\n\"E_ZVJV RJPNPNOOMQLSLUMVOVPZP\",\n\"E_JPZP RZVJV RRHQIRJSIRHRJ\",\n\"E_JPZP RZVJV RRXSYRZQYRXRZ RRLSMRNQMRLRN\",\n\"E_JPZP RZVJV RKJLKKLJKKJKL RYZZ[Y\\\\X[YZY\\\\\",\n\"E_ZPJP RJVZV RYJXKYLZKYJYL RKZJ[K\\\\L[KZK\\\\\",\n\"AcNP^P R^VNV RGVHWGXFWGVGX RGNHOGPFOGNGP\",\n\"AcVPFP RFVVV R]V\\\\W]X^W]V]X R]N\\\\O]P^O]N]P\",\n\"E_JPZP RZVJV RPQRPTQUSTURVPUOSPQ\",\n\"E_JPZP RZVJV RRJPIOGPERDTEUGTIRJ\",\n\"E_JPZP RZVJV RNJOHQGSGUHVJ\",\n\"E_JPZP RZVJV RNJRGVJ\",\n\"E_JPZP RZVJV RNGRJVG\",\n\"E_JPZP RZVJV RRATGOCUCPGRA\",\n\"E_JPZP RZVJV RR?NJVJR?\",\n\"E_JPZP RYC]C RZVJV R]?[@ZBZJ RM?MJKJIIHGHEICKBMB RQFVFVCUBRBQCQIRJUJ\",\n\"E_JPZP RZVJV RMBMJ RMCNBQBRCRJ RRCSBVBWCWJ\",\n\"E_JPZP RZVJV RRHSIRJQIRHRJ RN@P?S?U@VBUDSE\",\n\"E_JPZP RTMPY RZVJV\",\n\"E_JYZY RJSZS RJMZM\",\n\"E_JYZY RJSZS RJMZM RXGL_\",\n\"E_J\\\\Z\\\\ RJPZP RJJZJ RZVJV\",\n\"E_ZZJZ RZVJPZJ\",\n\"E_JZZZ RJVZPJJ\",\n\"E_J]Z] RZWJW RZSJMZG\",\n\"E_Z]J] RJWZW RJSZMJG\",\n\"E_J]Z] RTTP` RZWJW RZSJMZG\",\n\"E_JWZW RTTP` RZ]J] RJSZMJG\",\n\"=gRMBSRY RbMRSbY\",\n\"=gRMbSRY RBMRSBY\",\n\"I[OCPDRGSITLUQUUTZS]R_PbOc RUcTbR_Q]PZOUOQPLQIRGTDUC\",\n\"E_JXLWPVTVXWZX RJNLOPPTPXOZN RVKN[\",\n\"E_ZMJSZY RVKN[\",\n\"E_JMZSJY RVKN[\",\n\"E_ZZJZ RZVJPZJ RXGL_\",\n\"E_JZZZ RJVZPJJ RXGL_\",\n\"E_ZVJPZJ RJZKYNXQYS[V\\\\Y[ZZ\",\n\"E_JVZPJJ RJZKYNXQYS[V\\\\Y[ZZ\",\n\"E_ZVJPZJ RJZKYNXQYS[V\\\\Y[ZZ RXGL_\",\n\"E_JVZPJJ RJZKYNXQYS[V\\\\Y[ZZ RXGL_\",\n\"E_JSZYJ_ RZSJMZG\",\n\"E_ZSJYZ_ RJSZMJG\",\n\"E_JSZYJ_ RZSJMZG RXGL_\",\n\"E_ZSJYZ_ RJSZMJG RXGL_\",\n\"E_ZKXNVPRRJSRTVVXXZ[\",\n\"E_JKLNNPRRZSRTNVLXJ[\",\n\"E_JVRWVYX[Z^ RZHXKVMROJPRQVSXUZX\",\n\"E_ZVRWNYL[J^ RJHLKNMROZPRQNSLUJX\",\n\"E_J[KZNYQZS\\\\V]Y\\\\Z[ RZHXKVMROJPRQVSXUZX\",\n\"E_J[KZNYQZS\\\\V]Y\\\\Z[ RJXLUNSRQZPRONMLKJH\",\n\"E_ZKXNVPRRJSRTVVXXZ[ RVKN[\",\n\"E_JKLNNPRRZSRTNVLXJ[ RVKN[\",\n\"E_ZMNMLNKOJQJUKWLXNYZY\",\n\"E_JMVMXNYOZQZUYWXXVYJY\",\n\"E_ZMNMLNKOJQJUKWLXNYZY RVKN[\",\n\"E_JMVMXNYOZQZUYWXXVYJY RVKN[\",\n\"E_J\\\\Z\\\\ RZJNJLKKLJNJRKTLUNVZV\",\n\"E_Z\\\\J\\\\ RJJVJXKYLZNZRYTXUVVJV\",\n\"E_J\\\\Z\\\\ RZJNJLKKLJNJRKTLUNVZV RXGL_\",\n\"E_Z\\\\J\\\\ RJJVJXKYLZNZRYTXUVVJV RXGL_\",\n\"E_J\\\\Z\\\\ RZJNJLKKLJNJRKTLUNVZV RSYQ_\",\n\"E_Z\\\\J\\\\ RJJVJXKYLZNZRYTXUVVJV RSYQ_\",\n\"E_JKJULYP[T[XYZUZK ROSUS RSUUSSQ\",\n\"E_JKJULYP[T[XYZUZK RRRQSRTSSRRRT\",\n\"E_JKJULYP[T[XYZUZK RLSXS RRMRY\",\n\"E_ZYJYJMZM\",\n\"E_JYZYZMJM\",\n\"E_Z\\\\J\\\\ RZVJVJJZJ\",\n\"E_J\\\\Z\\\\ RJVZVZJJJ\",\n\"E_Z[ZKJKJ[\",\n\"E_JKJ[Z[ZK\",\n\"E_PKTKXMZQZUXYT[P[LYJUJQLMPK RLSXS RRMRY\",\n\"E_PKTKXMZQZUXYT[P[LYJUJQLMPK RLSXS\",\n\"E_PKTKXMZQZUXYT[P[LYJUJQLMPK RMNWX RWNMX\",\n\"E_PKTKXMZQZUXYT[P[LYJUJQLMPK RWFM^\",\n\"E_PKTKXMZQZUXYT[P[LYJUJQLMPK RRRQSRTSSRRRT\",\n47,\n\"E_PKTKXMZQZUXYT[P[LYJUJQLMPK RRNRS RMQRSWQ ROWRSUW\",\n\"E_PKTKXMZQZUXYT[P[LYJUJQLMPK RLUXU RLQXQ\",\n\"E_PKTKXMZQZUXYT[P[LYJUJQLMPK RNSVS\",\n\"E_JKZKZ[J[JK RLSXS RRMRY\",\n\"E_JKZKZ[J[JK RLSXS\",\n\"E_JKZKZ[J[JK RMNWX RWNMX\",\n\"E_JKZKZ[J[JK RRRQSRTSSRRRT\",\n\"E_J[JK RJSZS\",\n\"E_Z[ZK RZSJS\",\n\"E_ZKJK RRKR[\",\n\"E_J[Z[ RR[RK\",\n\"I[NSVS RNKN[\",\n\"I[NVVV RNPVP RNKN[\",\n\"E_JVZV RJPZP RJKJ[\",\n\"E_JKJ[ RPSZS RPKP[\",\n\"E_JKJ[ ROKO[ RTKT[ RYSTS\",\n\"E_JKJ[ RPVYV RPPYP RPKP[\",\n\"E_J[JK RJSZS RXGL_\",\n\"E_JVZV RJPZP RJKJ[ RXGL_\",\n\"E_JKJ[ RPSZS RPKP[ RXGL_\",\n\"E_JKJ[ RPVYV RPPYP RPKP[ RXGL_\",\n\"E_VKXLYNXPVQRRJSRTVUXVYXXZV[\",\n\"E_NKLLKNLPNQRRZSRTNULVKXLZN[\",\n\"E_JSZYZMJS\",\n\"E_ZSJYJMZS\",\n\"E_Z[J[ RJQZWZKJQ\",\n\"E_J[Z[ RZQJWJKZQ\",\n\"BbXQXU RYQYU RZPZV R[Q[U R\\\\Q\\\\U RMSLQJPHQGSHUJVLUMSWSXUZV\\\\U]S\\\\QZPXQWS\",\n\"BbLQLU RKQKU RJPJV RIQIU RHQHU RWSXQZP\\\\Q]S\\\\UZVXUWSMSLUJVHUGSHQJPLQMS\",\n\"E_JSTSUUWVYUZSYQWPUQTS\",\n\"E_JSNS RR[RW RRKRO RZSVS\",\n\"I[NFVF RRFR[\",\n\"E_J[Z[ RZKRVJK\",\n\"E_ZKJK RJ[RPZ[\",\n\"E_JKZK RZPR[JP\",\n\"E_JKJ[Z[ RJOLOQQTTVYV[\",\n\"E_Z[ZKJ[Z[\",\n\"Bb_`REE`\",\n\"BbEFRa_F\",\n\"Bb]`]O\\\\KZHWFSEQEMFJHHKGOG`\",\n\"BbGFGWH[J^M`QaSaW`Z^\\\\[]W]F\",\n\"E_RaJSRFZSRa\",\n26,\n\"I[RRTXOTUTPXRR\",\n\"E_ZSJS RRXSYRZQYRXRZ RRLSMRNQMRLRN RLMXY RXMLY\",\n\"E_JKZ[ZKJ[JK\",\n\"E_ZKJ[JKZ[\",\n\"E_JKZ[ZKJ[\",\n\"E_JKZ[ RRSJ[\",\n\"E_ZKJ[ RRSZ[\",\n\"E_ZVJV RZPYOVNSOQQNRKQJP\",\n\"E_JKMMOOQSR[SSUOWMZK\",\n\"E_Z[WYUWSSRKQSOWMYJ[\",\n\"E_ZPSPQQPSQUSVZV RZ\\\\Q\\\\N[KXJUJQKNNKQJZJ\",\n\"E_JPQPSQTSSUQVJV RJ\\\\S\\\\V[YXZUZQYNVKSJJJ\",\n\"E_U[UTTRRQPROTO[ R[[[RZOWLTKPKMLJOIRI[\",\n\"E_OKORPTRUTTURUK RIKITJWMZP[T[WZZW[T[K\",\n\"E_RKR[ RL[LSMPNOQNSNVOWPXSX[\",\n\"E_JPZP RZVJV RODOb RUDUb\",\n\"E_ZMJSZY RYRXSYTZSYRYT\",\n\"E_JMZSJY RKRJSKTLSKRKT\",\n\"5oJM:SJY RZMJSZY RjMZSjY\",\n\"5oZMjSZY RJMZSJY R:MJS:Y\",\n\"E_ZSJS RJWZ[J_ RZOJKZG\",\n\"E_JSZS RZWJ[Z_ RJOZKJG\",\n\"E_ZLJL RZPJVZ\\\\\",\n\"E_JLZL RJPZVJ\\\\\",\n\"E_JPROVMXKZH RZ^X[VYRWJVRUVSXQZN\",\n\"E_ZPRONMLKJH RJ^L[NYRWZVRUNSLQJN\",\n\"E_JPROVMXKZH RZ^X[VYRWJVRUVSXQZN RXGL_\",\n\"E_ZPRONMLKJH RJ^L[NYRWZVRUNSLQJN RXGL_\",\n\"E_Z\\\\J\\\\ RZVJVJJZJ RXGL_\",\n\"E_J\\\\Z\\\\ RJVZVZJJJ RXGL_\",\n\"E_Z\\\\J\\\\ RZVJVJJZJ RSYQ_\",\n\"E_J\\\\Z\\\\ RJVZVZJJJ RSYQ_\",\n\"E_ZVJPZJ RJZKYNXQYS[V\\\\Y[ZZ RSWQ]\",\n\"E_JVZPJJ RJZKYNXQYS[V\\\\Y[ZZ RSWQ]\",\n\"E_J[KZNYQZS\\\\V]Y\\\\Z[ RZHXKVMROJPRQVSXUZX RSXQ^\",\n\"E_J[KZNYQZS\\\\V]Y\\\\Z[ RJXLUNSRQZPRONMLKJH RSXQ^\",\n\"E_JSZYZMJS RXGL_\",\n\"E_ZSJYJMZS RXGL_\",\n\"E_Z[J[ RJQZWZKJQ RXGL_\",\n\"E_J[Z[ RZQJWJKZQ RXGL_\",\n\"CaR\\\\S]R^Q]R\\\\R^ RRRSSRTQSRRRT RRHSIRJQIRHRJ\",\n\"CaHRISHTGSHRHT RRRSSRTQSRRRT R\\\\R]S\\\\T[S\\\\R\\\\T\",\n\"Ca\\\\H[I\\\\J]I\\\\H\\\\J RRRQSRTSSRRRT RH\\\\G]H^I]H\\\\H^\",\n\"CaHHIIHJGIHHHJ RRRSSRTQSRRRT R\\\\\\\\]]\\\\^[]\\\\\\\\\\\\^\",\n\">`BQ\\\\Q R\\\\GOGKIIKGOGSIWKYO[\\\\[\",\n\">`GQ\\\\Q R\\\\M\\\\U R\\\\GOGKIIKGOGSIWKYO[\\\\[\",\n\"E_JSZS RZPZV RZZPZMYKWJTJRKOMMPLZL\",\n\"C`\\\\QGQ R\\\\GOGKIIKGOGSIWKYO[\\\\[ RR@QARBSAR@RB\",\n\"C`GA\\\\A R\\\\QGQ R\\\\[O[KYIWGSGOIKKIOG\\\\G\",\n\"E_JSZS RZGJG RZLPLMMKOJRJTKWMYPZZZ\",\n\"C`G`\\\\` R\\\\PGP R\\\\FOFKHIJGNGRIVKXOZ\\\\Z\",\n\"C`HT\\\\T RHN\\\\N R\\\\GOGKIIKGOGSIWKYO[\\\\[\",\n\"DfbQHQ RHGUGYI[K]O]S[WYYU[H[\",\n\"Df]QHQ RHMHU RHGUGYI[K]O]S[WYYU[H[\",\n\"E_ZSJS RJPJV RJZTZWYYWZTZRYOWMTLJL\",\n\"Da]AHA RHQ]Q RH[U[YY[W]S]O[KYIUGHG\",\n\"E_ZSJS RJGZG RJLTLWMYOZRZTYWWYTZJZ\",\n\"C`GQ\\\\Q R\\\\GGGG[\\\\[\",\n\"E_PKTKXMZQZUXYT[P[LYJUJQLMPK RZKJ[\",\n\"E_JQRWROZU\",\n\"E_J[JORGZOZ[J[\",\n\"E_NORKVO\",\n\"E_VWR[NW\",\n\"E_ZKJK RJ[RPZ[\",\n\"E_JNZN RJHZH RJ[RSZ[\",\n\"H\\\\RDSETGSIRJQLRNSOTQSSRTQVRXSYT[S]R^Q`Rb\",\n\"KYQbQDVD\",\n\"KYSbSDND\",\n\"KYQDQbVb\",\n\"KYSDSbNb\",\n\"E_RWR[ RVSZS\",\n\"E_RWR[ RNSJS\",\n\"E_RORK RVSZS\",\n\"E_RORK RNSJS\",\n\"E_ZQJQJV\",\n\"D`[JZLYPYVZZ[\\\\Y[UZOZK[I\\\\JZKVKPJLIJKKOLULYK[J\",\n\"E_JSJQLMPKTKXMZQZS\",\n\"E_JSJQLMPKTKXMZQZS RJSZS\",\n\"E_JMLLPKTKXLZMR[JM\",\n\"E_PUJ[ RTKWLYNZQYTWVTWQVOTNQONQLTK\",\n\"E_JSZS RR[RK RVRUPSOQOOPNRNTOVQWSWUVVTVR\",\n\"E_JWZW RJOZO RNKN[ RVKV[\",\n\"E_LPXPZO[MZKXJVKUMUYV[X\\\\Z[[YZWXVLVJWIYJ[L\\\\N[OYOMNKLJJKIMJOLP\",\n\"E_ZUJUJP\",\n\"E_RORSUS RPKTKXMZQZUXYT[P[LYJUJQLMPK\",\n\"E_M[RVW[ RN[RWV[ RP[RYT[ RS[RZQ[ RU[RXO[ RYMRPKMROYM RJFZFZKYMKTJVJ[Z[ZVYTKMJJJF\",\n\"JZVFNFNM\",\n\"JZNFVFVM\",\n\"JZV[N[NT\",\n\"JZN[V[VT\",\n\"H\\\\RbRMSITGVFXGYI\",\n\"H\\\\RDRYQ]P_N`L_K]\",\n\"E_JUKTMSRRWSYTZU\",\n\"E_ZQYRWSRTMSKRJQ\",\n\"E_LKHK RXK\\\\K RNORKVO\",\n\"@dXK^K RFKLKX[^[\",\n\"AfJKZ[ RZKJ[ RFKZKbSZ[F[FK\",\n\"AcJKZ[ RZKJ[ RFK^K^[F[FK\",\n\"9k>VfV R>LfL RCQCL RD[DV REVEQ RFLFG RHQHL RJVJQ RK[KV RKLKG RMQML ROVOQ RPLPG RRQRL RTVTQ RULUG RWQWL RYVYQ RZ[ZV RZLZG R\\\\Q\\\\L R^V^Q R_L_G R`[`V R>QaQaL R>[>GfGf[>[\",\n\"KYUcOSUC\",\n\"KYOcUSOC\",\n\">cZKJ[ RJKZ[ R^KJKBSJ[^[^K\",\n\"AcKOKW RR[YW RRKYO RRE^L^ZRaFZFLRE\",\n\"H\\\\PNKX RYNTX RVRUPSOQOOPNRNTOVQWSWUVVTVR\",\n\"E_N[J[JW RZSRSJ[ RVRUPSOQOOPNRNTOVQWSWUVVTVR\",\n\"E_JSZS RNYVY RVMNM\",\n\"E_RPRKNN RZPZKVN RRKJ[R[ZK\",\n\"H\\\\LS[S RRMRY RXP[SXV RVRUPSOQOOPNRNTOVQWSWUVVTVR\",\n\"E_ZSJ\\\\JJZS RJSZS\",\n\"E_J[JRZ[J[\",\n\"E_JWJ[Z[ZW\",\n\"E_VWR[NW\",\n\"D`JaZa RJFZF RRFRa\",\n\"D`MFWFWaMaMF\",\n\"D`IF[F[aIaIF RJPZP RZVJV\",\n\"D`IF[F[aIaIF RZSJS RRXSYRZQYRXRZ RRLSMRNQMRLRN\",\n\"D`IF[F[aIaIF RRJ[SR\\\\ISRJ\",\n\"D`IF[F[aIaIF RPQRPTQUSTURVPUOSPQ\",\n\"D`IF[F[aIaIF RPKTKXMZQZUXYT[P[LYJUJQLMPK\",\n\"E_PKTKXMZQZUXYT[P[LYJUJQLMPK RRbRD\",\n47,\n\"E_JSZS RZKJ[\",\n\"E_JSZS RJKZ[\",\n\"D`IaIF[F[aIa[F\",\n\"D`[a[FIFIa[aIF\",\n\"D`IF[F[aIaIF RZMJSZY\",\n\"D`IF[F[aIaIF RJMZSJY\",\n\"E_ZSJS RNWJSNO RR[RK\",\n\"E_JSZS RVWZSVO RR[RK\",\n\"D`IF[F[aIaIF RZSJS RNWJSNO\",\n\"D`IF[F[aIaIF RJSZS RVWZSVO\",\n\"E_PKTKXMZQZUXYT[P[LYJUJQLMPK RLGX_\",\n\"E_J[Z[ RR[RK RZaJa\",\n\"E_RKX[L[RK RRbRD\",\n\"D`IF[F[aIaIF RIKR[[K\",\n\"D`IF[F[aIaIF RRKX[L[RK\",\n\"E_ZKJK RRKR[ RVRUPSOQOOPNRNTOVQWSWUVVTVR\",\n\"E_R[RK RNORKVO RJSZS\",\n\"D`IF[F[aIaIF RR[RK RNORKVO\",\n\"E_ZKJK RRKR[ RMEWE\",\n\"E_R[LKXKR[ RRbRD\",\n\"D`IF[F[aIaIF R[[RKI[\",\n\"D`IF[F[aIaIF RR[LKXKR[\",\n\"E_J[Z[ RR[RK RPQRPTQUSTURVPUOSPQ\",\n\"E_RKR[ RVWR[NW RJSZS\",\n\"D`IF[F[aIaIF RRKR[ RVWR[NW\",\n\"JZJ]Z] RSFQJ\",\n\"E_RKX[L[RK RJ]Z]\",\n\"E_RJ[SR\\\\ISRJ RJ]Z]\",\n\"E_PQRPTQUSTURVPUOSPQ RJ]Z]\",\n\"E_PKTKXMZQZUXYT[P[LYJUJQLMPK RJ]Z]\",\n\"E_Z[ZQXMTKPKLMJQJ[ RPQRPTQUSTURVPUOSPQ\",\n\"D`IF[F[aIaIF RSFQJ\",\n\"E_PKTKXMZQZUXYT[P[LYJUJQLMPK RRPTVORURPVRP\",\n\"D`IF[F[aIaIF RRYSZR[QZRYR[ RRNSORPQORNRP\",\n\"E_ZKJK RRKR[ RNDOENFMENDNF RVDWEVFUEVDVF\",\n\"E_R[LKXKR[ RNFOGNHMGNFNH RVFWGVHUGVFVH\",\n\"E_RKWZJQZQMZRK RNDOENFMENDNF RVDWEVFUEVDVF\",\n\"E_PQRPTQUSTURVPUOSPQ RNIOJNKMJNINK RVIWJVKUJVIVK\",\n\"E_PKTKXMZQZUXYT[P[LYJUJQLMPK RNDOENFMENDNF RVDWEVFUEVDVF\",\n\"E_JKJULYP[T[XYZUZK RRbRD\",\n\"E_ZMNMLNKOJQJUKWLXNYZY RRbRD\",\n\"E_JSKRNQQRSTVUYTZS RNFOGNHMGNFNH RVFWGVHUGVFVH\",\n\"E_JMZSJY RNFOGNHMGNFNH RVFWGVHUGVFVH\",\n\"E_JSZS RSZS[R]Q^\",\n\"E_R[LKXKR[ RJSKRNQQRSTVUYTZS\",\n\"H\\\\QFSFUGVHWJXNXSWWVYUZS[Q[OZNYMWLSLNMJNHOGQF RJPKONNQOSQVRYQZP\",\n\"E_JSKRNQQRSTVUYTZS RRbRD\",\n\"MWSZS[R]Q^ RRNSORPQORNRP RJ]Z]\",\n\"D`IF[F[aIaIF RJPZP RTMPY RZVJV\",\n\"D`IF[F[aIaIF RQYRZQ[PZQYQ[ RMGOFTFVGWIWKVMUNSORPQRQS\",\n\"E_IKR[[K RJSKRNQQRSTVUYTZS\",\n\"E_[[RKI[ RJSKRNQQRSTVUYTZS\",\n36,\n\"H\\\\MbMQNOONQMTMVNWOXQXWWYVZT[Q[OZMX\",\n43,\n\"H]YMVWUYTZR[P[NZMYLVLRMONNPMRMTNUOVQWXXZZ[ RJ]Z]\",\n\"HZLTST RVZT[P[NZMYLWLQMONNPMTMVN RJ]Z]\",\n\"MXRMRXSZU[ RJ]Z]\",\n\"G]RTRX RMMLNKPKXLZN[O[QZRXSZU[V[XZYXYPXNWM RJ]Z]\",\n34,\n\"IbMTQSS[bB RXL`L\",\n\"A_J_F_F[ RJKJ[Z[ RF_OVEQOG\",\n\"E_JWNWN[V[VWZW\",\n\"E_NSN[J[ RVSV[Z[ RJSJQLMPKTKXMZQZSJS\",\n\"E_PQPU RQUQQ RRPRV RSUSQ RTQTU RPTRVTT RPRRPTR RPQRPTQUSTURVPUOSPQ RRbRD\",\n\"E_VWR[NW ROEQDSDUEVGVN RVMTNQNOMNKOIQHVH\",\n\"BbF[^[ RGLIKKKMLNNNU RUSVTUUTTUSUU R]S^T]U\\\\T]S]U RNTLUIUGTFRGPIONO\",\n\"BbF[N[ RV[^[ RGLIKKKMLNNNU RWLYK[K]L^N^U RNTLUIUGTFRGPIONO R^T\\\\UYUWTVRWPYO^O\",\n\"BbHPDP RJUFX RJKFH R^XZU R^HZK R`P\\\\P RTTRUPUNTMRMQNNPLRKVKTU\",\n\"=_RKR[B[BKRK RPKTKXMZQZUXYT[P[LYJUJQLMPK\",\n\"E_JKZKZ[J[JK RRbRD\",\n\"C_ESUS RQWUSQO RJWJ[Z[ZKJKJO\",\n\"@dX[^[ RZO^KZG RF[L[XK^K\",\n\"E_KOYW RR[RK RYOKW RRMONMPLSMVOXRYUXWVXSWPUNRM\",\n\"E_JSOSR[USZS RPKTKXMZQZUXYT[P[LYJUJQLMPK\",\n\"E_R[KOYOR[ RPKTKXMZQZUXYT[P[LYJUJQLMPK\",\n\"E_STJK RJOJKNK RSKTKXMZQZUXYT[P[LYJUJT\",\n\"D`KNKROR RYRWPTOPOMPKR RNXMVKUIVHXIZK[MZNX RVXWZY[[Z\\\\X[VYUWVVX\",\n\"E_I[N[NKVKV[[[\",\n\"E_I[V[VK RN[NK[K\",\n\"E_JKZK RJSRKZSR[JS\",\n\"E_Z[J[ RZSR[JSRKZS\",\n\"E_JKZK RJSRKZSR[JS RJSZS\",\n\"E_Z[J[ RZSR[JSRKZS RJSZS\",\n\"E_JVLV RJPZP RQVSV RXVZV\",\n\"BbL[FQLGXG^QX[L[\",\n\"D`IF[F[aIaIF\",\n\"MWTFQL\",\n\"AcZSJS RRORK RR[RW RNOJSNW R^[F[FK^K^[\",\n\"AcJSZS RRWR[ RRKRO RVWZSVO RFK^K^[F[FK\",\n\"BbLHQHQC RLSLHQCXCXSLS RLKJKHLGNGXHZJ[Z[\\\\Z]X]N\\\\LZKXK\",\n\"BbROJW RZORW RGXGNHLJKZK\\\\L]N]X\\\\ZZ[J[HZGX\",\n\"H\\\\XDVGUITLSQR[Rb\",\n22,\n\"H\\\\XbV_U]TZSURKRD\",\n\"H\\\\LDNGOIPLQQR[Rb\",\n22,\n\"H\\\\LbN_O]PZQURKRD\",\n\"H\\\\XGRGRb\",\n22,\n\"H\\\\X_R_RD\",\n\"H\\\\LGRGRb\",\n22,\n\"H\\\\L_R_RD\",\n\"H\\\\XDTHSJRNRb\",\n\"H\\\\RDRIQMPOLSPWQYR]Rb\",\n\"H\\\\XbT^S\\\\RXRD\",\n22,\n\"H\\\\LDPHQJRNRb\",\n\"H\\\\RDRISMTOXSTWSYR]Rb\",\n\"H\\\\LbP^Q\\\\RXRD\",\n22,\n\"H\\\\HS\\\\S\",\n\"H\\\\WDSHRKR[Q^Mb\",\n\"H\\\\MDQHRKR[S^Wb\",\n\"E_VbIF\\\\F\",\n\"E_VDI`\\\\`\",\n\">fC^CYaYa^\",\n\">fCHCMaMaH\",\n\">fC^CYaYa^ RaHaMCMCH\",\n\"IbMTQSS[bB\",\n22,\n22,\n\"H\\\\HG\\\\G\",\n\"H\\\\HM\\\\M\",\n\"H\\\\\\\\YHY\",\n\"H\\\\\\\\_H_\",\n\"E_UFOFO[\",\n\"E_U[O[OF\",\n\"E_PKTKXMZQZUXYT[P[LYJUJQLMPK RRbRD\",\n\"E_PKTKXMZQZUXYT[P[LYJUJQLMPK RZEJE RRERa\",\n\"E_PKTKXMZQZUXYT[P[LYJUJQLMPK RJaZa RRaRE\",\n\"E_RK[[I[RK RRbRD\",\n\"E_RK[[I[RK RZEJE RRERa\",\n\"E_RK[[I[RK RJaZa RRaRE\",\n\"E_JSKRNQQRSTVUYTZS RRbRD\",\n\"E_JSKRNQQRSTVUYTZS RZEJE RRERa\",\n\"E_JSKRNQQRSTVUYTZS RJaZa RRaRE\",\n\"E_JaZa RRaRE\",\n\"E_ZEJE RRERa\",\n\"E_OFUFU[\",\n\"E_O[U[UF\",\n\"D`TFQL RMKJKJ[Z[ZKWK\",\n\"E_IWN\\\\NZZZZKTKTTNTNRIW\",\n\"E_Z[J[ RJVRKZV\",\n22,\n\"H\\\\NQNROTQUSUUTVRVQ\",\n\"H\\\\NQNROTQUSUUTVRVQ RMKWK\",\n\"H\\\\NQNROTQUSUUTVRVQ RW[M[\",\n\"CaGQGRHTJULUNTOROQ RUQURVTXUZU\\\\T]R]Q RGK]K\",\n\"CaGQGRHTJULUNTOROQ RUQURVTXUZU\\\\T]R]Q R][G[\",\n\"E_JQJRKTMUOUQTRRRQ RRRSTUUWUYTZRZQ\",\n\"E_JUZUZP\",\n\"E_JPJUZUZP\",\n\"E_RPRU RJPJUZUZP\",\n\"E_HO\\\\O RLUXU RRFRO RT[P[\",\n\"E_HS\\\\S RJMZMZYJYJM\",\n\">fB]C\\\\FZHYKXPWTWYX\\\\Y^Za\\\\b]\",\n\">fbIaJ^L\\\\MYNTOPOKNHMFLCJBI\",\n\">fB^B]C[EZOZQYRWSYUZ_Za[b]b^\",\n\">fbHbIaK_LULSMROQMOLELCKBIBH\",\n\">fB^FY^Yb^\",\n\">fbH^MFMBH\",\n\"E_I[NKVK[[I[\",\n\"AcRE^L^ZRaFZFLRE RQLSLVMXOYRYTXWVYSZQZNYLWKTKRLONMQL\",\n0,\n\"E_HXMN\\\\NWXHX\",\n\"E_JSZS RJSKNLLNKPLQNSXTZV[XZYXZS\",\n\"E_LMXY RXMLY RPQRPTQUSTURVPUOSPQ\",\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n\"E_KKK[ RL[LK RMKM[ RN[NK ROKO[ RP[PK RQKQ[ RR[RK RSKS[ RT[TK RUKU[ RV[VK RWKW[ RX[XK RYKY[ RJKZKZ[J[JK\",\n\"E_JKZKZ[J[JK\",\n\"E_KLMKWKYLZNZXYZW[M[KZJXJNKL\",\n\"E_JKZKZ[J[JK RPPPV RQVQP RRPRV RSVSP RTPTV ROVOPUPUVOV\",\n\"E_JWZW RJSZS RJOZO RJKZKZ[J[JK\",\n\"E_NKN[ RRKR[ RVKV[ RJKZKZ[J[JK\",\n\"E_JWZW RJSZS RJOZO RNKN[ RRKR[ RVKV[ RJKZKZ[J[JK\",\n\"E_JKZ[ RN[JW RT[JQ RZUPK RZOVK RJKZKZ[J[JK\",\n\"E_J[ZK RJUTK RJONK RP[ZQ RV[ZW RJKZKZ[J[JK\",\n\"E_J[ZK RJUTK RJONK RJKZ[ RN[JW RP[ZQ RT[JQ RV[ZW RZUPK RZOVK RJKZKZ[J[JK\",\n\"E_PPPV RQVQP RRPRV RSVSP RTPTV ROVOPUPUVOV\",\n\"E_OVOPUPUVOV\",\n\"E_JXTN RJWSN RJVRN RJUQN RJTPN RJSON RJRNN RJQMN RJPLN RJOKN RKXUN RLXVN RMXWN RNXXN ROXYN RPXZN RQXZO RRXZP RSXZQ RTXZR RUXZS RVXZT RWXZU RXXZV RYXZW RJNZNZXJXJN\",\n\"E_JNZNZXJXJN\",\n\"E_M[WQ RMZWP RMYWO RMXWN RMWWM RMVWL RMUWK RMTVK RMSUK RMRTK RMQSK RMPRK RMOQK RMNPK RMMOK RMLNK RN[WR RO[WS RP[WT RQ[WU RR[WV RS[WW RT[WX RU[WY RV[WZ RM[MKWKW[M[\",\n\"E_M[MKWKW[M[\",\n\"E_NNLP RONKR RPNJT RQNIV RRNHX RSNIX RTNJX RUNKX RVNLX RWNMX RXVVX RXNNX RYTUX RYNOX RZRTX RZNPX R[PSX R[NQX R\\\\NRX RHXMN\\\\NWXHX\",\n\"E_HXMN\\\\NWXHX\",\n\"E_JZJ[ RKXK[ RLVL[ RMTM[ RNSN[ ROQO[ RPOP[ RQMQ[ RRKR[ RSMS[ RTOT[ RUQU[ RVSV[ RWTW[ RXVX[ RYXY[ RZ[RLJ[ RZZZ[ RRK[[I[RK\",\n\"E_RK[[I[RK\",\n\"E_OUOV RPSPV RQQQV RRORV RSQSV RTSTV RUUUV ROVRPUV RROVVNVRO\",\n\"E_ROVVNVRO\",\n\"E_KKK[ RLLLZ RMLMZ RNMNY ROMOY RPNPX RQNQX RRORW RSPSV RTPTV RUQUU RVQVU RWSXS RWRWT RJKYSJ[ RZSJ\\\\JJZS\",\n\"E_ZSJ\\\\JJZS\",\n\"E_PPPV RQQQU RRQRU RSSUS RSRST ROPUSOV RVSOWOOVS\",\n\"E_VSOWOOVS\",\n\"E_KNKX RLNLX RMOMW RNONW ROOOW RPPPV RQPQV RRPRV RSQSU RTQTU RURUT RVRVT RWRWT RXSWS RJNYSJX RZSJYJMZS\",\n\"E_ZSJYJMZS\",\n\"E_ZLZK RYNYK RXPXK RWRWK RVSVK RUUUK RTWTK RSYSK RR[RK RQYQK RPWPK ROUOK RNSNK RMRMK RLPLK RKNKK RJKRZZK RJLJK RR[IK[KR[\",\n\"E_R[IK[KR[\",\n\"E_UQUP RTSTP RSUSP RRWRP RQUQP RPSPP ROQOP RUPRVOP RRWNPVPRW\",\n\"E_RWNPVPRW\",\n\"E_Y[YK RXZXL RWZWL RVYVM RUYUM RTXTN RSXSN RRWRO RQVQP RPVPP ROUOQ RNUNQ RMSLS RMTMR RZ[KSZK RJSZJZ\\\\JS\",\n\"E_JSZJZ\\\\JS\",\n\"E_TVTP RSUSQ RRURQ RQSOS RQTQR RUVOSUP RNSUOUWNS\",\n\"E_NSUOUWNS\",\n\"E_YXYN RXXXN RWWWO RVWVO RUWUO RTVTP RSVSP RRVRP RQUQQ RPUPQ ROTOR RNTNR RMTMR RLSMS RZXKSZN RJSZMZYJS\",\n\"E_JSZMZYJS\",\n\"E_JRJT RKUKQ RLPLV RMWMO RNNNX ROYOM RPLPZ RQ[QK RRJR\\\\ RS[SK RTLTZ RUYUM RVNVX RWWWO RXPXV RYUYQ RZRZT RRJ[SR\\\\ISRJ\",\n\"E_RJ[SR\\\\ISRJ\",\n\"E_RJ[SR\\\\ISRJ RPRPT RQUQQ RRPRV RSUSQ RTRTT RRPUSRVOSRP\",\n\"E_PKTKXMZQZUXYT[P[LYJUJQLMPK RPQPU RQUQQ RRPRV RSUSQ RTQTU RPTRVTT RPRRPTR RPQRPTQUSTURVPUOSPQ\",\n\"E_RaJSRFZSRa\",\n\"E_PKTKXMZQZUXYT[P[LYJUJQLMPK\",\n\"E_JQKO RKWJU RNLPK RP[NZ RTKVL RVZT[ RYOZQ RZUYW\",\n\"E_NLNZ RRKR[ RVLVZ RPKTKXMZQZUXYT[P[LYJUJQLMPK\",\n47,\n\"E_KOKW RLXP[ RLNPK RLMLY RMYMM RNLNZ ROZOL RPKP[ RQ[QK RRKR[ RS[SK RT[XX RTKT[ RTKXN RUZUL RVLVZ RWYWM RXMXY RYWYO RPKTKXMZQZUXYT[P[LYJUJQLMPK\",\n\"E_PKTKXMZQZUXYT[P[LYJUJQLMPK RKOKW RLYLM RMMMY RNZNL ROLOZ RP[LX RP[PK RLN RQKQ[ RR[P[LYJUJQLMPKRKR[\",\n\"E_PKTKXMZQZUXYT[P[LYJUJQLMPK RYWYO RXMXY RWYWM RVLVZ RUZUL RTKXN RTKT[ RXX RS[SK RRKTKXMZQZUXYT[R[RK\",\n\"E_PKTKXMZQZUXYT[P[LYJUJQLMPK RKOKS RLMLS RMSMM RNLNS ROSOL RPKLN RPKPS RQKQS RRKRS RSKSS RTSTK RXN RULUS RVSVL RWMWS RXMXS RYOYS RJSJQLMPKTKXMZQZSJS\",\n\"E_PKTKXMZQZUXYT[P[LYJUJQLMPK RYWYS RXYXS RWSWY RVZVS RUSUZ RT[XX RT[TS RS[SS RR[RS RQ[QS RPSP[ RLX ROZOS RNSNZ RMYMS RLYLS RKWKS RZSZUXYT[P[LYJUJSZS\",\n\"E_SSSK RTKTS RTKXN RUSUL RVLVS RWSWM RXMXS RYSYO RZSRSRK RPKTKXMZQZUXYT[P[LYJUJQLMPK\",\n\"E_QSQ[ RP[PS RP[LX ROSOZ RNZNS RMSMY RLYLS RKSKW RJSRSR[ RT[P[LYJUJQLMPKTKXMZQZUXYT[ RYWYO RXMXY RWYWM RVLVZ RUZUL RTKXN RTKT[ RXX RS[SK RRKTKXMZQZUXYT[R[RK\",\n\"E_KOKW RLYLM RMMMY RNZNL ROLOZ RP[LX RP[PK RLN RQKQ[ RR[P[LYJUJQLMPKRKR[\",\n\"E_YWYO RXMXY RWYWM RVLVZ RUZUL RTKXN RTKT[ RXX RS[SK RRKTKXMZQZUXYT[R[RK\",\n\"E_FDFb RGbGD RHDHb RIbID RJDJb RKbKD RLbLW RLDLO RMXMb RMNMD RNbNY RNDNM ROZOb ROLOD RPbPZ RPDPL RQZQb RQLQD RRbRZ RRDRL RSZSb RSLSD RTbTZ RTDTL RUZUb RULUD RVbVY RVDVM RWXWb RWNWD RXbXW RXDXO RYbYD RZDZb R[b[D R\\\\D\\\\b R]b]D R^D^b R_bEbED_D_b RKTKRLONMQLSLVMXOYRYTXWVYSZQZNYLWKT\",\n\"E_FRFD RGNIJ RGDGN RHLHD RIDIK RJJJD RJJMG RKDKI RLHLD RMHQF RMDMH RNGND ROPOS RODOG RPSPP RPGPD RQPQS RQDQG RRSRO RRGRD RSPSS RSFWH RSDSG RTSTP RTGTD RUPUS RUDUG RVGVD RWGZJ RWDWH RXHXD RYDYI RZJZD R[J]N R[D[K R\\\\L\\\\D R]D]N R^R^D ROQROUQ RNSOPROUPVSNS RFSFRGNIKJJMHQGSGWHZJ[K]N^R^S_S_DEDESFS R^T^b R]X[\\\\ R]b]X R\\\\Z\\\\b R[b[[ RZ\\\\Zb RZ\\\\W_ RYbY] RX^Xb RW^S` RWbW^ RV_Vb RUVUS RUbU_ RTSTV RT_Tb RSVSS RSbS_ RRSRW RR_Rb RQVQS RQ`M^ RQbQ_ RPSPV RP_Pb ROVOS RObO_ RN_Nb RM_J\\\\ RMbM^ RL^Lb RKbK] RJ\\\\Jb RI\\\\GX RIbI[ RHZHb RGbGX RFTFb RUURWOU RVSUVRWOVNSVS R^S^T]X[[Z\\\\W^S_Q_M^J\\\\I[GXFTFSESEb_b_S^S\",\n\"E_FRFD RGNIJ RGDGN RHLHD RIDIK RJJJD RJJMG RKDKI RLHLD RMHQF RMDMH RNGND ROPOS RODOG RPSPP RPGPD RQPQS RQDQG RRSRO RRGRD RSPSS RSFWH RSDSG RTSTP RTGTD RUPUS RUDUG RVGVD RWGZJ RWDWH RXHXD RYDYI RZJZD R[J]N R[D[K R\\\\L\\\\D R]D]N R^R^D ROQROUQ RNSOPROUPVSNS RFSFRGNIKJJMHQGSGWHZJ[K]N^R^S_S_DEDESFS\",\n\"E_^T^b R]X[\\\\ R]b]X R\\\\Z\\\\b R[b[[ RZ\\\\Zb RZ\\\\W_ RYbY] RX^Xb RW^S` RWbW^ RV_Vb RUVUS RUbU_ RTSTV RT_Tb RSVSS RSbS_ RRSRW RR_Rb RQVQS RQ`M^ RQbQ_ RPSPV RP_Pb ROVOS RObO_ RN_Nb RM_J\\\\ RMbM^ RL^Lb RKbK] RJ\\\\Jb RI\\\\GX RIbI[ RHZHb RGbGX RFTFb RUURWOU RVSUVRWOVNSVS R^S^T]X[[Z\\\\W^S_Q_M^J\\\\I[GXFTFSESEb_b_S^S\",\n\"E_JSJQLMPKRK\",\n\"E_ZSZQXMTKRK\",\n\"E_ZSZUXYT[R[\",\n\"E_JSJULYP[R[\",\n\"E_JSJQLMPKTKXMZQZS\",\n\"E_ZSZUXYT[P[LYJUJS\",\n\"E_KZK[ RLYL[ RMXM[ RNWN[ ROVO[ RPUP[ RQTQ[ RRSR[ RSRS[ RTQT[ RUPU[ RVOV[ RWNW[ RXMX[ RYLY[ RZ[ZKJ[Z[\",\n\"E_YZY[ RXYX[ RWXW[ RVWV[ RUVU[ RTUT[ RSTS[ RRSR[ RQRQ[ RPQP[ ROPO[ RNON[ RMNM[ RLML[ RKLK[ RJ[JKZ[J[\",\n\"E_YLYK RXMXK RWNWK RVOVK RUPUK RTQTK RSRSK RRSRK RQTQK RPUPK ROVOK RNWNK RMXMK RLYLK RKZKK RJKJ[ZKJK\",\n\"E_KLKK RLMLK RMNMK RNONK ROPOK RPQPK RQRQK RRSRK RSTSK RTUTK RUVUK RVWVK RWXWK RXYXK RYZYK RZKZ[JKZK\",\n\"E_PQRPTQUSTURVPUOSPQ\",\n\"E_JKZKZ[J[JK RK[KK RLKL[ RM[MK RNKN[ RO[OK RPKP[ RQ[QK RJ[JKRKR[J[\",\n\"E_JKZKZ[J[JK RYKY[ RX[XK RWKW[ RV[VK RUKU[ RT[TK RSKS[ RZKZ[R[RKZK\",\n\"E_JKZKZ[J[JK RYLYK RXMXK RWNWK RVOVK RUPUK RTQTK RSRSK RRSRK RQTQK RPUPK ROVOK RNWNK RMXMK RLYLK RKZKK RJKJ[ZKJK\",\n\"E_JKZKZ[J[JK RKZK[ RLYL[ RMXM[ RNWN[ ROVO[ RPUP[ RQTQ[ RRSR[ RSRS[ RTQT[ RUPU[ RVOV[ RWNW[ RXMX[ RYLY[ RZ[ZKJ[Z[\",\n\"E_JKZKZ[J[JK RR[RK\",\n\"E_RK[[I[RK RRUQVRWSVRURW\",\n\"E_J[RL RJZJ[ RKXK[ RLVL[ RMTM[ RNSN[ ROQO[ RPOP[ RQMQ[ RRKR[ RRK[[I[RK\",\n\"E_Z[RL RZZZ[ RYXY[ RXVX[ RWTW[ RVSV[ RUQU[ RTOT[ RSMS[ RRKR[ RRKI[[[RK\",\n\"C`OFTFXHZJ\\\\N\\\\SZWXYT[O[KYIWGSGNIJKHOF\",\n\"E_JKZKZ[J[JK RRKRSJS\",\n\"E_JKZKZ[J[JK RR[RSJS\",\n\"E_JKZKZ[J[JK RR[RSZS\",\n\"E_JKZKZ[J[JK RRKRSZS\",\n\"E_PKTKXMZQZUXYT[P[LYJUJQLMPK RRKRSJS\",\n\"E_PKTKXMZQZUXYT[P[LYJUJQLMPK RR[RSJS\",\n\"E_PKTKXMZQZUXYT[P[LYJUJQLMPK RR[RSZS\",\n\"E_PKTKXMZQZUXYT[P[LYJUJQLMPK RRKRSZS\",\n\"E_JKJ[ZKJK\",\n\"E_ZKZ[JKZK\",\n\"E_J[JKZ[J[\",\n\"E_JKZKZ[J[JK\",\n\"E_KKK[ RL[LK RMKM[ RN[NK ROKO[ RP[PK RQKQ[ RR[RK RSKS[ RT[TK RUKU[ RV[VK RWKW[ RX[XK RYKY[ RJKZKZ[J[JK\",\n\"E_OVOPUPUVOV\",\n\"E_PPPV RQVQP RRPRV RSVSP RTPTV ROVOPUPUVOV\",\n\"E_Z[ZKJ[Z[\",\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n48,\n\"PfUUYZ\",\n\"PfWTYT[V[XYZWZUXUVWT\",\n\"PfZKXS R^K\\\\S\",\n\"PfYFUISMSQUUZXZUXTXRZQ[R[L]N^L^FaIcMcQaU\\\\X\",\n\"PfZJYMVQ RYM`M\\\\T RZR]V\",\n\"PfbHTWWK^R\",\n\"PfWG_GcMcS_XWXSSSMWG\",\n\"PfaD[OaZ\",\n\"PfUD[OUZ\",\n\"PfaD[OaZ R^DXO^Z\",\n\"PfUD[OUZ RXD^OXZ\",\n\"PfbD^D^R\",\n\"PfT[X[XO\",\n\"PfbDbH^H^PZPZDbD\",\n\"PfT[TWYWYO]O][T[\",\n\"Pf^DbDaIaOaUbZ^Z^D\",\n\"PfTDXDX[T[UVUITD\",\n\"PfUIaI RUNaN R[N[Y\",\n\"PfUJaJaNUNUJ RURaRaVUVUR\",\n\"PfbD_H_VbZ\",\n\"PfTDWHWVTZ\",\n\"Pf\\\\DbDaIaOaUbZ\\\\Z\\\\D\",\n\"PfTDZDZ[T[UVUITD\",\n\"PfbD]F]XbZ R`E`Y\",\n\"PfTDYFYXTZ RVEVY\",\n\"PfbD]D][b[ R`D`[\",\n\"PfTDYDY[T[ RVDV[\",\n\"PfTOXL^RbO\",\n\"Pf^EbK RYE]K\",\n\"PfWDTJ R[DXJ\",\n\"PfXTTY R]TYY\",\n\"PfWI_I RWL_L R[L[S RWSXU^U_S RVNXNYPXRVRUPVN R^N`NaP`R^R]P^N RTNRNRSTSVX`XbSdSdNbN\",\n\"Pf[F[Y\",\n\"PfXJXU R]F]X\",\n\"PfVHVX R[J[V R`G`X\",\n\"PfaK^SUZ RWOaV\",\n\"PfZHVN]O_R_U]XYXWTWR_M\",\n\"Pf[M[P RTPbP\",\n\"Pf[J[M RTMbM RTQbQ\",\n\"Pf[I[L RTLbL RTPbP RTTbT\",\n\"PfXLWOTR RWObO R`O_VV[ RVQ[S_Y\",\n\"PfT\\\\W\\\\Y^YaWcTcRaR^T\\\\\",\n\"PfTAWAYCYFWHTHRFRCTA\",\n\"Pf_AbAdCdFbH_H]F]C_A\",\n\"Pf_\\\\b\\\\d^dabc_c]a]^_\\\\\",\n\"PfgOjOlQlTjVgVeTeQgO\",\n\"PfgKjKlMlPjRgRePeMgK RgTjTlVlYj[g[eYeVgT\",\n\"PfSQVMYQ\\\\M_QbM\",\n\"Pf]DWP]Z\",\n\"Pf]I`L R`HcK R]DWP]Z\",\n\"Pf_GWY\",\n\"Pf_MaP RbMdP R_GWY\",\n\"PfVH_X\",\n\"PfWG_GcMcS_XWXSSSMWG RWK_K RWO_O R[O[U\",\n\"PfUFZY R[FUY R\\\\FaY RaF\\\\Y\",\n\"PfULaL R[E[Y\",\n\"PfTLbL RXEXY R^E^Y\",\n\"PfTNbN RWGWVUY R[I[V R_H_Y\",\n\"PfXI^N\\\\O RXP^U\",\n\"PfUJaJaWUWUJ RaJUW\",\n\"PfTLWHZM]JbW\",\n\"PfTIVI RXIZI R\\\\I^I R`IbI RbK RbMbO RbQbS RbUbW R`W R^W\\\\W RZWXW RVWTWTU RTSTQ RTOTM RTKTI RWM[K]N`L RWQ_Q RWT_T R\\\\PYV\",\n\"PfUHaHaYUYUH R_JWW RWJ_W\",\n48,\n\"PfVO]O RYLYTZY R\\\\QXYWYVXVUZR^R`U`W]Z\",\n\"PfTI^H RYEXPZY R]LZUVZTUXP^NaRaX][\",\n\"PfVPVWX[ZX R]Q`W\",\n\"Pf^J`NaS RTHTOUTWZZT\",\n\"PfZJ]L RWO]N_Q^VZ[\",\n\"PfXD]F RUM\\\\J_M_S]XXZ\",\n\"PfZN]P RXR^RX[ R[W]W][`[\",\n\"PfYE]H RWL^KV[ RYU]R]Z`Z\",\n\"PfUQ[Q RXNX[UYUWZT^T`W`Y[[ R]O`R\",\n\"PfTJ[I RWEWYTWTSZP^QaS`X[Y R^HaL\",\n\"PfSLZK\\\\OZZWY RXDTZ R]IaQ\",\n\"PfSLZK\\\\OZZWX RXDTY R]H`Q R`JbM RcIeL\",\n\"PfVI^G RUNaK RYD]SZS RVTVWXY\\\\Z\",\n\"PfVI^G RUNaK RYD]SZS RVTVWXY\\\\Z R_DaG RbCdF\",\n\"Pf]EXO]Z\",\n\"Pf]EXO]Z R_IaL RbHdK\",\n\"PfZLaL RVDUKURUVVYXS R^E_M_S^W\\\\Z\",\n\"PfZLaL RVDUKURUVVYXS R^E_M_S^W\\\\Z RaEcH RdDfG\",\n\"PfWG^G[J RWPUUWZ`Z\",\n\"PfWG^G[J RWPUUWZ`Z R`DbG RcCeF\",\n\"PfTK`I RYE_R[Q RVRVVXY]Z\",\n\"PfTK`I RYE_R[Q RVRVVXY]Z R_DaG RbCdF\",\n\"PfWEWVXYZ[][`YaU\",\n\"PfWEWVXYZ[][`YaU R\\\\L^O R_KaN\",\n\"PfSJaJ R]E]S\\\\WX[ R\\\\OZMYMWPWRYSZS\\\\Q\",\n\"PfSJaJ R]E]S\\\\WX[ R\\\\OZMYMWPWRYSZS\\\\Q R`DbG RcCeF\",\n\"PfTMbL R^E^S\\\\R RWGWZ`Z\",\n\"PfTMbL R^E^S\\\\R RWGWZ`Z R`EbH RcDeG\",\n\"PfWF_EXM RTNaL R_M[PYRYU[X^Z\",\n\"PfWF_EXM RTNaL R_M[PYRYU[X^Z RaDcG RdCfF\",\n\"PfTI[I RYDTY RZN`N RYSZW\\\\YaY\",\n\"PfTI[I RYDTY RZN`N RYT[YaY R_GaJ RbFdI\",\n\"PfTI^I RXDUSYO]O_R_V\\\\YX[\",\n\"PfTI^I RXDUSYO]O_R_V\\\\YX[ R^E`H RaDcG\",\n\"PfTO]M`NaR_UYX\",\n\"PfSL]I`JaMaP`S]VWX\",\n\"PfSL]I`JaMaP`S]VWX R`EbH RcDeG\",\n\"PfTIaG R_H[KYPYV[Y^Z\",\n\"PfTIaG R_H[KYPYV[Y^Z R`CbF RcBeE\",\n\"Pf_KWQUSUWWZ_Z RWDXIZN\",\n\"Pf_KWQUSUWWZ_Z RWDXIZN R_GaJ RbFdI\",\n\"PfTIZI RXDTU R_HbL R]L]X[YXXXT[SaX\",\n\"PfZHaH RUDTLTRUYWR RZSZW[XaX\",\n\"PfUGXW R[EXTUXSUTQWK]JaNaV^Z\\\\ZZW\\\\TbY\",\n\"PfWEWZ RTJWJWK RSVZK^IaJbNaU^Y\\\\YZXZU]TbX\",\n\"Pf[GWWTTTLVH[F_GbLbRaV\\\\Y\",\n\"PfYIaI R^E^YYXYT\\\\SaW RUETKTQUYVR\",\n\"PfYIaI R^E^YYXYT\\\\SaW RUETKTQUYVR R`EbH RcDeG\",\n\"PfYIaI R^E^YYXYT\\\\SaW RUETKTQUYVR RbDcDdEdFcGbGaFaEbD\",\n\"PfSKYGUNUTVXXZ[Y\\\\W]S^M]GbO\",\n\"PfSKYGUNUTVXXZ[Y\\\\W]S^M]GbO R`EbH RcDeG\",\n\"PfSKYGUNUTVXXZ[Y\\\\W]S^M]GbO RbEcEdFdGcHbHaGaFbE\",\n\"PfYE]H RZK[Q]U\\\\YYYWW RVPTX R_QaW\",\n\"PfYE]H RZK[Q]U\\\\YYYWW RVPTX R_QaW R_DaG RbCdF\",\n\"PfYE]H RZK[Q]U\\\\YYYWW RVPTX R_QaW R`DaDbEbFaG`G_F_E`D\",\n\"PfTRYKbS\",\n\"Pf^J`M RaIcL RTRYKbS\",\n\"Pf_I`IaJaK`L_L^K^J_I RTRYKbS\",\n\"PfYF`F RYL`L R^F^ZZYZW\\\\UbX RUETKTQUZWS\",\n\"PfYF`F RYL`L R^F^[ZYZW\\\\UbX RUETKTQUZWS RaCcF RdBfE\",\n\"PfYF`F RYL`L R^F^[ZYZW\\\\UbX RUETKTQUZWS RcCdCeDeEdFcFbEbDcC\",\n\"PfTH`H RVM^M R[D[YXYUWVUZT`W\",\n\"PfVG\\\\GZNVXTUTRWP[PbT R_K_Q^U[Y\",\n\"PfSHYH RWEVVXZ^Z_V_Q RVRUTTTSRSPTNUNVP R]IaN\",\n\"PfUHYX R[FYVVZSVSRWM[K_MbRaW]Z\",\n\"PfYDXVYZ[[^[`ZaV`P RTI\\\\I RUO\\\\O\",\n\"PfUR]N`O`Q_S\\\\T RVL[[ RYK[M\",\n\"PfSO_KaLbP_S\\\\S RUG[[ RYE\\\\H\",\n\"PfTLTVWP\\\\MaQaV]YYV R]J]R[[\",\n\"PfULUXXP[M_MbPbU_W\\\\WZU R]J]Y[[\",\n\"Pf[N[ZVYVVYU`X R[Q_Q\",\n\"Pf[E[[WZUXUVWTaY R[K`J\",\n\"PfYE]H RXIVUYQ]P`S_XY[\",\n\"Pf^E^R]VYZ RWEVJVNWQYN\",\n\"PfWF_EVS[O`OaRaW][Y[XWZU^Y\",\n\"PfWEWZ RTJXIWJ RSV\\\\I_I`L_S_YbU\",\n\"PfXG^FWT[O`OaRaW^YZZ\",\n\"PfWIWZ RULXLWN RUU[M^MaNaT_W[Y\",\n\"PfWEWZ RTKXJWL RSVYN[K_KaMbQ`U[Y\",\n\"PfWG]FWZUUVQZM^NaQaX][ZY[V_X\",\n\"PfXE^EVN R\\\\K`M`QZTWRXP[QTY RVWXW[Z R]W_WaY\",\n\"PfUH^H RZDUSYM[O\\\\U R`NWUWXZ[_[\",\n\"Pf[EU[ZQ\\\\Q^[_[bV\",\n\"PfXD]F RUM\\\\J_M_S]XXZ R`FbI RcEeH\",\n\"PfUO\\\\N]P\\\\YYW RYJUY R^LaQ\",\n\"PfYP`O RUKTQTUVZWW R]L]V\\\\X[[\",\n48,\n48,\n\"Pf^E`H RaDcG\",\n\"PfaDbDcEcFbGaG`F`EaD\",\n\"PfSEUH RVDXG\",\n\"PfTDUDVEVFUGTGSFSETD\",\n\"PfYI`P\\\\R\",\n\"PfYI`P\\\\R R^G`J RaFcI\",\n\"PfZJ`J R[EUW RXP^P`S_X\\\\[YZ\",\n\"PfTLbL RTTbT\",\n\"PfVK`K_N]Q R[N[RZUXX\",\n\"PfTGbGaI_L\\\\N RZJZQZSYVW[\",\n\"Pf[P[Z R^J\\\\NYQVS\",\n\"Pf[L[[ R`E^H[LWOTQ\",\n\"PfZHZL RVOVL_L_O^S]U[WXY\",\n\"Pf[D[H RUOUHaH`N_Q]U[XWZ\",\n\"PfWL_L R[L[W RVW`W\",\n\"PfUIaI RTWbW R[I[W\",\n\"PfWO`O R]K]Z[Y R\\\\O[RYUVX\",\n\"PfUKbK R^D^Z[Y R]K[PXSTW\",\n\"PfUJaJ`Y]W RZCZJZOYSWVUY\",\n\"PfUJaJ`Y]W RZCZJZOYSWVUY R_EaH RaCcF\",\n\"PfVL^J RUSaP RYD]Z\",\n\"Pf]E_G R`DbF RVL^J RUSaP RYD]Z\",\n\"PfZDYIWLUP RZH`H`L_P]T[WWZ\",\n\"PfZDYIWLUO RZGaG`L_P]T[WWZ R`DbF RcCeE\",\n\"PfWKbK RXDWHUMTP R]K]P\\\\SZVWZ\",\n\"PfWKbK RXDWHUMTQ R]K]P\\\\SZVWZ R^G`I RaFcH\",\n\"PfUIaIaWUW\",\n\"Pf`FbH RcEeG RUIaIaWUW\",\n\"PfTKbK RWEWR R_D_K_O^S]U[XYZ\",\n\"PfTKbK RWEWR R_D_K_O^S]U[XYZ RaDbF RdCeE\",\n\"PfWFZI RULXO RUYZW]U_SbK\",\n\"PfWFZI RULXO RUYZW]U_SbK R_GaI RbFdH\",\n\"PfUF^F]L[PYSWVTY R[Q]T`Y\",\n\"PfUF^F]L[OYSWVTY R[Q]T`Y R`EbG RcDeF\",\n\"PfULbJ^R RYEYXaX\",\n\"Pf_EaG RbDdF RULbJ^R RYDYXaX\",\n\"PfUFWL R`F`L_P^S\\\\VWY\",\n\"PfaG`L_P^T\\\\WXZ RaDcF RdCfE RUGWM\",\n\"PfXL]R RYDXHWLUP RYH`H_L^P]T[WXZ\",\n\"PfXL]R RYDXHWLUP RYH`H_L^P]T[WXZ R`EbG RcDeF\",\n\"PfTNbN R_E]FZGVH R\\\\G\\\\M[QZUYWVZ\",\n\"PfTNbN R_E]FZGVH R\\\\G\\\\M[QZUYWWZ R`DbF RcCeE\",\n\"PfULWQ RZK[P R`L`Q_T\\\\WYY\",\n\"PfUGWN RYF[L R`G`M_Q]U[WXY\",\n\"PfUGWN RYF[L R`G`M_Q]U[WXY RaEcG RdDfF\",\n\"PfWG_G RTMbM R[M[RYVVZ\",\n\"Pf`EbG RcDeF RWG_G RTMbM R[M[RYVVZ\",\n\"Pf[D[Z R[MaR\",\n\"Pf_KaM RbJdL R[D[Z R[MaR\",\n\"PfTLbL R[D[K[QZTXWVZ\",\n\"PfUKaK RSWcW\",\n\"PfXM_W RWF`F_L^P\\\\UZWVZ\",\n\"PfYD]G R[P[[ R]QaU RVH`H^L\\\\OYRTU\",\n\"Pf_F^L]QZUVY\",\n\"Pf^JbV RYJXOVSTV\",\n\"Pf^JbV RYJXOVSTV R_HaJ RbGdI\",\n\"Pf^JbV RYJXOVSTV R`GaGbHbIaJ`J_I_H`G\",\n\"PfUFUYaY R`J\\\\MYNVO\",\n\"PfUFUYaY R`J\\\\MYNVO R`HbJ RcGeI\",\n\"PfUFUYaY R`J\\\\MYNVO RaFbFcGcHbIaI`H`GaF\",\n\"PfUH`H`M_R]UZWVY\",\n\"PfUH`H`M_R]UZWVY RaFcH RdEfG\",\n\"PfUH`H`M_R]UZWVY RbEcEdFdGcHbHaGaFbE\",\n\"PfTRYJbV\",\n\"Pf]K_M R`JbL RTRYJbV\",\n\"Pf_K`KaLaM`N_N^M^L_K RTRYJbV\",\n\"PfUKaK R[E[ZXY R^OaW RWOVRUTTW\",\n\"PfUKaK R[E[ZXY R^OaW RWOVRUTTW R`GbI RcFeH\",\n\"PfUKaK R[E[ZXY R^OaW RWOVRUTTW RaFbFcGcHbIaI`H`GaF\",\n\"PfTJaJ_N]Q[S RWPZS[U]X\",\n\"PfWFaJ RWM_P RUT`Y\",\n\"Pf[FUY_W R]PaZ\",\n\"Pf`E_J]OZSXUTX RXKZM]Q`U\",\n\"PfVG`G RSOcO RZGZY`Y\",\n\"PfUOaL^R RXI[Z\",\n\"PfXE[Z RTMaI`L_O^Q\",\n\"PfXL^L^V RVVaV\",\n\"PfVI`I_W RSWcW\",\n\"PfWL_L_XWX RWR_R\",\n\"PfUHaHaXUX RUPaP\",\n\"PfVG`G RTLaLaQ_T\\\\WXZ\",\n\"PfXEXP R_E_M_Q]U\\\\WYZ\",\n\"PfWGWOVSUVTY R[E[Y]W_TaP\",\n\"PfWEWX[W^U`SbO\",\n\"PfUHUV RUHaHaVUV\",\n\"PfVPVJ`J_P]UYZ\",\n\"PfUGUN RaG`M_Q^U\\\\XYZ RUGaG\",\n\"PfWJbJ RWJWS RSScS R]D]Z\",\n\"PfVIaI]P R[L[W RSWcW\",\n\"PfVM`M RUF`F`L`O_S]VZXVZ\",\n\"PfUHYL RUXZW]T_QaJ\",\n\"Pf[D[H RUOUHaH`N_Q]U[XWZ RaEcG RdDfF\",\n\"PfWM_M^Y\\\\X R[IZNYSWX\",\n\"PfYMaM RYIXMWPUS R_M^Q]T\\\\WZZ\",\n\"PfaEcG RdDfF RUGUN RaG`N`Q^U\\\\WYZ RUGaG\",\n\"Pf`GbI RcFeH RWJbJ RWJWS RSScS R]D]Z\",\n\"Pf`FbH RcEeG RVIaI]P R[L[W RSWcW\",\n\"PfVM`M RUF`F`L`O_S]VZXVZ RaEcG RdDfF\",\n\"PfZP\\\\P]Q]S\\\\TZTYSYQZP\",\n\"PfSPcP\",\n\"PfWK^U\",\n\"Pf\\\\M^O R_KaM RWK^U\",\n\"PfVF`F`Y\",\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n23,\n\"PoROlO\",\n\"PoRFlF RX[`[ R`F`[\",\n\"PoRFlF R^[e[ RZFVQ RWNiNfZ\",\n\"Po\\\\D\\\\[j[jW RSOkK\",\n\"PoR[l[ R_D_[\",\n\"PoRFlF R_F_[\",\n\"PoRGlG R[UU[ R^LYW R_G\\\\T\",\n\"PoRFlF R\\\\F[PXVT[ R\\\\NiMiTg[`[\",\n\"PoRIlI RWLZS^WcYj[ RbDbLaT\\\\XYZS[\",\n\"PoTFjF RVPhP RR[l[\",\n\"Po^MjM RR[l[ R^D^[\",\n\"PoRElE R^E^[ R^KjQ\",\n\"PoSGlG RfFf[ RXVR[ RYFYPXV\",\n\"PoRElE R`H`[ RaGXPRS RaLiOlS\",\n\"PoYHiH RRTlT R\\\\[d[ RYCWNgNeZ\",\n\"PoRElE RURjR Rb[h[ RUJUU R_E_R R_KkKjRi[\",\n\"PoRElE R_KjK Rb[i[ R_E_P RUQlQi[ RVITR\",\n\"PoROlO RR[l[ R[FZNX[ RUFgFf[\",\n\"PoaXhX RR[l[ R`PcT RXUSW R^NVV RVK`P RaH^O RTFkFkNiX\",\n\"PoTGjG RRLlL ReS`X RYQhQbW R^C\\\\JXQ RYWeZ\",\n\"PoWLgL RWTgT RR[l[ RWEW[ RWEgEg[\",\n\"PoSFkF RR[l[ R`I`Y RcMfOkS RaF`IXQRS\",\n\"PoRJlJ R_RgR RWYkY RWDW[ R_C_T RgDgT\",\n\"PoRKlK RWYgY RWCW[ R_C_Y RgCg[\",\n\"PoWNkN RR[l[ RWGW[ RdNd[ RhEWG\",\n\"PoRElE Re[j[ RSKS[ RSKkKk[ R_F^PZUVV R^NgV\",\n\"PoR[l[ R[D[[ RcDc[ RTKXS RjKfS\",\n\"PoR[l[ RhTlX RaT\\\\X RYL\\\\O^T ReMiV RXOTW RcN_W RdHgS RYEWS RdDbR\",\n\"PoRGlG RUPjP R[[`[ R`K`[ ReSlY RYKUO RXTRZ R\\\\CYL\",\n\"Po`VkV RTV]V RR[l[ RkJgN RbJ`NhN`V R]J\\\\N RVKTO[OTV RZDVM RfDbL\",\n\"PoYX_X RS[k[ R_J_X RVEgEdG_J RRL[LXQSV RjJgMbN R`JbOgTlV\",\n\"PoSEkE RUJiJ RRPlP RZZjZ RXZhZ RRZeZ R_E_P ReTl[ R[PWZ\"\n];\n\n", "/*\n    Copyright (c) 2023 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nimport { Angle, BBox, Vec2 } from \"../../base/math\";\nimport { is_number, is_string } from \"../../base/types\";\nimport { Font, TextStyle } from \"./font\";\nimport { Glyph, StrokeGlyph } from \"./glyph\";\nimport * as newstroke from \"./newstroke-glyphs\";\n\n/** Stroke font\n *\n * Stroke font are \"Hershey\" fonts comprised of strokes.\n *\n * This class is adapted from KiCAD's STROKE_FONT.\n */\nexport class StrokeFont extends Font {\n    static readonly overbar_position_factor = 1.4;\n    static readonly underline_position_factor = -0.16;\n    static readonly font_scale = 1 / 21;\n    static readonly font_offset = -10;\n\n    private static instance?: StrokeFont;\n\n    static default(): StrokeFont {\n        if (!this.instance) {\n            this.instance = new StrokeFont();\n        }\n        return this.instance;\n    }\n\n    /** Glyph data loaded from newstroke */\n    #glyphs: Map<number, StrokeGlyph> = new Map();\n    #shared_glyphs: StrokeGlyph[] = [];\n\n    constructor() {\n        super(\"stroke\");\n        this.#load();\n    }\n\n    /**\n     * Parses and prepares Newstroke for rendering.\n     */\n    #load() {\n        for (const glyph_data of newstroke.shared_glyphs) {\n            this.#shared_glyphs.push(decode_glyph(glyph_data));\n        }\n\n        // by default, KiCanvas only loads the first 256 glyphs of newstroke\n        // to reduce memory and CPU usage. Additional glyphs are lazy loaded\n        // as needed\n        for (let i = 0; i < 256; i++) {\n            this.#load_glyph(i);\n        }\n    }\n\n    #load_glyph(idx: number) {\n        const data: number | string | undefined = newstroke.glyph_data[idx];\n        if (is_string(data)) {\n            this.#glyphs.set(idx, decode_glyph(data));\n        } else if (is_number(data)) {\n            const glyph = this.#shared_glyphs[data]!;\n            this.#glyphs.set(idx, glyph);\n        } else {\n            throw new Error(`Invalid glyph data for glyph ${idx}: ${data}`);\n        }\n\n        // remove the glyph data from the array, since it won't be needed again.\n        newstroke.glyph_data[idx] = undefined;\n    }\n\n    /** Get a glyph for a specific character. */\n    get_glyph(c: string): StrokeGlyph {\n        const glyph_index = ord(c) - ord(\" \");\n\n        if (glyph_index < 0 || glyph_index > newstroke.glyph_data.length) {\n            return this.get_glyph(\"?\");\n        }\n\n        if (!this.#glyphs.has(glyph_index)) {\n            this.#load_glyph(glyph_index);\n        }\n\n        return this.#glyphs.get(glyph_index)!;\n    }\n\n    override get_line_extents(\n        text: string,\n        size: Vec2,\n        thickness: number,\n        bold: boolean,\n        italic: boolean,\n    ): Vec2 {\n        const extents = super.get_line_extents(\n            text,\n            size,\n            thickness,\n            bold,\n            italic,\n        );\n        // KiCAD grows the bounding box a little for stroke fonts to\n        // accommodate descenders and such.\n        const padding = thickness * 1.25 * 2;\n        extents.x += padding;\n        extents.y += padding;\n        return extents;\n    }\n\n    override compute_underline_vertical_position(glyph_height: number): number {\n        return glyph_height * StrokeFont.underline_position_factor;\n    }\n\n    override compute_overbar_vertical_position(glyph_height: number): number {\n        return glyph_height * StrokeFont.overbar_position_factor;\n    }\n\n    override get_interline(glyph_height: number, line_spacing = 1): number {\n        // KiCAD doesn't include glyph thickness for interline spacing in\n        // order to keep the spacing between bold and normal text the same.\n        return glyph_height * line_spacing * StrokeFont.interline_pitch_ratio;\n    }\n\n    override get_text_as_glyphs(\n        text: string,\n        size: Vec2,\n        position: Vec2,\n        angle: Angle,\n        mirror: boolean,\n        origin: Vec2,\n        style: TextStyle,\n    ): { bbox: BBox; glyphs: Glyph[]; cursor: Vec2 } {\n        // Magic numbers from STROKE_FONT::GetTextAsGlyphs\n        const space_width = 0.6;\n        const inter_char = 0.2;\n        const tab_width = 4 * 0.82;\n        const super_sub_size_multiplier = 0.7;\n        const super_height_offset = 0.5;\n        const sub_height_offset = 0.3;\n\n        const glyphs: Glyph[] = [];\n\n        const cursor = position.copy();\n        let glyph_size = size.copy();\n\n        // Apply style modifiers\n        const tilt = style.italic ? StrokeFont.italic_tilt : 0;\n        if (style.subscript || style.superscript) {\n            glyph_size = glyph_size.multiply(super_sub_size_multiplier);\n\n            if (style.subscript) {\n                cursor.y += glyph_size.y * sub_height_offset;\n            } else {\n                cursor.y -= glyph_size.y * super_height_offset;\n            }\n        }\n\n        // Fetch the glyph and add it to the list.\n        for (const c of text) {\n            switch (c) {\n                case \"\\t\":\n                    {\n                        // tabs are 4 spaces.\n                        const char_tab_width = Math.round(\n                            glyph_size.x * tab_width,\n                        );\n                        const current_intrusion =\n                            (cursor.x - origin.x) % char_tab_width;\n                        cursor.x += char_tab_width - current_intrusion;\n                    }\n                    break;\n\n                case \" \":\n                    cursor.x += Math.round(glyph_size.x * space_width);\n                    break;\n\n                default:\n                    {\n                        const source = this.get_glyph(c);\n                        const extents = source.bbox.end.multiply(glyph_size);\n\n                        glyphs.push(\n                            source.transform(\n                                glyph_size,\n                                cursor,\n                                tilt,\n                                angle,\n                                mirror,\n                                origin,\n                            ),\n                        );\n\n                        if (tilt) {\n                            extents.x -= extents.y * tilt;\n                        }\n\n                        cursor.x += Math.round(extents.x);\n                    }\n                    break;\n            }\n        }\n\n        // Add overbar or underline, if necessary\n\n        let has_bar = false;\n        const bar_offset = new Vec2(0, 0);\n\n        // KiCAD shortens the overbar slightly\n        const bar_trim = glyph_size.x * 0.1;\n\n        if (style.overbar) {\n            has_bar = true;\n            bar_offset.y = this.compute_overbar_vertical_position(glyph_size.y);\n        } else if (style.underline) {\n            has_bar = true;\n            bar_offset.y = this.compute_underline_vertical_position(\n                glyph_size.y,\n            );\n        }\n\n        // Note: KiCanvas treats underline and overbar as mututally exclusive,\n        // but technically KiCAD can show both at the same time. I wasn't able\n        // to find an actual real world case of this.\n        if (has_bar) {\n            if (style.italic) {\n                bar_offset.x = bar_offset.y * StrokeFont.italic_tilt;\n            }\n\n            const bar_start = new Vec2(\n                position.x + bar_offset.x + bar_trim,\n                cursor.y - bar_offset.y,\n            );\n            const bar_end = new Vec2(\n                cursor.x + bar_offset.x - bar_trim,\n                cursor.y - bar_offset.y,\n            );\n\n            const bar_glyph = new StrokeGlyph(\n                [[bar_start, bar_end]],\n                BBox.from_points([bar_start, bar_end]),\n            );\n\n            glyphs.push(\n                bar_glyph.transform(\n                    new Vec2(1, 1),\n                    new Vec2(0, 0),\n                    0,\n                    angle,\n                    mirror,\n                    origin,\n                ),\n            );\n        }\n\n        const bbox = new BBox();\n        bbox.start = position;\n        bbox.end = new Vec2(\n            cursor.x + bar_offset.x - Math.round(glyph_size.x * inter_char),\n            cursor.y +\n                Math.max(\n                    glyph_size.y,\n                    bar_offset.y * StrokeFont.overbar_position_factor,\n                ),\n        );\n\n        return {\n            bbox: bbox,\n            glyphs: glyphs,\n            cursor: new Vec2(cursor.x, position.y),\n        };\n    }\n}\n\nfunction ord(c: string): number {\n    return c.charCodeAt(0);\n}\n\nfunction decode_coord_val(c: string): number {\n    return ord(c) - ord(\"R\");\n}\n\nfunction decode_coord(c: [string, string]): [number, number] {\n    return [decode_coord_val(c[0]!), decode_coord_val(c[1]!)];\n}\n\n/**\n * Parses a newstroke glyph\n *\n * Newstroke is distributed as a .cpp file and a old-format KiCAD library,\n * this script reads a JS-ified version.\n *\n * The code here is based on KiCAD's STROKE_FONT::LoadNewStrokeFont\n *\n *  Notes:\n *  - Coordinate values are coded as ASCII characters relative to \"R\".\n *  - Coordinate values are -1 to +1.\n *  - FONT_OFFSET is used to allow descenders that go below the baseline\n *\n */\nfunction decode_glyph(glyph_data: string) {\n    let start_x = 0;\n    let end_x = 0;\n    let width = 0;\n    let min_y = 0;\n    let max_y = 0;\n    const strokes: Vec2[][] = [];\n    let points: Vec2[] | null = null;\n\n    for (let i = 0; i < glyph_data.length; i += 2) {\n        const coord_raw: [string, string] = [\n            glyph_data[i]!,\n            glyph_data[i + 1]!,\n        ];\n        const coord = decode_coord(coord_raw);\n\n        if (i < 2) {\n            // The first coord contains the horizontal bounding box\n            start_x = coord[0] * StrokeFont.font_scale;\n            end_x = coord[1] * StrokeFont.font_scale;\n            width = end_x - start_x;\n        } else if (coord_raw[0] == \" \" && coord_raw[1] == \"R\") {\n            // End of stroke\n            points = null;\n        } else {\n            const point = new Vec2(\n                coord[0] * StrokeFont.font_scale - start_x,\n                (coord[1] + StrokeFont.font_offset) * StrokeFont.font_scale,\n            );\n\n            // Start of new stroke, create a new list of points and add it to the glyph.\n            if (points == null) {\n                points = [];\n                strokes.push(points);\n            }\n\n            min_y = Math.min(min_y, point.y);\n            max_y = Math.max(max_y, point.y);\n\n            points.push(point);\n        }\n    }\n\n    const bb = new BBox(0, min_y, width, max_y - min_y);\n    const glyph = new StrokeGlyph(strokes, bb);\n\n    return glyph;\n}\n", "/*\n    Copyright (c) 2023 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nimport { Angle, BBox, Vec2 } from \"../../base/math\";\nimport { At, Effects } from \"../common\";\nimport { Font, TextAttributes } from \"./font\";\nimport { StrokeFont } from \"./stroke-font\";\n\n/** Primary text mixin\n *\n * KiCAD uses EDA_TEXT as a sort of grab-bag of various things needed to render\n * text across both Eeschema and Pcbnew. There is a lot of meandering code\n * because it has mostly been worked on piecemeal over the years, so there's\n * some stuff that is a little weird and some code that does almost the same\n * thing as other code. I've done my best to keep the structure clean while\n * carefully matching KiCAD's behavior, but it's still a lot to wrap your\n * head around.\n *\n * Note: Just like the underlying Font class, this all expects\n * scaled internal units instead of mm!\n */\nexport class EDAText {\n  constructor(text: string) {\n    this.text = text;\n  }\n\n  /**\n   * Apply \"effects\" parsed from schematic or board files.\n   *\n   * KiCAD uses Effects to encapsulate all of the various text\n   * options, this translates it into TextAttributes used by Font.\n   */\n  apply_effects(effects: Effects) {\n    this.attributes.h_align = effects.justify.horizontal;\n    this.attributes.v_align = effects.justify.vertical;\n    this.attributes.mirrored = effects.justify.mirror;\n    this.attributes.italic = effects.font.italic;\n    this.attributes.bold = effects.font.bold;\n    this.attributes.size.set(effects.font.size.multiply(10000));\n    this.attributes.stroke_width = (effects.font.thickness ?? 0) * 10000;\n    this.attributes.stroke_width = this.get_effective_text_thickness(1588);\n    this.attributes.color = effects.font.color;\n  }\n\n  /**\n   * Apply \"at\" parsed from schematic or board files.\n   *\n   * KiCAD uses At to encapsulate both position and rotation. How this is\n   * actually applied various based on the actual text item.\n   */\n  apply_at(at: At) {\n    this.text_pos = at.position.multiply(10000);\n    if (at.rotation == 270) {\n      this.text_angle = Angle.from_degrees(90.1);\n    } else {\n      this.text_angle = Angle.from_degrees(at.rotation);\n    }\n  }\n\n  /** The unprocessed text value, as it would be seen in save files */\n  text: string;\n\n  /** The processed text that will be used for rendering */\n  get shown_text(): string {\n    return this.text;\n  }\n\n  /** Effective text width selected either the text thickness specified in\n   * attributes if it's a valid value or the given default value. */\n  get_effective_text_thickness(default_thickness?: number): number {\n    let thickness = this.text_thickness;\n\n    if (thickness < 1) {\n      thickness = default_thickness ?? 0;\n\n      if (this.bold) {\n        thickness = get_bold_thickness(this.text_width);\n      } else if (thickness <= 1) {\n        thickness = get_normal_thickness(this.text_width);\n      }\n    }\n\n    thickness = clamp_thickness(thickness, this.text_width, true);\n\n    return thickness;\n  }\n\n  public text_pos = new Vec2(0, 0);\n\n  public attributes = new TextAttributes();\n\n  // Aliases for attributes\n\n  get text_angle() {\n    return this.attributes.angle;\n  }\n\n  set text_angle(a: Angle) {\n    this.attributes.angle = a;\n  }\n\n  get italic() {\n    return this.attributes.italic;\n  }\n\n  get bold() {\n    return this.attributes.bold;\n  }\n\n  get visible() {\n    return this.attributes.visible;\n  }\n\n  get mirrored() {\n    return this.attributes.mirrored;\n  }\n\n  get multiline() {\n    return this.attributes.multiline;\n  }\n\n  get h_align() {\n    return this.attributes.h_align;\n  }\n\n  set h_align(v) {\n    this.attributes.h_align = v;\n  }\n\n  get v_align() {\n    return this.attributes.v_align;\n  }\n\n  set v_align(v) {\n    this.attributes.v_align = v;\n  }\n\n  get line_spacing() {\n    return this.attributes.line_spacing;\n  }\n\n  get text_size() {\n    return this.attributes.size;\n  }\n\n  get text_width() {\n    return this.attributes.size.x;\n  }\n\n  get text_height() {\n    return this.attributes.size.y;\n  }\n\n  get text_color() {\n    return this.attributes.color;\n  }\n\n  get keep_upright() {\n    return this.attributes.keep_upright;\n  }\n\n  get text_thickness() {\n    return this.attributes.stroke_width;\n  }\n\n  /**\n   * Get the bounding box for a line or lines of text.\n   *\n   * Used by .bounding_box in LibText and SchField.\n   *\n   * Note: text is always treated as non-rotated.\n   *\n   * @param line - which line to measure, if null all lines are measured.\n   * @param invert_y - inverts the y axis when calculating the bbox. Used\n   *                   by eeschema for symbol text items.\n   */\n  get_text_box(line?: number, invert_y?: boolean): BBox {\n    const pos = this.text_pos.copy();\n    const bbox = new BBox(0, 0, 0, 0);\n    let strings: string[] = [];\n    let text = this.shown_text;\n    const thickness = this.get_effective_text_thickness();\n\n    if (this.multiline) {\n      strings = text.split(\"\\n\");\n\n      if (strings.length) {\n        if (line != undefined && line < strings.length) {\n          text = strings[line]!;\n        } else {\n          text = strings[0]!;\n        }\n      }\n    }\n\n    // Calculate the horizontal and vertical size.\n    const font = StrokeFont.default();\n    const font_size = this.text_size.copy();\n    const bold = this.bold;\n    const italic = this.italic;\n    let extents = font.get_line_extents(\n      text,\n      font_size,\n      thickness,\n      bold,\n      italic,\n    );\n    let overbar_offset = 0;\n\n    // Create a bbox for horizontal text that's top and left aligned. It'll\n    // be adjusted later to account for different orientations and alignments.\n    const text_size = extents.copy();\n\n    if (this.multiline && line && line < strings.length) {\n      pos.y -= Math.round(line * font.get_interline(font_size.y));\n    }\n\n    if (text.includes(\"~{\")) {\n      overbar_offset = extents.y / 14;\n    }\n\n    if (invert_y) {\n      pos.y = -pos.y;\n    }\n\n    bbox.start = pos;\n\n    // Merge all bboxes for multiline text where a specific line wasn't\n    // requested.\n    if (this.multiline && !line && strings.length) {\n      for (const line of strings.slice(1)) {\n        extents = font.get_line_extents(\n          line,\n          font_size,\n          thickness,\n          bold,\n          italic,\n        );\n        text_size.x = Math.max(text_size.x, extents.x);\n      }\n\n      text_size.y += Math.round(\n        (strings.length - 1) * font.get_interline(font_size.y),\n      );\n    }\n\n    bbox.w = text_size.x;\n    bbox.h = text_size.y;\n\n    // Adjust the bbox for justification, mirroring, etc.\n    const italic_offset = this.italic\n      ? Math.round(font_size.y * Font.italic_tilt)\n      : 0;\n\n    switch (this.h_align) {\n      case \"left\":\n        if (this.mirrored) {\n          bbox.x = bbox.x - (bbox.w - italic_offset);\n        }\n        break;\n      case \"center\":\n        bbox.x = bbox.x - (bbox.w - italic_offset) / 2;\n        break;\n      case \"right\":\n        if (!this.mirrored) {\n          bbox.x = bbox.x - (bbox.w - italic_offset);\n        }\n        break;\n    }\n\n    switch (this.v_align) {\n      case \"top\":\n        break;\n      case \"center\":\n        bbox.y = bbox.y - (bbox.h + overbar_offset) / 2;\n        break;\n      case \"bottom\":\n        bbox.y = bbox.y - (bbox.h + overbar_offset);\n        break;\n    }\n\n    return bbox;\n  }\n}\n\nfunction get_bold_thickness(text_width: number): number {\n  return Math.round(text_width / 5);\n}\n\nfunction get_normal_thickness(text_width: number): number {\n  return Math.round(text_width / 8);\n}\n\n/** Prevents text from being too thick and overlapping\n *\n * As per KiCAD's Clamp_Text_PenSize, this limits normal text to\n * 18% and bold text to 25%.\n */\nfunction clamp_thickness(\n  thickness: number,\n  text_width: number,\n  allow_bold: boolean,\n) {\n  const max_thickness = Math.round(text_width * (allow_bold ? 0.25 : 0.18));\n  return Math.min(thickness, max_thickness);\n}\n", "/*\n    Copyright (c) 2023 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nimport { Angle, BBox, Vec2 } from \"../../base/math\";\nimport { EDAText } from \"./eda-text\";\n\n/**\n * Represents text objects that belong to a symbol. This is just for graphical\n * text and doesn't include fields, pin names, or pin numbers.\n *\n * Note: the methods normalize_text, rotate, mirror_horizontal, and\n * mirror_vertical are all implemented in order to match KiCAD's behavior, see\n * apply_symbol_transformations().\n *\n */\nexport class LibText extends EDAText {\n    constructor(text: string) {\n        super(text);\n    }\n\n    override get shown_text() {\n        return this.text;\n    }\n\n    /**\n     * Get world space bounding box\n     *\n     * Schematic symbols use an \"inverted\" (bottom to top) Y axis, so this\n     * flips the box, rotates it, and flips it back so that it's properly\n     * in world space.\n     */\n    get bounding_box(): BBox {\n        let bbox = this.get_text_box(undefined, true).mirror_vertical();\n\n        const pos = this.text_pos;\n        let start = bbox.start;\n        let end = bbox.end;\n        const angle = this.text_angle.negative();\n\n        start = angle.rotate_point(start, pos);\n        end = angle.rotate_point(end, pos);\n\n        bbox = BBox.from_points([start, end]);\n        bbox = bbox.mirror_vertical();\n\n        return bbox;\n    }\n\n    /**\n     * Returns the center of the text's BBox in world coordinates.\n     *\n     * This contains the positioning logic KiCAD performs in\n     * SCH_PAINTER::Draw(LIB_TEXT). It made more sense for it to be here for\n     * us.\n     */\n    get world_pos(): Vec2 {\n        const bbox = this.bounding_box;\n        const pos = bbox.center;\n\n        if (this.attributes.angle.is_vertical) {\n            switch (this.attributes.h_align) {\n                case \"left\":\n                    pos.y = bbox.y2;\n                    break;\n                case \"center\":\n                    pos.y = (bbox.y + bbox.y2) / 2;\n                    break;\n                case \"right\":\n                    pos.y = bbox.y;\n                    break;\n            }\n        } else {\n            switch (this.attributes.h_align) {\n                case \"left\":\n                    pos.x = bbox.x;\n                    break;\n                case \"center\":\n                    pos.x = (bbox.x + bbox.x2) / 2;\n                    break;\n                case \"right\":\n                    pos.x = bbox.x2;\n                    break;\n            }\n        }\n\n        return pos;\n    }\n\n    /**\n     * Applies symbol transformation (rotation, position, mirror).\n     *\n     * Uses the rotate() and mirror_*() methods to properly orient and position\n     * symbol text, since KiCAD does not directly use a symbol's transformation\n     * to orient text. Instead, KiCAD deep copies the library symbol then calls\n     * rotate() on text items multiple times based on the symbol instance's\n     * rotation. This makes it non-trivial to directly set the text's location\n     * and orientation, so we adopt their somewhat convoluted method. See\n     * KiCAD's sch_painter.cpp::orientSymbol.\n     */\n    apply_symbol_transformations(transforms: {\n        position: Vec2;\n        rotations: number;\n        mirror_x: boolean;\n        mirror_y: boolean;\n    }) {\n        for (let i = 0; i < transforms.rotations; i++) {\n            this.rotate(new Vec2(0, 0), true);\n        }\n\n        if (transforms.mirror_x) {\n            this.mirror_vertically(new Vec2(0, 0));\n        }\n\n        if (transforms.mirror_y) {\n            this.mirror_horizontally(new Vec2(0, 0));\n        }\n\n        this.text_pos = this.text_pos.add(\n            transforms.position.multiply(new Vec2(10000, -10000)),\n        );\n    }\n\n    /**\n     * Internal utility method for offsetting the text position based on the\n     * horizontal and vertical justifcation.\n     */\n    normalize_justification(inverse: boolean) {\n        let delta = new Vec2(0, 0);\n        const bbox = this.get_text_box();\n\n        if (this.text_angle.is_horizontal) {\n            if (this.h_align == \"left\") {\n                delta.x = bbox.w / 2;\n            } else if (this.h_align == \"right\") {\n                delta.x = -(bbox.w / 2);\n            }\n\n            if (this.v_align == \"top\") {\n                delta.y = -(bbox.h / 2);\n            } else if (this.v_align == \"bottom\") {\n                delta.y = bbox.h / 2;\n            }\n        } else {\n            if (this.h_align == \"left\") {\n                delta.y = bbox.w / 2;\n            } else if (this.h_align == \"right\") {\n                delta.y = -(bbox.w / 2);\n            }\n\n            if (this.v_align == \"top\") {\n                delta.x = bbox.h / 2;\n            } else if (this.v_align == \"bottom\") {\n                delta.x = -(bbox.h / 2);\n            }\n        }\n\n        if (inverse) {\n            delta = delta.multiply(-1);\n        }\n\n        this.text_pos = this.text_pos.add(delta);\n    }\n\n    /**\n     * Rotate the text\n     *\n     * KiCAD's rotation of LIB_TEXT objects is somewhat convoluted, but\n     * essentially the text is moved to the center of its current bounding box,\n     * rotated around the center, and then offset from the center of the\n     * bounding box based on the text justification.\n     */\n    rotate(center: Vec2, ccw = false) {\n        this.normalize_justification(false);\n\n        const angle = Angle.from_degrees(ccw ? -90 : 90);\n\n        this.text_pos = angle.rotate_point(this.text_pos, center);\n\n        if (this.text_angle.is_horizontal) {\n            this.text_angle.degrees = 90;\n        } else {\n            this.h_align = swap_values(this.h_align, \"left\", \"right\");\n            this.v_align = swap_values(this.v_align, \"top\", \"bottom\");\n            this.text_angle.degrees = 0;\n        }\n\n        this.normalize_justification(true);\n    }\n\n    /**\n     * Mirrors the text horizontally.\n     *\n     * Deals with re-assigning the horizontal justification, as mirroring\n     * left aligned text is the same as changing it to right aligned.\n     */\n    mirror_horizontally(center: Vec2) {\n        this.normalize_justification(false);\n        let x = this.text_pos.x;\n\n        x -= center.x;\n        x *= -1;\n        x += center.x;\n\n        if (this.text_angle.is_horizontal) {\n            this.h_align = swap_values(this.h_align, \"left\", \"right\");\n        } else {\n            this.v_align = swap_values(this.v_align, \"top\", \"bottom\");\n        }\n\n        this.text_pos.x = x;\n        this.normalize_justification(true);\n    }\n\n    /**\n     * Mirrors the text vertically.\n     *\n     * Deals with re-assigning the vertical justification, as mirroring\n     * top aligned text is the same as changing it to bottom aligned.\n     */\n    mirror_vertically(center: Vec2) {\n        this.normalize_justification(false);\n        let y = this.text_pos.y;\n\n        y -= center.y;\n        y *= -1;\n        y += center.y;\n\n        if (this.text_angle.is_horizontal) {\n            this.v_align = swap_values(this.v_align, \"top\", \"bottom\");\n        } else {\n            this.h_align = swap_values(this.h_align, \"left\", \"right\");\n        }\n\n        this.text_pos.y = y;\n        this.normalize_justification(true);\n    }\n}\n\n/**\n * Helper method for swapping justification values around.\n */\nfunction swap_values<T>(v: T, a: T, b: T): T {\n    if (v == a) {\n        return b;\n    } else if (v == b) {\n        return a;\n    }\n    return v;\n}\n", "/*\n    Copyright (c) 2023 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nimport { Angle, BBox, Matrix3, Vec2 } from \"../../base/math\";\nimport { EDAText } from \"./eda-text\";\n\ntype Parent = {\n    position: Vec2;\n    transform: Matrix3;\n    is_symbol: boolean;\n};\n\n/**\n * Represents a symbol (or sheet) \"field\", such as the reference, value, or\n * other properties shown along with the symbol.\n *\n * This corresponds to and is roughly based on KiCAD's SCH_FIELD class.\n */\nexport class SchField extends EDAText {\n    constructor(\n        text: string,\n        public parent?: Parent,\n    ) {\n        super(text);\n    }\n\n    override get shown_text() {\n        if (this.text == \"~\") {\n            return \"\";\n        }\n        return this.text;\n    }\n\n    /** Get effective rotation when drawing, taking into the parent position\n     * orientation, and transformation.\n     */\n    get draw_rotation() {\n        let this_deg = this.text_angle.degrees;\n        const parent_transform = this.parent?.transform ?? Matrix3.identity();\n\n        // Note: this checks the parent's rotation based on its transform.\n        // KiCAD represents transforms with a simple 2x2 matrix which\n        // can be made from a Matrix3 using:\n        // kicad_matrix = [\n        //      m.elements[0], m.elements[1], m.elements[3], m.elements[4]];\n        // KiCAD sets the transform of a symbol instance in\n        // SCH_SEXPR_PARSER::parseSchematicSymbol() to one of four values\n        // depending on the orientation:\n        //\n        // - 0 degs:   [ 1,  0,  0, -1] - note that y is bottom to top.\n        // - 90 degs:  [ 0, -1, -1,  0]\n        // - 180 degs: [-1,  0,  0,  1]\n        // - 270 degs: [ 0,  1,  1,  0]\n        //\n        // This means that this code can check if the parent is rotated 90\n        // or 270 degres by checking if transform[1] is 1 or -1. transform[1]\n        // is the same as matrix[1], so we check that.\n\n        if (Math.abs(parent_transform.elements[1]!) == 1) {\n            if (this_deg == 0 || this_deg == 180) {\n                this_deg = 90;\n            } else {\n                this_deg = 0;\n            }\n        }\n\n        return Angle.from_degrees(this_deg);\n    }\n\n    get position(): Vec2 {\n        if (this.parent) {\n            let relative_pos = this.text_pos.sub(this.parent.position);\n            relative_pos = this.parent.transform.transform(relative_pos);\n            return relative_pos.add(this.parent.position);\n        }\n        return this.text_pos;\n    }\n\n    get bounding_box(): BBox {\n        const bbox = this.get_text_box();\n\n        if (!this.parent?.is_symbol) {\n            return bbox;\n        }\n\n        // adjust bounding box according to parent location\n        const origin = this.parent?.position ?? new Vec2(0, 0);\n        const pos = this.text_pos.sub(origin);\n        let begin = bbox.start.sub(origin);\n        let end = bbox.end.sub(origin);\n\n        begin = this.text_angle.rotate_point(begin, pos);\n        end = this.text_angle.rotate_point(end, pos);\n\n        // adjust bounding box based on symbol tranform\n\n        // Symbols have the y axis direction flipped, so the bounding\n        // box must also be flipped.\n        begin.y = mirror(begin.y, pos.y);\n        end.y = mirror(end.y, pos.y);\n\n        // Note: Real identity matrix (without flipped y) is actually needed\n        // here.\n        const transform = this.parent?.transform ?? Matrix3.identity();\n\n        bbox.start = transform.transform(begin);\n        bbox.end = transform.transform(end);\n        bbox.start = bbox.start.add(origin);\n\n        return bbox;\n    }\n}\n\nfunction mirror(v: number, ref = 0): number {\n    return -(v - ref) + ref;\n}\n", "/*\n    Copyright (c) 2023 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nimport { Angle } from \"../../base/math\";\nimport { At } from \"../common\";\nimport { EDAText } from \"./eda-text\";\n\n/**\n * Represents text objects that belong to the schematic, not to any individual\n * symbol. These are created via the \"Text\" tool in Eeschema.\n *\n * This class is also used by the LabelPainter and PinPainter, specifically\n * for apply set_spin_style_from_angle. It might be possible to remove this\n * class altogether in favor of just have that method somewhere.\n */\nexport class SchText extends EDAText {\n    constructor(text: string) {\n        super(text);\n    }\n\n    override apply_at(at: At): void {\n        super.apply_at(at);\n        this.set_spin_style_from_angle(this.text_angle);\n    }\n\n    set_spin_style_from_angle(a: Angle) {\n        switch (a.degrees) {\n            default:\n            case 0:\n                // right\n                this.text_angle.degrees = 0;\n                this.h_align = \"left\";\n                break;\n            case 90:\n                // up\n                this.text_angle.degrees = 90;\n                this.h_align = \"left\";\n                break;\n            case 180:\n                //left\n                this.text_angle.degrees = 0;\n                this.h_align = \"right\";\n                break;\n            case 270:\n                // down\n                this.text_angle.degrees = 90;\n                this.h_align = \"right\";\n                break;\n        }\n\n        this.v_align = \"bottom\";\n    }\n\n    override get shown_text() {\n        return this.text;\n    }\n}\n", "/*\n    Copyright (c) 2023 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nimport { iterable_as_array } from \"../../base/array\";\nimport type { IDisposable } from \"../../base/disposable\";\nimport { BBox, Vec2 } from \"../../base/math\";\nimport { Color, RenderLayer } from \"../../graphics\";\n\n/**\n * Common view layer names across all viewers.\n */\nexport enum ViewLayerNames {\n    overlay = \":Overlay\",\n    drawing_sheet = \":DrawingSheet\",\n    grid = \":Grid\",\n}\n\n/**\n * View layers\n *\n * KiCanvas's structure uses view layers to gather schematic or board items.\n * These view layers are used render parts of each item in the correct order\n * (back to front) as well as provide bounding box queries.\n *\n * For the board viewer, some layers correspond to physical board layers\n * (like F.Cu, F.SilkS, & so on) but many are \"virtual\". The schematic viewer\n * uses layers as well but largely to get the correct rendering order.\n */\n\nexport type VisibilityType = boolean | (() => boolean);\n\n/**\n * A view layer\n */\nexport class ViewLayer implements IDisposable {\n    layer_set: ViewLayerSet;\n    name: string;\n    highlighted = false;\n    #visible: VisibilityType;\n\n    /**\n     * The layer color can be used by Painters as a default or fallback color\n     * for items.\n     */\n    color: Color;\n\n    /**\n     * The layer opacity is used when rendering the layer.\n     */\n    opacity: number;\n\n    /**\n     * Board or schematic items on this layer.\n     */\n    items: any[];\n\n    /**\n     * This stores all of the graphics created by painters for items on this layer.\n     * */\n    graphics?: RenderLayer;\n\n    /**\n     * True is this layer contains interactive items that are findable via\n     * ViewLayerSet.query_point\n     */\n    interactive: boolean = false;\n\n    /** A map of board items to bounding boxes\n     * A board item can have graphics on multiple layers, the bounding box provided\n     * here is only valid for this layer.\n     */\n    bboxes: Map<any, BBox> = new Map();\n\n    /**\n     * Create a new Layer.\n     * @param  ayer_set - the LayerSet that this Layer belongs to\n     * @param name - this layer's name\n     * @param visible - controls whether the layer is visible when rendering, may be a function returning a boolean.\n     */\n    constructor(\n        layer_set: ViewLayerSet,\n        name: string,\n        visible: VisibilityType = true,\n        interactive = false,\n        color: Color = Color.white,\n    ) {\n        this.#visible = visible;\n        this.layer_set = layer_set;\n        this.name = name;\n        this.color = color;\n        this.interactive = interactive;\n        this.items = [];\n    }\n\n    dispose() {\n        this.clear();\n    }\n\n    clear() {\n        this.graphics?.dispose();\n        this.graphics = undefined;\n        this.items = [];\n        this.bboxes.clear();\n    }\n\n    get visible(): boolean {\n        if (this.#visible instanceof Function) {\n            return this.#visible();\n        } else {\n            return this.#visible;\n        }\n    }\n\n    set visible(v: VisibilityType) {\n        this.#visible = v;\n    }\n\n    /** The overall bounding box of all items on this layer */\n    get bbox() {\n        return BBox.combine(this.bboxes.values());\n    }\n\n    /** @yields a list of BBoxes that contain the given point */\n    *query_point(p: Vec2) {\n        for (const bb of this.bboxes.values()) {\n            if (bb.contains_point(p)) {\n                yield bb;\n            }\n        }\n    }\n}\n\n/**\n * Represents the complete set of view layers.\n */\nexport class ViewLayerSet implements IDisposable {\n    #layer_list: ViewLayer[] = [];\n    #layer_map: Map<string, ViewLayer> = new Map();\n    #overlay: ViewLayer;\n\n    /**\n     * Create a new LayerSet\n     */\n    constructor() {\n        this.#overlay = new ViewLayer(\n            this,\n            ViewLayerNames.overlay,\n            true,\n            false,\n            Color.white,\n        );\n    }\n\n    /**\n     * Dispose of any resources held by layers\n     */\n    dispose() {\n        this.#overlay.dispose();\n        for (const layer of this.#layer_list) {\n            layer.dispose();\n        }\n        this.#layer_list.length = 0;\n        this.#layer_map.clear();\n    }\n\n    /**\n     * Adds layers to the set. Layers should be added front to back.\n     */\n    add(...layers: ViewLayer[]) {\n        for (const layer of layers) {\n            this.#layer_list.push(layer);\n            this.#layer_map.set(layer.name, layer);\n        }\n    }\n\n    /**\n     * @yields layers in the order they were added (front to back), does not\n     * include the overlay layer.\n     */\n    *in_order() {\n        for (const layer of this.#layer_list) {\n            yield layer;\n        }\n    }\n\n    /**\n     * @yields layers in the order they should be drawn (back to front),\n     * including the overlay layer.\n     */\n    *in_display_order() {\n        for (let i = this.#layer_list.length - 1; i >= 0; i--) {\n            const layer = this.#layer_list[i]!;\n\n            if (!layer.highlighted) {\n                yield layer;\n            }\n        }\n\n        // Go back through the layers and yield the highlighted ones. These\n        // are drawn after regular layers.\n        for (let i = this.#layer_list.length - 1; i >= 0; i--) {\n            const layer = this.#layer_list[i]!;\n\n            if (layer.highlighted) {\n                yield layer;\n            }\n        }\n\n        yield this.#overlay;\n    }\n\n    /**\n     * Gets a Layer by name\n     */\n    by_name(name: string): ViewLayer | undefined {\n        return this.#layer_map.get(name);\n    }\n\n    /**\n     * Returns all layers that \"match\" the given pattern.\n     */\n    *query(predicate: (l: ViewLayer) => boolean) {\n        for (const l of this.#layer_list) {\n            if (predicate(l)) {\n                yield l;\n            }\n        }\n    }\n\n    /**\n     * Gets the special overlay layer, which is always visible and always\n     * drawn above all others.\n     */\n    get overlay() {\n        return this.#overlay;\n    }\n\n    /**\n     * Highlights the given layer(s), by default they're drawn above other layers.\n     */\n    highlight(\n        layer_or_layers:\n            | string\n            | ViewLayer\n            | null\n            | Iterable<string | ViewLayer>,\n    ) {\n        let layer_names: string[] = [];\n        if (layer_or_layers) {\n            layer_names = iterable_as_array(layer_or_layers).map((v) =>\n                v instanceof ViewLayer ? v.name : v,\n            );\n        }\n\n        for (const l of this.#layer_list) {\n            if (layer_names.includes(l.name)) {\n                l.highlighted = true;\n            } else {\n                l.highlighted = false;\n            }\n        }\n    }\n\n    is_any_layer_highlighted() {\n        for (const l of this.#layer_list) {\n            if (l.highlighted) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    *grid_layers() {\n        yield this.by_name(ViewLayerNames.grid)!;\n    }\n\n    /**\n     * @yields a list of interactive layers\n     */\n    *interactive_layers() {\n        for (const layer of this.in_order()) {\n            if (layer.interactive && layer.visible) {\n                yield layer;\n            }\n        }\n    }\n\n    /**\n     * @yields layers and bounding boxes that contain the given point.\n     */\n    *query_point(p: Vec2) {\n        for (const layer of this.interactive_layers()) {\n            for (const bbox of layer.query_point(p)) {\n                yield { layer, bbox };\n            }\n        }\n    }\n\n    /**\n     * @yields bboxes on interactive layers for the given item.\n     */\n    *query_item_bboxes(item: any) {\n        for (const layer of this.interactive_layers()) {\n            const bbox = layer.bboxes.get(item);\n            if (bbox) {\n                yield bbox;\n            }\n        }\n    }\n\n    /**\n     * @return a bounding box encompassing all elements from all layers.\n     */\n    get bbox() {\n        const bboxes: BBox[] = [];\n        for (const layer of this.in_order()) {\n            bboxes.push(layer.bbox);\n        }\n\n        return BBox.combine(bboxes);\n    }\n}\n", "/*\n    Copyright (c) 2023 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nimport { Logger } from \"../../base/log\";\nimport { Renderer } from \"../../graphics\";\nimport type { BaseTheme } from \"../../kicad\";\nimport { ViewLayer, ViewLayerSet } from \"./view-layers\";\n\nconst log = new Logger(\"kicanvas:project\");\n\n/**\n * Base class for all painters responsible for drawing a view items.\n */\nexport abstract class ItemPainter {\n  /**\n   * List of item classes this painter can draw\n   */\n  abstract classes: unknown[];\n\n  constructor(\n    protected view_painter: DocumentPainter,\n    protected gfx: Renderer,\n  ) { }\n\n  abstract layers_for(item: unknown): string[];\n\n  abstract paint(layer: ViewLayer, item: unknown, ...rest: any[]): void;\n\n  public get theme(): BaseTheme {\n    return this.view_painter.theme;\n  }\n}\n\nexport interface PaintableDocument {\n  items(): Generator<unknown, void, void>;\n}\n\n/**\n * Base class for painting a complete document, for example, an entire schematic or board.\n */\nexport class DocumentPainter {\n  #painters: Map<unknown, ItemPainter> = new Map();\n\n  /**\n   * Create a ViewPainter.\n   */\n  constructor(\n    public gfx: Renderer,\n    public layers: ViewLayerSet,\n    public theme: BaseTheme,\n  ) { }\n\n  protected set painter_list(painters: ItemPainter[]) {\n    for (const painter of painters) {\n      for (const type of painter.classes) {\n        this.#painters.set(type, painter);\n      }\n    }\n  }\n\n  get painters(): Map<unknown, ItemPainter> {\n    return this.#painters;\n  }\n\n  paint(document: PaintableDocument) {\n    log.debug(\"Painting\");\n\n    log.debug(\"Sorting paintable items into layers\");\n\n    for (const item of document.items()) {\n      const painter = this.painter_for(item);\n\n      if (!painter) {\n        log.warn(`No painter found for ${item?.constructor.name}`);\n        continue;\n      }\n\n      for (const layer_name of painter.layers_for(item)) {\n        this.layers.by_name(layer_name)?.items.push(item);\n      }\n    }\n\n    for (const layer of this.paintable_layers()) {\n      log.debug(\n        `Painting layer ${layer.name} with ${layer.items.length} items`,\n      );\n      this.paint_layer(layer);\n    }\n\n    log.debug(\"Painting complete\");\n  }\n\n  *paintable_layers() {\n    yield* this.layers.in_display_order();\n  }\n\n  paint_layer(layer: ViewLayer) {\n    const bboxes = new Map();\n\n    this.gfx.start_layer(layer.name);\n\n    for (const item of layer.items) {\n      this.gfx.start_bbox();\n\n      this.paint_item(layer, item);\n\n      const bbox = this.gfx.end_bbox(item);\n      bboxes.set(item, bbox);\n    }\n\n    layer.graphics = this.gfx.end_layer();\n    layer.bboxes = bboxes;\n  }\n\n  paint_item(layer: ViewLayer, item: unknown, ...rest: any[]) {\n    const painter = this.painter_for(item);\n    painter?.paint(layer, item, ...rest);\n  }\n\n  painter_for(item: any): ItemPainter | undefined {\n    return this.painters.get(item.constructor);\n  }\n\n  layers_for(item: any): string[] {\n    return this.painters.get(item.constructor)?.layers_for(item) || [];\n  }\n}\n", "/*\n    Copyright (c) 2023 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\n/**\n * Painters for drawing sheet items.\n *\n * Each item class has a corresponding Painter implementation.\n */\n\nimport { Angle, BBox, Vec2 } from \"../../base/math\";\nimport { Polyline, Renderer } from \"../../graphics\";\nimport type { BaseTheme } from \"../../kicad\";\nimport * as drawing_sheet from \"../../kicad/drawing-sheet\";\nimport { EDAText, StrokeFont } from \"../../kicad/text\";\nimport { DocumentPainter, ItemPainter } from \"../base/painter\";\nimport { ViewLayer, ViewLayerNames, ViewLayerSet } from \"../base/view-layers\";\n\nfunction offset_point(\n    sheet: drawing_sheet.DrawingSheet,\n    point: Vec2,\n    anchor: drawing_sheet.Coordinate[\"anchor\"],\n    constrain = true,\n) {\n    const tl = sheet.top_left;\n    const tr = sheet.top_right;\n    const bl = sheet.bottom_left;\n    const br = sheet.bottom_right;\n    const bbox = sheet.margin_bbox;\n\n    switch (anchor) {\n        case \"ltcorner\":\n            point = tl.add(point);\n            break;\n        case \"rbcorner\":\n            point = br.sub(point);\n            break;\n        case \"lbcorner\":\n            point = bl.add(new Vec2(point.x, -point.y));\n            break;\n        case \"rtcorner\":\n            point = tr.add(new Vec2(-point.x, point.y));\n            break;\n    }\n\n    if (constrain && !bbox.contains_point(point)) {\n        return;\n    }\n\n    return point;\n}\n\nclass LinePainter extends ItemPainter {\n    classes = [drawing_sheet.Line];\n\n    override layers_for(item: unknown): string[] {\n        return [ViewLayerNames.drawing_sheet];\n    }\n\n    paint(layer: ViewLayer, l: drawing_sheet.Line) {\n        const sheet = l.parent;\n        const [incrx, incry] = [l.incrx ?? 0, l.incry ?? 0];\n\n        for (let i = 0; i < l.repeat; i++) {\n            const offset = new Vec2(incrx * i, incry * i);\n            const [start, end] = [\n                offset_point(\n                    sheet,\n                    l.start.position.add(offset),\n                    l.start.anchor,\n                ),\n                offset_point(sheet, l.end.position.add(offset), l.start.anchor),\n            ];\n\n            if (!start || !end) {\n                return;\n            }\n\n            this.gfx.line(\n                new Polyline(\n                    [start, end],\n                    l.linewidth || sheet.setup.linewidth,\n                    layer.color,\n                ),\n            );\n        }\n    }\n}\n\nclass RectPainter extends ItemPainter {\n    classes = [drawing_sheet.Rect];\n\n    override layers_for(item: unknown): string[] {\n        return [ViewLayerNames.drawing_sheet];\n    }\n\n    paint(layer: ViewLayer, r: drawing_sheet.Rect) {\n        const sheet = r.parent;\n        const [incrx, incry] = [r.incrx ?? 0, r.incry ?? 0];\n\n        for (let i = 0; i < r.repeat; i++) {\n            const offset = new Vec2(incrx * i, incry * i);\n            const [start, end] = [\n                offset_point(\n                    sheet,\n                    r.start.position.add(offset),\n                    r.start.anchor,\n                    i > 0,\n                ),\n                offset_point(\n                    sheet,\n                    r.end.position.add(offset),\n                    r.end.anchor,\n                    i > 0,\n                ),\n            ];\n\n            if (!start || !end) {\n                return;\n            }\n\n            const bbox = BBox.from_points([start, end]);\n\n            this.gfx.line(\n                Polyline.from_BBox(\n                    bbox,\n                    r.linewidth || sheet.setup.linewidth,\n                    layer.color,\n                ),\n            );\n        }\n    }\n}\n\nclass TbTextPainter extends ItemPainter {\n    classes = [drawing_sheet.TbText];\n\n    override layers_for(item: unknown): string[] {\n        return [ViewLayerNames.drawing_sheet];\n    }\n\n    paint(layer: ViewLayer, t: drawing_sheet.TbText) {\n        const edatext = new EDAText(t.shown_text);\n\n        edatext.h_align = \"left\";\n        edatext.v_align = \"center\";\n        edatext.text_angle = Angle.from_degrees(t.rotate);\n\n        switch (t.justify) {\n            case \"center\":\n                edatext.h_align = \"center\";\n                edatext.v_align = \"center\";\n                break;\n            case \"left\":\n                edatext.h_align = \"left\";\n                break;\n            case \"right\":\n                edatext.h_align = \"right\";\n                break;\n            case \"top\":\n                edatext.v_align = \"top\";\n                break;\n            case \"bottom\":\n                edatext.v_align = \"bottom\";\n                break;\n        }\n\n        edatext.attributes.bold = t.font?.bold ?? false;\n        edatext.attributes.italic = t.font?.italic ?? false;\n        edatext.attributes.color = layer.color;\n        edatext.attributes.size = (\n            t.font?.size ?? t.parent.setup.textsize\n        ).multiply(10000);\n        edatext.attributes.stroke_width =\n            (t.font?.linewidth ?? t.parent.setup.textlinewidth) * 10000;\n\n        const [incrx, incry] = [t.incrx ?? 0, t.incry ?? 0];\n\n        for (let i = 0; i < t.repeat; i++) {\n            const offset = new Vec2(incrx * i, incry * i);\n            const pos = offset_point(\n                t.parent,\n                t.pos.position.add(offset),\n                t.pos.anchor,\n            );\n\n            if (!pos) {\n                return;\n            }\n\n            if (t.incrlabel && t.text.length == 1) {\n                const incr = t.incrlabel * i;\n                const chrcode = t.text.charCodeAt(0);\n\n                if (\n                    chrcode >= \"0\".charCodeAt(0) &&\n                    chrcode <= \"9\".charCodeAt(0)\n                ) {\n                    edatext.text = `${incr + chrcode - \"0\".charCodeAt(0)}`;\n                } else {\n                    edatext.text = String.fromCharCode(chrcode + incr);\n                }\n            }\n\n            edatext.text_pos = pos?.multiply(10000);\n\n            this.gfx.state.push();\n            StrokeFont.default().draw(\n                this.gfx,\n                edatext.shown_text,\n                edatext.text_pos,\n                edatext.attributes,\n            );\n            this.gfx.state.pop();\n        }\n    }\n}\n\nexport class DrawingSheetPainter extends DocumentPainter {\n    constructor(gfx: Renderer, layers: ViewLayerSet, theme: BaseTheme) {\n        super(gfx, layers, theme);\n        this.painter_list = [\n            new LinePainter(this, gfx),\n            new RectPainter(this, gfx),\n            new TbTextPainter(this, gfx),\n        ];\n    }\n\n    override *paintable_layers(): Generator<ViewLayer, void, unknown> {\n        yield this.layers.by_name(ViewLayerNames.drawing_sheet)!;\n    }\n}\n", "/*\n    Copyright (c) 2023 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nimport { Angle, BBox, Camera2, Vec2 } from \"../../base/math\";\nimport { Color, Renderer } from \"../../graphics\";\nimport { ViewLayer } from \"./view-layers\";\n\n/**\n * Grid level of detail (LOD) definition.\n *\n * Used to draw the grid with higher spacing when zoomed out.\n */\nexport class GridLOD {\n    constructor(\n        public min_zoom: number,\n        public spacing: number,\n        public radius: number,\n    ) {}\n}\n\n/**\n * Grid drawing helper\n *\n * The grid is one of few things in KiCanvas that's dynamic- it needs to change\n * depending on the camera's viewport. Since it needs to update when the user\n * is actively moving the camera care has to be taken to avoid performance\n * issues due to the amount of geometry that needs to be generated.\n *\n * This grid helper avoid regenerating grid geometry unless necessary. It keeps\n * track of the last camera bbox it generated geometry for and doesn't\n * regenerate unless the new bbox is outside of that area. It also uses GridLOD\n * to generate less geometry when zoomed out.\n */\nexport class Grid {\n    #last_grid_bbox: BBox = new BBox(0, 0, 0, 0);\n    #last_grid_lod?: GridLOD;\n\n    constructor(\n        public gfx: Renderer,\n        public camera: Camera2,\n        public layer: ViewLayer,\n        public origin = new Vec2(0, 0),\n        public color = Color.white,\n        public origin_color = Color.white,\n        public lods = [new GridLOD(2.5, 10, 0.2), new GridLOD(15, 1, 0.05)],\n    ) {}\n\n    reset() {\n        this.#last_grid_lod = undefined;\n        this.#last_grid_bbox.w = 0;\n        this.#last_grid_bbox.h = 0;\n        this.layer.clear();\n    }\n\n    update() {\n        let lod;\n        for (const l of this.lods) {\n            if (this.camera.zoom >= l.min_zoom) {\n                lod = l;\n            }\n        }\n\n        // If the camera is too far zoomed out, don't bother drawing the grid.\n        if (!lod) {\n            this.reset();\n            return;\n        }\n\n        let bbox = this.camera.bbox;\n\n        // If the last generated grid already covers the camera's viewport,\n        // don't bother regenerating.\n        if (this.#last_grid_lod == lod && this.#last_grid_bbox.contains(bbox)) {\n            return;\n        }\n\n        // grow the bbox 20% to improve performance of panning.\n        bbox = bbox.grow(bbox.w * 0.2);\n\n        this.#last_grid_lod = lod;\n        this.#last_grid_bbox = bbox;\n\n        let grid_start_x = Math.round((bbox.x - this.origin.x) / lod.spacing);\n        let grid_end_x = Math.round((bbox.x2 - this.origin.x) / lod.spacing);\n        let grid_start_y = Math.round((bbox.y - this.origin.y) / lod.spacing);\n        let grid_end_y = Math.round((bbox.y2 - this.origin.y) / lod.spacing);\n\n        if (grid_start_x > grid_end_x) {\n            [grid_start_x, grid_end_x] = [grid_end_x, grid_start_x];\n        }\n        if (grid_start_y > grid_end_y) {\n            [grid_start_y, grid_end_y] = [grid_end_y, grid_start_y];\n        }\n\n        grid_end_x += 1;\n        grid_end_y += 1;\n\n        this.gfx.start_layer(this.layer.name);\n\n        // Grid dots\n        for (let grid_x = grid_start_x; grid_x <= grid_end_x; grid_x += 1) {\n            for (let grid_y = grid_start_y; grid_y <= grid_end_y; grid_y += 1) {\n                const pos = new Vec2(\n                    grid_x * lod.spacing + this.origin.x,\n                    grid_y * lod.spacing + this.origin.y,\n                );\n                this.gfx.circle(pos, lod.radius, this.color);\n            }\n        }\n\n        // Origin circle and cross\n        if (this.origin.x != 0 && this.origin.y != 0) {\n            this.gfx.arc(\n                this.origin,\n                1,\n                new Angle(0),\n                new Angle(2 * Math.PI),\n                lod.radius / 2,\n                this.origin_color,\n            );\n\n            let origin_offset = new Vec2(1.5, 1.5);\n            this.gfx.line(\n                [\n                    this.origin.sub(origin_offset),\n                    this.origin.add(origin_offset),\n                ],\n                lod.radius / 2,\n                this.origin_color,\n            );\n            origin_offset = new Vec2(-1.5, 1.5);\n            this.gfx.line(\n                [\n                    this.origin.sub(origin_offset),\n                    this.origin.add(origin_offset),\n                ],\n                lod.radius / 2,\n                this.origin_color,\n            );\n        }\n\n        this.layer.graphics = this.gfx.end_layer();\n    }\n}\n", "/*\n    Copyright (c) 2022 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nimport { BBox, Camera2, Vec2 } from \"../math\";\nimport { Preferences } from \"../../kicanvas/preferences\";\n\nconst line_delta_multiplier = 8;\nconst page_delta_multiplier = 24;\nconst zoom_speed = 0.005;\nconst pan_speed = 1;\n\nexport type PanAndZoomCallback = () => void;\nconst prefs = Preferences.INSTANCE;\n\nexport declare interface PanAndZoomOptions {\n  initialZoom: number;\n  initialX: number;\n  initialY: number;\n}\n\n/**\n * Interactive Pan and Zoom helper\n */\nexport class PanAndZoom {\n  #rect: DOMRect;\n\n  isPanning: boolean = false;\n  lastMouseX: number = 0;\n  lastMouseY: number = 0;\n\n  setOptions(options: PanAndZoomOptions) {\n    this.camera.center.set(new Vec2(options.initialX, options.initialY));\n    this.camera.zoom = options.initialZoom;\n\n    if (this.callback) {\n      this.callback();\n    }\n  }\n\n  /**\n   * Create an interactive pan and zoom helper\n   * @param {HTMLElement} target - the element to attach to and listen for mouse events\n   * @param {Camera2} camera - the camera that will be updated when panning and zooming\n   * @param {*} callback - optional callback when pan and zoom happens\n   * @param {number} min_zoom\n   * @param {number} max_zoom\n   */\n  constructor(\n    public readonly target: HTMLElement,\n    public camera: Camera2,\n    public callback: PanAndZoomCallback,\n    public min_zoom = 0.5,\n    public max_zoom = 10,\n    public bounds?: BBox,\n  ) {\n    this.target.addEventListener(\n      \"wheel\",\n      (e: WheelEvent) => this.#on_wheel(e),\n      { passive: false },\n    );\n\n    let startDistance: number | null = null;\n    let startPosition: TouchList | null = null;\n\n    this.target.addEventListener(\"touchstart\", (e: TouchEvent) => {\n      if (e.touches.length === 2) {\n        startDistance = this.#getDistanceBetweenTouches(e.touches);\n      } else if (e.touches.length === 1) {\n        startPosition = e.touches;\n      }\n    });\n\n    this.target.addEventListener(\"touchmove\", (e: TouchEvent) => {\n      if (e.touches.length === 2) {\n        if (startDistance !== null) {\n          const currentDistance = this.#getDistanceBetweenTouches(\n            e.touches,\n          );\n          if (Math.abs(startDistance - currentDistance) < 10) {\n            const scale = (currentDistance / startDistance) * 4;\n            if (startDistance < currentDistance) {\n              this.#handle_zoom(scale * -1);\n            } else {\n              this.#handle_zoom(scale);\n            }\n          }\n          startDistance = currentDistance;\n        }\n      } else if (e.touches.length === 1 && startPosition !== null) {\n        const sx = startPosition[0]?.clientX ?? 0;\n        const sy = startPosition[0]?.clientY ?? 0;\n        const ex = e.touches[0]?.clientX ?? 0;\n        const ey = e.touches[0]?.clientY ?? 0;\n        if (Math.abs(sx - ex) < 100 && Math.abs(sy - ey) < 100) {\n          this.#handle_pan(sx - ex, sy - ey);\n        }\n        startPosition = e.touches;\n      }\n    });\n\n    this.target.addEventListener(\"touchend\", () => {\n      startDistance = null;\n      startPosition = null;\n    });\n\n    let dragStartPosition: Vec2 | null = null;\n    let dragging = false;\n\n    this.target.addEventListener(\"mousedown\", (e: MouseEvent) => {\n      if (e.button === 1 || e.button === 2) {\n        e.preventDefault();\n        dragging = true;\n        dragStartPosition = new Vec2(e.clientX, e.clientY);\n      } else {\n        this.isPanning = true;\n      }\n\n      this.lastMouseX = e.clientX;\n      this.lastMouseY = e.clientY;\n\n      if (e.shiftKey) {\n        const message = `initialZoom=\"${this.camera.zoom}\" initialX=\"${this.camera.center.x}\" initialY=\"${this.camera.center.y}\"`;\n        console.log(message);\n        navigator.clipboard.writeText(message).catch((error) => console.error(error));\n      }\n    });\n\n    this.target.addEventListener(\"mousemove\", (e: MouseEvent) => {\n      if (dragging && dragStartPosition !== null) {\n        const currentPosition = new Vec2(e.clientX, e.clientY);\n        const delta = currentPosition.sub(dragStartPosition);\n        this.#handle_pan(-delta.x, -delta.y);\n        dragStartPosition = currentPosition;\n      } else if (this.isPanning) {\n        const dx = e.clientX - this.lastMouseX;\n        const dy = e.clientY - this.lastMouseY;\n\n        this.#handle_pan(dx, dy);\n        this.lastMouseX = e.clientX;\n        this.lastMouseY = e.clientY;\n      }\n    });\n\n    this.target.addEventListener(\"mouseup\", (e: MouseEvent) => {\n      if (e.button === 1 || e.button === 2) {\n        dragging = false;\n        dragStartPosition = null;\n      }\n\n      this.isPanning = false;\n    });\n\n    // Prevent the browser's default context menu.\n    this.target.addEventListener(\"contextmenu\", (e) => {\n      e.preventDefault();\n    });\n  }\n\n  #getDistanceBetweenTouches(touches: TouchList) {\n    if (touches[0] && touches[1]) {\n      const dx = touches[0].clientX - touches[1].clientX;\n      const dy = touches[0].clientY - touches[1].clientY;\n      return Math.sqrt(dx * dx + dy * dy);\n    }\n    return 0;\n  }\n\n  #on_wheel(e: WheelEvent) {\n    e.preventDefault();\n\n    let dx = -e.deltaX;\n    let dy = -e.deltaY;\n\n    // shift modifier flips the X and Y axes (horizontal scroll)\n    if (!prefs.alignControlsWithKiCad) {\n      if (dx == 0 && e.shiftKey) {\n        [dx, dy] = [dy, dx];\n      }\n    } else {\n      if (dx == 0 && e.ctrlKey) {\n        [dx, dy] = [dy, dx];\n      }\n    }\n\n    // work around line/page scrolling\n    if (e.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n      dx *= line_delta_multiplier;\n      dy *= line_delta_multiplier;\n    } else if (e.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      dx *= page_delta_multiplier;\n      dy *= page_delta_multiplier;\n    }\n\n    // work around browsers setting a huge scroll distance\n    dx = Math.sign(dx) * Math.min(page_delta_multiplier, Math.abs(dx));\n    dy = Math.sign(dy) * Math.min(page_delta_multiplier, Math.abs(dy));\n\n    if (!prefs.alignControlsWithKiCad) {\n      // pinch zoom\n      if (e.ctrlKey || e.metaKey) {\n        this.#rect = this.target.getBoundingClientRect();\n        this.#handle_zoom(dy, this.#relative_mouse_pos(e));\n      }\n      // pan\n      else {\n        this.#handle_pan(dx, dy);\n      }\n    } else {\n      if (e.shiftKey || e.ctrlKey) {\n        this.#handle_pan(-dx, dy);\n      }\n      // pinch zoom\n      else {\n        this.#rect = this.target.getBoundingClientRect();\n        this.#handle_zoom(dy, this.#relative_mouse_pos(e));\n      }\n    }\n\n    this.target.dispatchEvent(\n      new MouseEvent(\"panzoom\", {\n        clientX: e.clientX,\n        clientY: e.clientY,\n      }),\n    );\n  }\n\n  #relative_mouse_pos(e: MouseEvent) {\n    return new Vec2(\n      e.clientX - this.#rect.left,\n      e.clientY - this.#rect.top,\n    );\n  }\n\n  #handle_pan(dx: number, dy: number) {\n    const delta = new Vec2(dx * pan_speed, dy * pan_speed).multiply(\n      1 / this.camera.zoom,\n    );\n\n    let center = this.camera.center.sub(delta);\n\n    if (this.bounds) {\n      center = this.bounds.constrain_point(center);\n    }\n\n    this.camera.center.set(center);\n\n    if (this.callback) {\n      this.callback();\n    }\n  }\n\n  #handle_zoom(delta: number, mouse?: Vec2) {\n    this.camera.zoom *= Math.exp(delta * -zoom_speed);\n    this.camera.zoom = Math.min(\n      this.max_zoom,\n      Math.max(this.camera.zoom, this.min_zoom),\n    );\n\n    if (mouse != null) {\n      const mouse_world = this.camera.screen_to_world(mouse);\n      const new_world = this.camera.screen_to_world(mouse);\n      const center_delta = mouse_world.sub(new_world);\n\n      this.camera.translate(center_delta);\n    }\n\n    if (this.callback) {\n      this.callback();\n    }\n  }\n}\n", "/*\n    Copyright (c) 2022 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nimport type { IDisposable } from \"../disposable\";\n\ntype ResizeObserverCallback = (target: HTMLElement) => void;\n\n/**\n * Wrapper over ResizeObserver that implmenets IDisposable\n */\nexport class SizeObserver implements IDisposable {\n    #observer: ResizeObserver;\n\n    constructor(\n        public target: HTMLElement,\n        private callback: ResizeObserverCallback,\n    ) {\n        this.#observer = new ResizeObserver(() => {\n            this.callback(this.target);\n        });\n        this.#observer.observe(target);\n    }\n\n    dispose() {\n        this.#observer?.disconnect();\n        this.#observer = undefined!;\n    }\n}\n", "/*\n    Copyright (c) 2022 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nimport { Barrier } from \"../../base/async\";\nimport { PanAndZoom, type PanAndZoomOptions } from \"../../base/dom/pan-and-zoom\";\nimport { SizeObserver } from \"../../base/dom/size-observer\";\nimport { Angle, BBox, Camera2, Matrix3, Vec2 } from \"../../base/math\";\nimport { Renderer } from \"../../graphics\";\n\n/**\n * Viewport combines a canvas, a renderer, and a camera to represent a view\n * into a scene.\n */\nexport class Viewport {\n  #observer: SizeObserver;\n  #pan_and_zoom: PanAndZoom;\n\n  width: number;\n  height: number;\n  camera: Camera2;\n  ready = new Barrier();\n\n  /**\n   * Create a Scene\n   * @param callback - a callback used to re-draw the viewport when it changes.\n   */\n  constructor(\n    public renderer: Renderer,\n    public callback: () => void,\n  ) {\n    this.camera = new Camera2(\n      new Vec2(0, 0),\n      new Vec2(0, 0),\n      1,\n      new Angle(0),\n    );\n\n    this.#observer = new SizeObserver(this.renderer.canvas, () => {\n      this.#update_camera();\n      this.callback();\n    });\n\n    this.#update_camera();\n  }\n\n  dispose() {\n    this.#observer.dispose();\n  }\n\n  /**\n   * Update the camera with the new canvas size.\n   */\n  #update_camera() {\n    const canvas = this.renderer.canvas;\n\n    if (\n      canvas.clientWidth > 0 &&\n      canvas.clientHeight > 0 &&\n      (this.width != canvas.clientWidth ||\n        this.height != canvas.clientHeight)\n    ) {\n      this.width = canvas.clientWidth;\n      this.height = canvas.clientHeight;\n      this.camera.viewport_size = new Vec2(this.width, this.height);\n\n      if (this.width && this.height) {\n        this.ready.open();\n      }\n    }\n  }\n\n  enable_pan_and_zoom(min_zoom?: number, max_zoom?: number) {\n    this.#pan_and_zoom = new PanAndZoom(\n      this.renderer.canvas,\n      this.camera,\n      () => {\n        this.callback();\n      },\n      min_zoom,\n      max_zoom,\n    );\n  }\n\n  setOptions(options: PanAndZoomOptions) {\n    this.#pan_and_zoom.setOptions(options);\n  }\n\n  /**\n   * The matrix representing this viewport. This can be passed into rendering\n   * methods to display things at the right spot.\n   */\n  get view_matrix(): Matrix3 {\n    return this.camera.matrix;\n  }\n\n  /**\n   * Limit the camera's center within the given bounds.\n   */\n  set bounds(bb: BBox) {\n    if (this.#pan_and_zoom) {\n      this.#pan_and_zoom.bounds = bb;\n    }\n  }\n}\n", "/*\n    Copyright (c) 2022 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nimport { Barrier, later } from \"../../base/async\";\nimport { Disposables, type IDisposable } from \"../../base/disposable\";\nimport type { PanAndZoomOptions } from \"../../base/dom/pan-and-zoom\";\nimport { listen } from \"../../base/events\";\nimport { no_self_recursion } from \"../../base/functions\";\nimport { BBox, Vec2 } from \"../../base/math\";\nimport { Color, Renderer } from \"../../graphics\";\nimport {\n  KiCanvasLoadEvent,\n  KiCanvasMouseMoveEvent,\n  type KiCanvasEventMap,\n} from \"./events\";\nimport { ViewLayerSet } from \"./view-layers\";\nimport { Viewport } from \"./viewport\";\n\nlet setupMutex: Promise<void> | null = null\n\nexport abstract class Viewer extends EventTarget {\n  public renderer: Renderer;\n  public viewport: Viewport;\n  public layers: ViewLayerSet;\n  public mouse_position: Vec2 = new Vec2(0, 0);\n  public loaded = new Barrier();\n\n  protected disposables = new Disposables();\n  protected setup_finished = new Barrier();\n\n  #selected: BBox | null;\n\n  constructor(\n    public canvas: HTMLCanvasElement,\n    protected interactive = true,\n  ) {\n    super();\n  }\n\n  dispose() {\n    this.disposables.dispose();\n  }\n\n  override addEventListener<K extends keyof KiCanvasEventMap>(\n    type: K,\n    listener:\n      | ((this: Viewer, ev: KiCanvasEventMap[K]) => void)\n      | { handleEvent: (ev: KiCanvasEventMap[K]) => void }\n      | null,\n    options?: boolean | AddEventListenerOptions,\n  ): IDisposable;\n  override addEventListener(\n    type: string,\n    listener: EventListener | null,\n    options?: boolean | AddEventListenerOptions,\n  ): IDisposable {\n    super.addEventListener(type, listener, options);\n    return {\n      dispose: () => {\n        this.removeEventListener(type, listener, options);\n      },\n    };\n  }\n\n  protected abstract create_renderer(canvas: HTMLCanvasElement): Renderer;\n\n  async setOptions(options: PanAndZoomOptions) {\n    this.viewport.setOptions(options);\n  }\n\n  async setup(options: PanAndZoomOptions) {\n    if (setupMutex === null) {\n      setupMutex = new Promise((resolve) => {\n        this.renderer = this.disposables.add(this.create_renderer(this.canvas));\n\n        this.renderer.setup().then(() => {\n\n          this.viewport = this.disposables.add(\n            new Viewport(this.renderer, () => {\n              this.on_viewport_change();\n            }),\n          );\n\n          if (this.interactive) {\n            this.viewport.enable_pan_and_zoom(0.5, 190);\n\n            this.disposables.add(\n              listen(this.canvas, \"mousemove\", (e) => {\n                this.on_mouse_change(e);\n              }),\n            );\n\n            this.disposables.add(\n              listen(this.canvas, \"panzoom\", (e) => {\n                this.on_mouse_change(e as MouseEvent);\n              }),\n            );\n\n            this.disposables.add(\n              listen(this.canvas, \"click\", (e) => {\n                const items = this.layers.query_point(this.mouse_position);\n                this.on_pick(this.mouse_position, items);\n              }),\n            );\n          }\n\n          this.setup_finished.open();\n          resolve();\n        });\n      });\n\n      await setupMutex;\n      setupMutex = null;\n    } else {\n      setTimeout(() => {\n        this.setup(options);\n      }, 0);\n    }\n\n  }\n\n  protected on_viewport_change() {\n    if (this.interactive) {\n      this.draw();\n    }\n  }\n\n  protected on_mouse_change(e: MouseEvent) {\n    const rect = this.canvas.getBoundingClientRect();\n    const new_position = this.viewport.camera.screen_to_world(\n      new Vec2(e.clientX - rect.left, e.clientY - rect.top),\n    );\n\n    if (\n      this.mouse_position.x != new_position.x ||\n      this.mouse_position.y != new_position.y\n    ) {\n      this.mouse_position.set(new_position);\n      this.dispatchEvent(new KiCanvasMouseMoveEvent(this.mouse_position));\n    }\n  }\n\n  public abstract load(src: any): Promise<void>;\n\n  protected resolve_loaded(value: boolean) {\n    if (value) {\n      this.loaded.open();\n      this.dispatchEvent(new KiCanvasLoadEvent());\n    }\n  }\n\n  public abstract paint(): void;\n\n  protected on_draw() {\n    this.renderer.clear_canvas();\n\n    if (!this.layers) {\n      return;\n    }\n\n    // Render all layers in display order (back to front)\n    let depth = 0.01;\n    const camera = this.viewport.camera.matrix;\n    const should_dim = this.layers.is_any_layer_highlighted();\n\n    for (const layer of this.layers.in_display_order()) {\n      if (layer.visible && layer.graphics) {\n        let alpha = layer.opacity;\n\n        if (should_dim && !layer.highlighted) {\n          alpha = 0.25;\n        }\n\n        layer.graphics.render(camera, depth, alpha);\n        depth += 0.01;\n      }\n    }\n  }\n\n  public draw() {\n    if (!this.viewport) {\n      return;\n    }\n\n    window.requestAnimationFrame(() => {\n      this.on_draw();\n    });\n  }\n\n  protected on_pick(\n    mouse: Vec2,\n    items: ReturnType<ViewLayerSet[\"query_point\"]>,\n  ) {\n    let selected = null;\n\n    for (const { bbox } of items) {\n      selected = bbox;\n      break;\n    }\n\n    this.select(selected);\n  }\n\n  public select(item: BBox | null) {\n    // Disabling for now.\n    // this.selected = item;\n  }\n\n  public get selected(): BBox | null {\n    return this.#selected;\n  }\n\n  public set selected(bb: BBox | null) {\n    this._set_selected(bb);\n  }\n\n  @no_self_recursion\n  private _set_selected(bb: BBox | null) {\n    // const previous = this.#selected;\n    this.#selected = bb?.copy() || null;\n\n    // Notify event listeners\n    // this.dispatchEvent(\n    //   new KiCanvasSelectEvent({\n    //     item: this.#selected?.context,\n    //     previous: previous?.context,\n    //   }),\n    // );\n\n    later(() => this.paint_selected());\n  }\n\n  public get selection_color() {\n    return Color.white;\n  }\n\n  protected paint_selected() {\n    // const layer = this.layers.overlay;\n\n    // layer.clear();\n\n    // if (this.#selected) {\n    //   const bb = this.#selected.copy().grow(this.#selected.w * 0.1);\n    //   this.renderer.start_layer(layer.name);\n\n    //   this.renderer.line(\n    //     Polyline.from_BBox(bb, 0.254, this.selection_color),\n    //   );\n\n    //   this.renderer.polygon(Polygon.from_BBox(bb, this.selection_color));\n\n    //   layer.graphics = this.renderer.end_layer();\n\n    //   layer.graphics.composite_operation = \"overlay\";\n    // }\n\n    this.draw();\n  }\n\n  abstract zoom_to_page(): void;\n\n  zoom_to_selection() {\n    if (!this.selected) {\n      return;\n    }\n    this.viewport.camera.bbox = this.selected.grow(10);\n    this.draw();\n  }\n}\n", "/*\n    Copyright (c) 2022 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nimport { BBox, Vec2 } from \"../../base/math\";\nimport { Logger } from \"../../base/log\";\nimport {\n  DrawingSheet,\n  type DrawingSheetDocument,\n  type BaseTheme,\n} from \"../../kicad\";\nimport { DrawingSheetPainter } from \"../drawing-sheet/painter\";\nimport { Grid } from \"./grid\";\nimport type { DocumentPainter, PaintableDocument } from \"./painter\";\nimport { ViewLayerNames, type ViewLayerSet } from \"./view-layers\";\nimport { Viewer } from \"./viewer\";\nimport { later } from \"../../base/async\";\n\nconst log = new Logger(\"kicanvas:viewer\");\n\ntype ViewableDocument = DrawingSheetDocument &\n  PaintableDocument & { filename: string };\n\nexport abstract class DocumentViewer<\n  DocumentT extends ViewableDocument,\n  PainterT extends DocumentPainter,\n  ViewLayerSetT extends ViewLayerSet,\n  ThemeT extends BaseTheme,\n> extends Viewer {\n  public document: DocumentT;\n  public drawing_sheet: DrawingSheet;\n  public declare layers: ViewLayerSetT;\n  public theme: ThemeT;\n\n  protected painter: PainterT;\n  protected grid: Grid;\n\n  constructor(\n    canvas: HTMLCanvasElement,\n    interactive: boolean,\n    theme: ThemeT,\n  ) {\n    super(canvas, interactive);\n    this.theme = theme;\n  }\n\n  protected abstract create_painter(): PainterT;\n  protected abstract create_layer_set(): ViewLayerSetT;\n  protected get grid_origin(): Vec2 {\n    return new Vec2(0, 0);\n  }\n\n  override async load(src: DocumentT) {\n    await this.setup_finished;\n\n    if (this.document == src) {\n      return;\n    }\n\n    log.info(`Loading ${src.filename} into viewer`);\n\n    this.document = src;\n    this.paint();\n\n    // Wait for a valid viewport size\n    later(async () => {\n      log.info(\"Waiting for viewport\");\n      await this.viewport.ready;\n      this.viewport.bounds = this.drawing_sheet.page_bbox.grow(50);\n\n      // Position the camera and draw the scene.\n      log.info(\"Positioning camera\");\n      this.zoom_to_page();\n\n      // Mark the viewer as loaded and notify event listeners\n      this.resolve_loaded(true);\n\n      // Deselect any selected items.\n      if (this.selected) {\n        this.selected = null;\n      }\n\n      // Draw\n      this.draw();\n    });\n  }\n\n  public override paint() {\n    if (!this.document) {\n      return;\n    }\n\n    // Update the renderer's background color to match the theme.\n    this.renderer.background_color = this.theme.background;\n\n    // Load the default drawing sheet.\n    log.info(\"Loading drawing sheet\");\n    if (!this.drawing_sheet) {\n      this.drawing_sheet = DrawingSheet.default();\n    }\n    this.drawing_sheet.document = this.document;\n\n    // Setup graphical layers\n    log.info(\"Creating layers\");\n    this.disposables.disposeAndRemove(this.layers);\n    this.layers = this.disposables.add(this.create_layer_set());\n\n    // Paint the board\n    log.info(\"Painting items\");\n    this.painter = this.create_painter();\n    this.painter.paint(this.document);\n\n    // Paint the drawing sheet\n    log.info(\"Painting drawing sheet\");\n    new DrawingSheetPainter(this.renderer, this.layers, this.theme).paint(\n      this.drawing_sheet,\n    );\n\n    // Create the grid\n    log.info(\"Painting grid\");\n    this.grid = new Grid(\n      this.renderer,\n      this.viewport.camera,\n      this.layers.by_name(ViewLayerNames.grid)!,\n      this.grid_origin,\n      this.theme.grid,\n      this.theme.grid_axes,\n    );\n  }\n\n  public override zoom_to_page() {\n    this.viewport.camera.bbox = this.drawing_sheet.page_bbox.grow(10);\n    this.draw();\n  }\n\n  public override draw(): void {\n    if (!this.viewport) {\n      return;\n    }\n\n    this.grid?.update();\n\n    super.draw();\n  }\n\n  public override select(item: BBox | null): void {\n    // If value wasn't explicitly null and no item was found, give up.\n    if (item != null && !(item instanceof BBox)) {\n      throw new Error(\n        `Unable to select item ${item}, could not find an object that matched.`,\n      );\n    }\n\n    this.selected = item ?? null;\n  }\n}\n", "/*\n    Copyright (c) 2023 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nimport { Color } from \"../../base/color\";\nimport { is_string } from \"../../base/types\";\nimport { KicadPCB, type BoardTheme } from \"../../kicad\";\nimport {\n  ViewLayerNames as BaseLayerNames,\n  ViewLayerSet as BaseLayerSet,\n  ViewLayer,\n  type VisibilityType,\n} from \"../base/view-layers\";\nexport { ViewLayer };\n\n/** Board view layer names\n *\n * There are view layers that correspond to respective board layers, but\n * there are also several graphical layers that are \"virtual\", such as layers\n * for drill holes and such.\n */\nexport enum LayerNames {\n  dwgs_user = \"Dwgs.User\",\n  cmts_user = \"Cmts.User\",\n  eco1_user = \"Eco1.User\",\n  eco2_user = \"Eco2.User\",\n  edge_cuts = \"Edge.Cuts\",\n  margin = \"Margin\",\n  user_1 = \"User.1\",\n  user_2 = \"User.2\",\n  user_3 = \"User.3\",\n  user_4 = \"User.4\",\n  user_5 = \"User.5\",\n  user_6 = \"User.6\",\n  user_7 = \"User.7\",\n  user_8 = \"User.8\",\n  user_9 = \"User.9\",\n  anchors = \":Anchors\",\n  non_plated_holes = \":NonPlatedHoles\",\n  via_holes = \":Via:Holes\",\n  pad_holes = \":Pad:Holes\",\n  pad_holewalls = \":Pad:HoleWalls\",\n  via_holewalls = \":Via:HoleWalls\",\n  pads_front = \":Pads:Front\",\n  f_cu = \"F.Cu\",\n  f_mask = \"F.Mask\",\n  f_silks = \"F.SilkS\",\n  f_adhes = \"F.Adhes\",\n  f_paste = \"F.Paste\",\n  f_crtyd = \"F.CrtYd\",\n  f_fab = \"F.Fab\",\n  in1_cu = \"In1.Cu\",\n  in2_cu = \"In2.Cu\",\n  in3_cu = \"In3.Cu\",\n  in4_cu = \"In4.Cu\",\n  in5_cu = \"In5.Cu\",\n  in6_cu = \"In6.Cu\",\n  in7_cu = \"In7.Cu\",\n  in8_cu = \"In8.Cu\",\n  in9_cu = \"In9.Cu\",\n  in10_cu = \"In10.Cu\",\n  in11_cu = \"In11.Cu\",\n  in12_cu = \"In12.Cu\",\n  in13_cu = \"In13.Cu\",\n  in14_cu = \"In14.Cu\",\n  in15_cu = \"In15.Cu\",\n  in16_cu = \"In16.Cu\",\n  in17_cu = \"In17.Cu\",\n  in18_cu = \"In18.Cu\",\n  in19_cu = \"In19.Cu\",\n  in20_cu = \"In20.Cu\",\n  in21_cu = \"In21.Cu\",\n  in22_cu = \"In22.Cu\",\n  in23_cu = \"In23.Cu\",\n  in24_cu = \"In24.Cu\",\n  in25_cu = \"In25.Cu\",\n  in26_cu = \"In26.Cu\",\n  in27_cu = \"In27.Cu\",\n  in28_cu = \"In28.Cu\",\n  in29_cu = \"In29.Cu\",\n  in30_cu = \"In30.Cu\",\n  pads_back = \":Pads:Back\",\n  b_cu = \"B.Cu\",\n  b_mask = \"B.Mask\",\n  b_silks = \"B.SilkS\",\n  b_adhes = \"B.Adhes\",\n  b_paste = \"B.Paste\",\n  b_crtyd = \"B.CrtYd\",\n  b_fab = \"B.Fab\",\n  drawing_sheet = BaseLayerNames.drawing_sheet,\n  grid = BaseLayerNames.grid,\n}\n\nexport const HoleLayerNames = [\n  LayerNames.non_plated_holes,\n  LayerNames.via_holes,\n  LayerNames.pad_holes,\n  LayerNames.pad_holewalls,\n  LayerNames.via_holewalls,\n];\n\nexport const CopperLayerNames = [\n  LayerNames.f_cu,\n  LayerNames.in1_cu,\n  LayerNames.in2_cu,\n  LayerNames.in3_cu,\n  LayerNames.in4_cu,\n  LayerNames.in5_cu,\n  LayerNames.in6_cu,\n  LayerNames.in7_cu,\n  LayerNames.in8_cu,\n  LayerNames.in9_cu,\n  LayerNames.in10_cu,\n  LayerNames.in11_cu,\n  LayerNames.in12_cu,\n  LayerNames.in13_cu,\n  LayerNames.in14_cu,\n  LayerNames.in15_cu,\n  LayerNames.in16_cu,\n  LayerNames.in17_cu,\n  LayerNames.in18_cu,\n  LayerNames.in19_cu,\n  LayerNames.in20_cu,\n  LayerNames.in21_cu,\n  LayerNames.in22_cu,\n  LayerNames.in23_cu,\n  LayerNames.in24_cu,\n  LayerNames.in25_cu,\n  LayerNames.in26_cu,\n  LayerNames.in27_cu,\n  LayerNames.in28_cu,\n  LayerNames.in29_cu,\n  LayerNames.in30_cu,\n  LayerNames.b_cu,\n];\n\nexport enum CopperVirtualLayerNames {\n  bb_via_holes = \"BBViaHoles\",\n  bb_via_hole_walls = \"BBViaHoleWalls\",\n  zones = \"Zones\",\n}\n\nexport function virtual_layer_for(\n  physical_layer: string,\n  virtual_name: CopperVirtualLayerNames,\n) {\n  return `:${physical_layer}:${virtual_name}`;\n}\n\nfunction is_virtual(name: string) {\n  return name.startsWith(\":\");\n}\n\nfunction is_virtual_for(physical_layer: string, layer_name: string) {\n  return (\n    is_virtual(layer_name) && layer_name.startsWith(`:${physical_layer}:`)\n  );\n}\n\nfunction is_copper(name: string) {\n  return name.endsWith(\".Cu\");\n}\n\nexport function* copper_layers_between(\n  start_layer_name: string,\n  end_layer_name: string,\n) {\n  let found_start = false;\n  for (const layer_name of CopperLayerNames) {\n    if (layer_name == start_layer_name) {\n      found_start = true;\n    }\n    if (found_start) {\n      yield layer_name;\n    }\n    if (layer_name == end_layer_name) {\n      return;\n    }\n  }\n}\n\n/**\n * Board view layer set\n */\nexport class LayerSet extends BaseLayerSet {\n  /**\n   * Create a new LayerSet\n   */\n  constructor(\n    board: KicadPCB,\n    public theme: BoardTheme,\n    defaultLayers?: LayerNames[],\n  ) {\n    super();\n\n    const board_layers = new Map();\n\n    for (const l of board.layers) {\n      board_layers.set(l.canonical_name, l);\n    }\n\n    for (const layer_name of Object.values(LayerNames)) {\n      // Skip physical layers that aren't present on the board.\n      if (!is_virtual(layer_name) && !board_layers.has(layer_name)) {\n        continue;\n      }\n\n      let visible: VisibilityType = true;\n      let interactive = false;\n\n      // These virtual layers require at least one visible copper layer to be shown.\n      if (HoleLayerNames.includes(layer_name)) {\n        visible = () => this.is_any_copper_layer_visible();\n        interactive = true;\n      }\n\n      // Pad layers require that the front or back layer is visible.\n      if (layer_name == LayerNames.pads_front) {\n        visible = () => this.by_name(LayerNames.f_cu)!.visible;\n        interactive = true;\n      }\n      if (layer_name == LayerNames.pads_back) {\n        visible = () => this.by_name(LayerNames.b_cu)!.visible;\n        interactive = true;\n      }\n\n      // Copper layers require additional virual layers for zones and\n      // blind/buried vias. Those are generated here.\n      // Zone virtual layers for copper layers require that the referenced\n      // copper layer is visible.\n      if (is_copper(layer_name)) {\n        interactive = true;\n\n        this.add(\n          new ViewLayer(\n            this,\n            virtual_layer_for(\n              layer_name,\n              CopperVirtualLayerNames.bb_via_holes,\n            ),\n            () => this.by_name(layer_name)!.visible,\n            false,\n            this.color_for(LayerNames.via_holes),\n          ),\n        );\n        this.add(\n          new ViewLayer(\n            this,\n            virtual_layer_for(\n              layer_name,\n              CopperVirtualLayerNames.bb_via_hole_walls,\n            ),\n            () => this.by_name(layer_name)!.visible,\n            false,\n            this.color_for(LayerNames.via_holewalls),\n          ),\n        );\n        this.add(\n          new ViewLayer(\n            this,\n            virtual_layer_for(\n              layer_name,\n              CopperVirtualLayerNames.zones,\n            ),\n            () => this.by_name(layer_name)!.visible,\n            false,\n            this.color_for(layer_name),\n          ),\n        );\n      }\n\n      this.add(\n        new ViewLayer(\n          this,\n          layer_name,\n          visible,\n          interactive,\n          this.color_for(layer_name),\n        ),\n      );\n    }\n  }\n\n  /**\n   * Get the theme color for a given layer.\n   */\n  color_for(layer_name: string): Color {\n    switch (layer_name) {\n      case LayerNames.drawing_sheet:\n        return (this.theme[\"worksheet\"] as Color) ?? Color.white;\n      case LayerNames.pads_front:\n        return (\n          (this.theme[\"copper\"] as Record<string, Color>)?.[\"f\"] ??\n          Color.white\n        );\n      case LayerNames.pads_back:\n        return (\n          (this.theme[\"copper\"] as Record<string, Color>)?.[\"b\"] ??\n          Color.white\n        );\n      case LayerNames.non_plated_holes:\n        return (this.theme[\"non_plated_hole\"] as Color) ?? Color.white;\n      case LayerNames.via_holes:\n        return (this.theme[\"via_hole\"] as Color) ?? Color.white;\n      case LayerNames.via_holewalls:\n        return (this.theme[\"via_through\"] as Color) ?? Color.white;\n      case LayerNames.pad_holes:\n        return (this.theme[\"background\"] as Color) ?? Color.white;\n      case LayerNames.pad_holewalls:\n        return (this.theme[\"pad_through_hole\"] as Color) ?? Color.white;\n    }\n\n    let name = layer_name;\n\n    name = name.replace(\":Zones:\", \"\").replace(\".\", \"_\").toLowerCase();\n\n    if (name.endsWith(\"_cu\")) {\n      name = name.replace(\"_cu\", \"\");\n      const copper_theme = this.theme.copper;\n      return (\n        copper_theme[name as keyof typeof copper_theme] ?? Color.white\n      );\n    }\n\n    type KeyType = keyof Omit<BoardTheme, \"copper\">;\n\n    return this.theme[name as KeyType] ?? Color.white;\n  }\n\n  /**\n   * @yields layers that coorespond to board layers that should be\n   *      displayed in the layer selection UI\n   */\n  *in_ui_order() {\n    const order = [\n      ...CopperLayerNames,\n      LayerNames.f_adhes,\n      LayerNames.b_adhes,\n      LayerNames.f_paste,\n      LayerNames.b_paste,\n      LayerNames.f_silks,\n      LayerNames.b_silks,\n      LayerNames.f_mask,\n      LayerNames.b_mask,\n      LayerNames.dwgs_user,\n      LayerNames.cmts_user,\n      LayerNames.eco1_user,\n      LayerNames.eco2_user,\n      LayerNames.edge_cuts,\n      LayerNames.margin,\n      LayerNames.f_crtyd,\n      LayerNames.b_crtyd,\n      LayerNames.f_fab,\n      LayerNames.b_fab,\n      LayerNames.user_1,\n      LayerNames.user_2,\n      LayerNames.user_3,\n      LayerNames.user_4,\n      LayerNames.user_5,\n      LayerNames.user_6,\n      LayerNames.user_7,\n      LayerNames.user_8,\n      LayerNames.user_9,\n    ];\n\n    for (const name of order) {\n      const layer: ViewLayer = this.by_name(name as string)!;\n\n      if (layer) {\n        yield layer;\n      }\n    }\n  }\n\n  *copper_layers() {\n    for (const name of CopperLayerNames) {\n      const layer = this.by_name(name);\n      if (layer) {\n        yield layer;\n      }\n    }\n  }\n\n  *via_layers() {\n    yield this.by_name(LayerNames.via_holes)!;\n    yield this.by_name(LayerNames.via_holewalls)!;\n\n    for (const copper_name of CopperLayerNames) {\n      for (const virtual_name of [\n        CopperVirtualLayerNames.bb_via_hole_walls,\n        CopperVirtualLayerNames.bb_via_holes,\n      ]) {\n        const layer = this.by_name(\n          virtual_layer_for(copper_name, virtual_name),\n        );\n        if (layer) {\n          yield layer;\n        }\n      }\n    }\n  }\n\n  *zone_layers() {\n    for (const copper_name of CopperLayerNames) {\n      const zones_name = virtual_layer_for(\n        copper_name,\n        CopperVirtualLayerNames.zones,\n      );\n      const layer = this.by_name(zones_name);\n      if (layer) {\n        yield layer;\n      }\n    }\n  }\n\n  *pad_layers() {\n    yield this.by_name(LayerNames.pads_front)!;\n    yield this.by_name(LayerNames.pads_back)!;\n  }\n\n  *pad_hole_layers() {\n    yield this.by_name(LayerNames.pad_holes)!;\n    yield this.by_name(LayerNames.pad_holewalls)!;\n  }\n\n  /**\n   * @returns true if any copper layer is enabled and visible.\n   */\n  is_any_copper_layer_visible(): boolean {\n    for (const layer of this.copper_layers()) {\n      if (layer.visible) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Highlights the given layer.\n   *\n   * The board viewer has to make sure to also highlight associated virtual\n   * layers when a physical layer is highlighted\n   */\n  override highlight(layer: string | ViewLayer | null): void {\n    let layer_name = \"\";\n    if (layer instanceof ViewLayer) {\n      layer_name = layer.name;\n    } else if (is_string(layer)) {\n      layer_name = layer;\n    }\n\n    const matching_layers = this.query(\n      (l) => l.name == layer_name || is_virtual_for(layer_name, l.name),\n    );\n\n    super.highlight(matching_layers);\n  }\n}\n", "/*\n    Copyright (c) 2023 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\n/**\n * Painters for drawing board items.\n *\n * Each item class has a corresponding Painter implementation.\n */\n\nimport { Angle, Arc, Matrix3, Vec2 } from \"../../base/math\";\nimport * as log from \"../../base/log\";\nimport { Circle, Color, Polygon, Polyline, Renderer } from \"../../graphics\";\nimport * as board_items from \"../../kicad/board\";\nimport { EDAText, StrokeFont } from \"../../kicad/text\";\nimport { DocumentPainter, ItemPainter } from \"../base/painter\";\nimport { ViewLayerNames } from \"../base/view-layers\";\nimport {\n  CopperVirtualLayerNames,\n  CopperLayerNames,\n  LayerNames,\n  LayerSet,\n  ViewLayer,\n  copper_layers_between,\n  virtual_layer_for,\n} from \"./layers\";\nimport type { BoardTheme } from \"../../kicad\";\n\nabstract class BoardItemPainter extends ItemPainter {\n  override view_painter: BoardPainter;\n\n  override get theme(): BoardTheme {\n    return this.view_painter.theme;\n  }\n\n  /** Alias for BoardPainter.filter_net */\n  get filter_net(): number | null {\n    return (this.view_painter as BoardPainter).filter_net;\n  }\n\n  protected isFillValid(fill: string): boolean {\n    return Boolean(fill && fill !== \"none\" && fill !== \"no\");\n  }\n}\n\nclass LinePainter extends BoardItemPainter {\n  classes = [board_items.GrLine, board_items.FpLine];\n\n  layers_for(item: board_items.GrLine | board_items.FpLine) {\n    return [item.layer];\n  }\n\n  paint(layer: ViewLayer, s: board_items.GrLine | board_items.FpLine) {\n    if (this.filter_net) return;\n\n    const points = [s.start, s.end];\n    this.gfx.line(new Polyline(points, s.width, layer.color));\n  }\n}\n\nclass RectPainter extends BoardItemPainter {\n  classes = [board_items.GrRect, board_items.FpRect];\n\n  layers_for(item: board_items.GrRect | board_items.FpRect) {\n    return [item.layer];\n  }\n\n  paint(layer: ViewLayer, r: board_items.GrRect | board_items.FpRect) {\n    if (this.filter_net) return;\n\n    const color = layer.color;\n    const points = [\n      r.start,\n      new Vec2(r.start.x, r.end.y),\n      r.end,\n      new Vec2(r.end.x, r.start.y),\n      r.start,\n    ];\n\n    this.gfx.line(new Polyline(points, r.width, color));\n\n    if (this.isFillValid(r.fill)) {\n      this.gfx.polygon(new Polygon(points, color));\n    }\n  }\n}\n\nclass PolyPainter extends BoardItemPainter {\n  classes = [board_items.Poly, board_items.GrPoly, board_items.FpPoly];\n\n  layers_for(\n    item: board_items.Poly | board_items.GrPoly | board_items.FpPoly,\n  ) {\n    return [item.layer];\n  }\n\n  paint(\n    layer: ViewLayer,\n    p: board_items.Poly | board_items.GrPoly | board_items.FpPoly,\n  ) {\n    if (this.filter_net) return;\n\n    const color = layer.color;\n\n    if (p.width) {\n      this.gfx.line(new Polyline([...p.pts, p.pts[0]!], p.width, color));\n    }\n\n    if (this.isFillValid(p.fill)) {\n      this.gfx.polygon(new Polygon(p.pts, color));\n    }\n  }\n}\n\nclass ArcPainter extends BoardItemPainter {\n  classes = [board_items.GrArc, board_items.FpArc];\n\n  layers_for(item: board_items.GrArc | board_items.FpArc) {\n    return [item.layer];\n  }\n\n  paint(layer: ViewLayer, a: board_items.GrArc | board_items.FpArc) {\n    if (this.filter_net) return;\n\n    const arc = a.arc;\n    const points = arc.to_polyline();\n    this.gfx.line(new Polyline(points, arc.width, layer.color));\n  }\n}\n\nclass CirclePainter extends BoardItemPainter {\n  classes = [board_items.GrCircle, board_items.FpCircle];\n\n  layers_for(item: board_items.GrCircle | board_items.FpCircle) {\n    return [item.layer];\n  }\n\n  paint(layer: ViewLayer, c: board_items.GrCircle | board_items.FpCircle) {\n    if (this.filter_net) return;\n\n    const color = layer.color;\n\n    const radius = c.center.sub(c.end).magnitude;\n    const arc = new Arc(\n      c.center,\n      radius,\n      new Angle(0),\n      new Angle(2 * Math.PI),\n      c.width,\n    );\n\n    if (this.isFillValid(c.fill)) {\n      this.gfx.circle(\n        new Circle(arc.center, arc.radius + (c.width ?? 0), color),\n      );\n    } else {\n      const points = arc.to_polyline();\n      this.gfx.line(new Polyline(points, arc.width, color));\n    }\n  }\n}\n\nclass TraceSegmentPainter extends BoardItemPainter {\n  classes = [board_items.LineSegment];\n\n  layers_for(item: board_items.LineSegment) {\n    return [item.layer];\n  }\n\n  paint(layer: ViewLayer, s: board_items.LineSegment) {\n    if (this.filter_net && s.net != this.filter_net) {\n      return;\n    }\n\n    const points = [s.start, s.end];\n    this.gfx.line(new Polyline(points, s.width, layer.color));\n  }\n}\n\nclass TraceArcPainter extends BoardItemPainter {\n  classes = [board_items.ArcSegment];\n\n  layers_for(item: board_items.ArcSegment) {\n    return [item.layer];\n  }\n\n  paint(layer: ViewLayer, a: board_items.ArcSegment) {\n    if (this.filter_net && a.net != this.filter_net) {\n      return;\n    }\n\n    const arc = Arc.from_three_points(a.start, a.mid, a.end, a.width);\n    const points = arc.to_polyline();\n    this.gfx.line(new Polyline(points, arc.width, layer.color));\n  }\n}\n\nclass ViaPainter extends BoardItemPainter {\n  classes = [board_items.Via];\n\n  layers_for(v: board_items.Via): string[] {\n    if (v.layers) {\n      // blind/buried vias have two layers - the start and end layer,\n      // and should only be drawn on the layers they're actually on.\n      const layers = [];\n\n      for (const cu_layer of copper_layers_between(\n        v.layers[0]!,\n        v.layers[1]!,\n      )) {\n        layers.push(\n          virtual_layer_for(\n            cu_layer,\n            CopperVirtualLayerNames.bb_via_holes,\n          ),\n        );\n        layers.push(\n          virtual_layer_for(\n            cu_layer,\n            CopperVirtualLayerNames.bb_via_hole_walls,\n          ),\n        );\n      }\n      return layers;\n    } else {\n      return [LayerNames.via_holes, LayerNames.via_holewalls];\n    }\n  }\n\n  paint(layer: ViewLayer, v: board_items.Via) {\n    if (this.filter_net && v.net != this.filter_net) {\n      return;\n    }\n\n    const color = layer.color;\n    if (\n      layer.name.endsWith(\"HoleWalls\") ||\n      layer.name == ViewLayerNames.overlay\n    ) {\n      this.gfx.circle(new Circle(v.at.position, v.size / 2, color));\n    } else if (layer.name.endsWith(\"Holes\")) {\n      this.gfx.circle(new Circle(v.at.position, v.drill / 2, color));\n\n      // Draw start and end layer markers\n      if ((v.type == \"blind\" || v.type == \"micro\") && v.layers) {\n        this.gfx.arc(\n          v.at.position,\n          v.size / 2 - v.size / 8,\n          Angle.from_degrees(180 + 70),\n          Angle.from_degrees(360 - 70),\n          v.size / 4,\n          layer.layer_set.by_name(v.layers[0]!)?.color ??\n          Color.transparent_black,\n        );\n        this.gfx.arc(\n          v.at.position,\n          v.size / 2 - v.size / 8,\n          Angle.from_degrees(70),\n          Angle.from_degrees(180 - 70),\n          v.size / 4,\n          layer.layer_set.by_name(v.layers[1]!)?.color ??\n          Color.transparent_black,\n        );\n      }\n    }\n  }\n}\n\nclass ZonePainter extends BoardItemPainter {\n  classes = [board_items.Zone];\n\n  layers_for(z: board_items.Zone): string[] {\n    const layers = z.layers ?? [z.layer];\n\n    if (layers.length && layers[0] == \"F&B.Cu\") {\n      layers.shift();\n      layers.push(\"F.Cu\", \"B.Cu\");\n    }\n\n    return layers.map((l) => {\n      if (CopperLayerNames.includes(l as LayerNames)) {\n        return virtual_layer_for(l, CopperVirtualLayerNames.zones);\n      } else {\n        return l;\n      }\n    });\n  }\n\n  paint(layer: ViewLayer, z: board_items.Zone) {\n    if (!z.filled_polygons) {\n      return;\n    }\n\n    if (this.filter_net && z.net != this.filter_net) {\n      return;\n    }\n\n    for (const p of z.filled_polygons) {\n      if (\n        !layer.name.includes(p.layer) &&\n        layer.name != ViewLayerNames.overlay\n      ) {\n        continue;\n      }\n\n      this.gfx.polygon(new Polygon(p.pts, layer.color));\n    }\n  }\n}\n\nclass PadPainter extends BoardItemPainter {\n  classes = [board_items.Pad];\n\n  layers_for(pad: board_items.Pad): string[] {\n    // TODO: Port KiCAD's logic over.\n    const layers: string[] = [];\n\n    for (const layer of pad.layers) {\n      if (layer == \"*.Cu\") {\n        layers.push(LayerNames.pads_front);\n        layers.push(LayerNames.pads_back);\n      } else if (layer == \"F.Cu\") {\n        layers.push(LayerNames.pads_front);\n      } else if (layer == \"B.Cu\") {\n        layers.push(LayerNames.pads_back);\n      } else if (layer == \"*.Mask\") {\n        layers.push(LayerNames.f_mask);\n        layers.push(LayerNames.b_mask);\n      } else if (layer == \"*.Paste\") {\n        layers.push(LayerNames.f_paste);\n        layers.push(LayerNames.b_paste);\n      } else {\n        layers.push(layer);\n      }\n    }\n\n    switch (pad.type) {\n      case \"thru_hole\":\n        layers.push(LayerNames.pad_holewalls);\n        layers.push(LayerNames.pad_holes);\n        break;\n      case \"np_thru_hole\":\n        layers.push(LayerNames.non_plated_holes);\n        break;\n      case \"smd\":\n      case \"connect\":\n        break;\n      default:\n        log.warn(`Unhandled pad type \"${pad.type}\"`);\n        break;\n    }\n\n    return layers;\n  }\n\n  paint(layer: ViewLayer, pad: board_items.Pad) {\n    if (this.filter_net && pad.net?.number != this.filter_net) {\n      return;\n    }\n\n    const color = layer.color;\n\n    const position_mat = Matrix3.translation(\n      pad.at.position.x,\n      pad.at.position.y,\n    );\n    position_mat.rotate_self(-Angle.deg_to_rad(pad.parent.at.rotation));\n    position_mat.rotate_self(Angle.deg_to_rad(pad.at.rotation));\n\n    this.gfx.state.push();\n    this.gfx.state.multiply(position_mat);\n\n    const center = new Vec2(0, 0);\n\n    const is_hole_layer =\n      layer.name == LayerNames.pad_holes ||\n      layer.name == LayerNames.non_plated_holes;\n\n    if (is_hole_layer && pad.drill != null) {\n      if (!pad.drill.oval) {\n        const drill_pos = center.add(pad.drill.offset);\n        this.gfx.circle(\n          new Circle(drill_pos, pad.drill.diameter / 2, color),\n        );\n      } else {\n        const half_size = new Vec2(\n          pad.drill.diameter / 2,\n          (pad.drill.width ?? 0) / 2,\n        );\n\n        const half_width = Math.min(half_size.x, half_size.y);\n\n        const half_len = new Vec2(\n          half_size.x - half_width,\n          half_size.y - half_width,\n        );\n\n        const drill_pos = center.add(pad.drill.offset);\n        const drill_start = drill_pos.sub(half_len);\n        const drill_end = drill_pos.add(half_len);\n\n        this.gfx.line(\n          new Polyline(\n            [drill_start, drill_end],\n            half_width * 2,\n            color,\n          ),\n        );\n      }\n    } else {\n      let shape = pad.shape;\n      if (shape == \"custom\" && pad.options?.anchor) {\n        shape = pad.options.anchor;\n      }\n\n      if (pad.drill?.offset) {\n        this.gfx.state.matrix.translate_self(\n          pad.drill.offset.x,\n          pad.drill.offset.y,\n        );\n      }\n\n      switch (shape) {\n        case \"circle\":\n          this.gfx.circle(new Circle(center, pad.size.x / 2, color));\n          break;\n        case \"rect\":\n          {\n            const rect_points = [\n              new Vec2(-pad.size.x / 2, -pad.size.y / 2),\n              new Vec2(pad.size.x / 2, -pad.size.y / 2),\n              new Vec2(pad.size.x / 2, pad.size.y / 2),\n              new Vec2(-pad.size.x / 2, pad.size.y / 2),\n            ];\n            this.gfx.polygon(new Polygon(rect_points, color));\n          }\n          break;\n        case \"roundrect\":\n        case \"trapezoid\":\n          // KiCAD approximates rounded rectangle using four line segments\n          // with their width set to the round radius. Clever bastards.\n          // Since our polylines aren't filled, we'll add both a polygon\n          // and a polyline.\n          {\n            const rounding =\n              Math.min(pad.size.x, pad.size.y) *\n              (pad.roundrect_rratio ?? 0);\n            let half_size = new Vec2(\n              pad.size.x / 2,\n              pad.size.y / 2,\n            );\n            half_size = half_size.sub(new Vec2(rounding, rounding));\n\n            let trap_delta = pad.rect_delta\n              ? pad.rect_delta.copy()\n              : new Vec2(0, 0);\n            trap_delta = trap_delta.multiply(0.5);\n\n            const rect_points = [\n              new Vec2(\n                -half_size.x - trap_delta.y,\n                half_size.y + trap_delta.x,\n              ),\n              new Vec2(\n                half_size.x + trap_delta.y,\n                half_size.y - trap_delta.x,\n              ),\n              new Vec2(\n                half_size.x - trap_delta.y,\n                -half_size.y + trap_delta.x,\n              ),\n              new Vec2(\n                -half_size.x + trap_delta.y,\n                -half_size.y - trap_delta.x,\n              ),\n            ];\n\n            // this.gfx.push_transform(offset_mat);\n            this.gfx.polygon(new Polygon(rect_points, color));\n            this.gfx.line(\n              new Polyline(\n                [...rect_points, rect_points[0]!],\n                rounding * 2,\n                color,\n              ),\n            );\n            // this.gfx.pop_transform();\n          }\n          break;\n\n        case \"oval\":\n          {\n            const half_size = new Vec2(\n              pad.size.x / 2,\n              pad.size.y / 2,\n            );\n            const half_width = Math.min(half_size.x, half_size.y);\n            const half_len = new Vec2(\n              half_size.x - half_width,\n              half_size.y - half_width,\n            );\n\n            const pad_pos = center.add(\n              pad.drill?.offset || new Vec2(0, 0),\n            );\n            const pad_start = pad_pos.sub(half_len);\n            const pad_end = pad_pos.add(half_len);\n\n            if (pad_start.equals(pad_end)) {\n              this.gfx.circle(\n                new Circle(pad_pos, half_width, color),\n              );\n            } else {\n              this.gfx.line(\n                new Polyline(\n                  [pad_start, pad_end],\n                  half_width * 2,\n                  color,\n                ),\n              );\n            }\n          }\n          break;\n\n        default:\n          log.warn(`Unknown pad shape \"${pad.shape}\"`);\n          break;\n      }\n\n      if (pad.shape == \"custom\" && pad.primitives) {\n        for (const prim of pad.primitives) {\n          this.view_painter.paint_item(layer, prim);\n        }\n      }\n    }\n\n    this.gfx.state.pop();\n  }\n}\n\nclass GrTextPainter extends BoardItemPainter {\n  classes = [board_items.GrText];\n\n  layers_for(t: board_items.GrText) {\n    return [t.layer.name];\n  }\n\n  paint(layer: ViewLayer, t: board_items.GrText) {\n    if (this.filter_net) return;\n\n    if (t.hide || !t.shown_text) {\n      return;\n    }\n\n    if (t.render_cache) {\n      for (const poly of t.render_cache.polygons) {\n        this.view_painter.paint_item(layer, poly);\n      }\n      return;\n    }\n\n    const edatext = new EDAText(t.shown_text);\n\n    edatext.apply_effects(t.effects);\n    edatext.apply_at(t.at);\n\n    edatext.attributes.color = layer.color;\n\n    this.gfx.state.push();\n    StrokeFont.default().draw(\n      this.gfx,\n      edatext.shown_text,\n      edatext.text_pos,\n      edatext.attributes,\n    );\n    this.gfx.state.pop();\n  }\n}\n\nclass FpTextPainter extends BoardItemPainter {\n  classes = [board_items.FpText];\n\n  layers_for(t: board_items.FpText) {\n    if (t.hide) {\n      return [];\n    } else {\n      return [t.layer.name];\n    }\n  }\n\n  paint(layer: ViewLayer, t: board_items.FpText) {\n    if (this.filter_net) return;\n\n    if (t.hide || !t.shown_text) {\n      return;\n    }\n\n    if (t.render_cache) {\n      this.gfx.state.push();\n      this.gfx.state.matrix = Matrix3.identity();\n      for (const poly of t.render_cache.polygons) {\n        this.view_painter.paint_item(layer, poly);\n      }\n      this.gfx.state.pop();\n      return;\n    }\n\n    const edatext = new EDAText(t.shown_text);\n\n    edatext.apply_effects(t.effects);\n    edatext.apply_at(t.at);\n\n    edatext.attributes.keep_upright = !t.at.unlocked;\n    edatext.attributes.color = layer.color;\n\n    if (t.parent) {\n      const rot = Angle.from_degrees(t.parent.at.rotation);\n      let pos = edatext.text_pos;\n      pos = rot.rotate_point(pos, new Vec2(0, 0));\n      pos = pos.add(t.parent.at.position.multiply(10000));\n      edatext.text_pos.set(pos);\n    }\n\n    if (edatext.attributes.keep_upright) {\n      while (edatext.text_angle.degrees > 90) {\n        edatext.text_angle.degrees -= 180;\n      }\n      while (edatext.text_angle.degrees <= -90) {\n        edatext.text_angle.degrees += 180;\n      }\n    }\n\n    this.gfx.state.push();\n    this.gfx.state.matrix = Matrix3.identity();\n\n    StrokeFont.default().draw(\n      this.gfx,\n      edatext.shown_text,\n      edatext.text_pos,\n      edatext.attributes,\n    );\n    this.gfx.state.pop();\n  }\n}\n\nclass DimensionPainter extends BoardItemPainter {\n  classes = [board_items.Dimension];\n\n  layers_for(d: board_items.Dimension): string[] {\n    return [d.layer];\n  }\n\n  paint(layer: ViewLayer, d: board_items.Dimension) {\n    switch (d.type) {\n      case \"orthogonal\":\n      case \"aligned\":\n        this.paint_linear(layer, d);\n        break;\n      case \"center\":\n        this.paint_center(layer, d);\n        break;\n      case \"radial\":\n        this.paint_radial(layer, d);\n        break;\n      case \"leader\":\n        this.paint_leader(layer, d);\n        break;\n    }\n  }\n\n  paint_center(layer: ViewLayer, d: board_items.Dimension) {\n    const thickness = d.style.thickness ?? 0.2;\n\n    let arm = d.end.sub(d.start);\n    this.gfx.line(\n      [d.start.sub(arm), d.start.add(arm)],\n      thickness,\n      layer.color,\n    );\n\n    arm = Angle.from_degrees(90).rotate_point(arm);\n    this.gfx.line(\n      [d.start.sub(arm), d.start.add(arm)],\n      thickness,\n      layer.color,\n    );\n  }\n\n  paint_radial(layer: ViewLayer, d: board_items.Dimension) {\n    const thickness = d.style.thickness ?? 0.2;\n\n    const center = d.start.copy();\n    let center_arm = new Vec2(0, d.style.arrow_length);\n\n    // Cross shape\n    this.gfx.line(\n      [center.sub(center_arm), center.add(center_arm)],\n      thickness,\n      layer.color,\n    );\n\n    center_arm = Angle.from_degrees(90).rotate_point(center_arm);\n    this.gfx.line(\n      [center.sub(center_arm), center.add(center_arm)],\n      thickness,\n      layer.color,\n    );\n\n    // Line from center to text.\n    let radial = d.end.sub(d.start);\n    radial = radial.resize(d.leader_length);\n\n    const text = this.make_text(layer, d);\n    const text_bbox = text.get_text_box().scale(1 / 10000);\n\n    const line_segs = [d.end, d.end.add(radial), d.gr_text.at.position];\n\n    const textbox_pt = text_bbox.intersect_segment(\n      line_segs[1]!,\n      line_segs[2]!,\n    );\n\n    if (textbox_pt) {\n      line_segs[2] = textbox_pt;\n    }\n\n    this.gfx.line(line_segs, thickness, layer.color);\n\n    // Arrows\n    const arrow_angle = Angle.from_degrees(27.5);\n    const inv_radial_angle = radial.angle.negative();\n    const arrow_seg = new Vec2(d.style.arrow_length, 0);\n    const arrow_end_pos = inv_radial_angle\n      .add(arrow_angle)\n      .rotate_point(arrow_seg);\n    const arrow_end_neg = inv_radial_angle\n      .sub(arrow_angle)\n      .rotate_point(arrow_seg);\n\n    this.gfx.line(\n      [d.end.add(arrow_end_neg), d.end, d.end.add(arrow_end_pos)],\n      thickness,\n      layer.color,\n    );\n\n    // Text\n    this.paint_text(text);\n  }\n\n  paint_leader(layer: ViewLayer, d: board_items.Dimension) {\n    const thickness = d.style.thickness ?? 0.2;\n\n    // Line from center to text.\n    const text = this.make_text(layer, d);\n    const text_bbox = text\n      .get_text_box()\n      .grow(text.text_width / 2, text.get_effective_text_thickness() * 2)\n      .scale(1 / 10000);\n\n    const start = d.start.add(\n      d.end.sub(d.start).resize(d.style.extension_offset),\n    );\n    const line_segs = [start, d.end, d.gr_text.at.position];\n\n    const textbox_pt = text_bbox.intersect_segment(\n      line_segs[1]!,\n      line_segs[2]!,\n    );\n\n    if (textbox_pt) {\n      line_segs[2] = textbox_pt;\n    }\n\n    this.gfx.line(line_segs, thickness, layer.color);\n\n    // Outline\n    if (d.style.text_frame == 1) {\n      this.gfx.line(\n        Polyline.from_BBox(text_bbox, thickness, layer.color),\n      );\n    }\n    if (d.style.text_frame == 2) {\n      const radius =\n        text_bbox.w / 2 -\n        text.get_effective_text_thickness() / 10000 / 2;\n      this.gfx.arc(\n        text_bbox.center,\n        radius,\n        Angle.from_degrees(0),\n        Angle.from_degrees(360),\n        thickness,\n        layer.color,\n      );\n    }\n\n    // Arrows\n    const radial = d.end.sub(d.start);\n    const arrow_angle = Angle.from_degrees(27.5);\n    const inv_radial_angle = radial.angle.negative();\n    const arrow_seg = new Vec2(d.style.arrow_length, 0);\n    const arrow_end_pos = inv_radial_angle\n      .add(arrow_angle)\n      .rotate_point(arrow_seg);\n    const arrow_end_neg = inv_radial_angle\n      .sub(arrow_angle)\n      .rotate_point(arrow_seg);\n\n    this.gfx.line(\n      [start.add(arrow_end_neg), start, start.add(arrow_end_pos)],\n      thickness,\n      layer.color,\n    );\n\n    // Text\n    this.paint_text(text);\n  }\n\n  paint_linear(layer: ViewLayer, d: board_items.Dimension) {\n    const thickness = d.style.thickness ?? 0.2;\n\n    let extension = new Vec2();\n    let xbar_start = new Vec2();\n    let xbar_end = new Vec2();\n\n    // See PCB_DIM_ORTHOGONAL::updateGeometry\n    if (d.type == \"orthogonal\") {\n      if (d.orientation == 0) {\n        extension = new Vec2(0, d.height);\n        xbar_start = d.start.add(extension);\n        xbar_end = new Vec2(d.end.x, xbar_start.y);\n      } else {\n        extension = new Vec2(d.height, 0);\n        xbar_start = d.start.add(extension);\n        xbar_end = new Vec2(xbar_start.x, d.end.y);\n      }\n    }\n    // See PCB_DIM_ALIGNED::updateGeometry\n    else {\n      const dimension = d.end.sub(d.start);\n      if (d.height > 0) {\n        extension = new Vec2(-dimension.y, dimension.x);\n      } else {\n        extension = new Vec2(dimension.y, -dimension.x);\n      }\n\n      const xbar_distance = extension\n        .resize(d.height)\n        .multiply(Math.sign(d.height));\n\n      xbar_start = d.start.add(xbar_distance);\n      xbar_end = d.end.add(xbar_distance);\n    }\n\n    // Draw extensions\n    const extension_height =\n      Math.abs(d.height) -\n      d.style.extension_offset +\n      d.style.extension_height;\n\n    // First extension line\n    let ext_start = d.start.add(extension.resize(d.style.extension_offset));\n    let ext_end = ext_start.add(extension.resize(extension_height));\n    this.gfx.line([ext_start, ext_end], thickness, layer.color);\n\n    // Second extension line\n    ext_start = d.end.add(extension.resize(d.style.extension_offset));\n    ext_end = ext_start.add(extension.resize(extension_height));\n    this.gfx.line([ext_start, ext_end], thickness, layer.color);\n\n    // Draw crossbar\n    // TODO: KiCAD checks to see if the text overlaps the crossbar and\n    // conditionally splits or hides the crossbar.\n    this.gfx.line([xbar_start, xbar_end], thickness, layer.color);\n\n    // Arrows\n    const xbar_angle = xbar_end.sub(xbar_start).angle.negative();\n    const arrow_angle = Angle.from_degrees(27.5);\n    const arrow_end_pos = xbar_angle\n      .add(arrow_angle)\n      .rotate_point(new Vec2(d.style.arrow_length, 0));\n    const arrow_end_neg = xbar_angle\n      .sub(arrow_angle)\n      .rotate_point(new Vec2(d.style.arrow_length, 0));\n\n    this.gfx.line(\n      [\n        xbar_start.add(arrow_end_neg),\n        xbar_start,\n        xbar_start.add(arrow_end_pos),\n      ],\n      thickness,\n      layer.color,\n    );\n    this.gfx.line(\n      [\n        xbar_end.sub(arrow_end_neg),\n        xbar_end,\n        xbar_end.sub(arrow_end_pos),\n      ],\n      thickness,\n      layer.color,\n    );\n\n    // Text\n    this.paint_text(this.make_text(layer, d));\n  }\n\n  make_text(layer: ViewLayer, d: board_items.Dimension) {\n    const pcbtext = new EDAText(d.gr_text.shown_text);\n    pcbtext.apply_effects(d.gr_text.effects);\n    pcbtext.apply_at(d.gr_text.at);\n    pcbtext.attributes.color = layer.color;\n\n    return pcbtext;\n  }\n\n  paint_text(text: EDAText) {\n    this.gfx.state.push();\n    StrokeFont.default().draw(\n      this.gfx,\n      text.shown_text,\n      text.text_pos,\n      text.attributes,\n    );\n    this.gfx.state.pop();\n  }\n}\n\nclass FootprintPainter extends BoardItemPainter {\n  classes = [board_items.Footprint];\n\n  layers_for(fp: board_items.Footprint): string[] {\n    const layers = new Set();\n    for (const item of fp.items()) {\n      const item_layers = this.view_painter.layers_for(item);\n      for (const layer of item_layers) {\n        layers.add(layer);\n      }\n    }\n    return Array.from(layers.values()) as string[];\n  }\n\n  paint(layer: ViewLayer, fp: board_items.Footprint) {\n    const matrix = Matrix3.translation(\n      fp.at.position.x,\n      fp.at.position.y,\n    ).rotate_self(Angle.deg_to_rad(fp.at.rotation));\n\n    this.gfx.state.push();\n    this.gfx.state.multiply(matrix);\n\n    for (const item of fp.items()) {\n      const item_layers = this.view_painter.layers_for(item);\n      if (\n        layer.name == ViewLayerNames.overlay ||\n        item_layers.includes(layer.name)\n      ) {\n        this.view_painter.paint_item(layer, item);\n      }\n    }\n\n    this.gfx.state.pop();\n  }\n}\n\nexport class BoardPainter extends DocumentPainter {\n  override theme: BoardTheme;\n\n  constructor(gfx: Renderer, layers: LayerSet, theme: BoardTheme) {\n    super(gfx, layers, theme);\n    this.painter_list = [\n      new LinePainter(this, gfx),\n      new RectPainter(this, gfx),\n      new PolyPainter(this, gfx),\n      new ArcPainter(this, gfx),\n      new CirclePainter(this, gfx),\n      new TraceSegmentPainter(this, gfx),\n      new TraceArcPainter(this, gfx),\n      new ViaPainter(this, gfx),\n      new ZonePainter(this, gfx),\n      new PadPainter(this, gfx),\n      new FootprintPainter(this, gfx),\n      new GrTextPainter(this, gfx),\n      new FpTextPainter(this, gfx),\n      new DimensionPainter(this, gfx),\n      //new PropertyPainter(this, gfx),\n    ];\n  }\n\n  // Used to filter out items by net when highlighting nets. Painters\n  // should use this to determine whether to draw or skip the current item.\n  filter_net: number | null = null;\n\n  paint_net(board: board_items.KicadPCB, net: number) {\n    const layer = this.layers.overlay;\n\n    this.filter_net = net;\n\n    layer.clear();\n    layer.color = Color.white;\n    this.gfx.start_layer(layer.name);\n\n    for (const item of board.items()) {\n      const painter = this.painter_for(item);\n\n      if (!painter) {\n        continue;\n      }\n\n      this.paint_item(layer, item);\n    }\n\n    layer.graphics = this.gfx.end_layer();\n    layer.graphics.composite_operation = \"overlay\";\n    this.filter_net = null;\n  }\n}\n", "/*\n    Copyright (c) 2022 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nimport { BBox, Vec2 } from \"../../base/math\";\nimport { is_string } from \"../../base/types\";\nimport { Renderer } from \"../../graphics\";\nimport { WebGL2Renderer } from \"../../graphics/webgl\";\nimport type { BoardTheme } from \"../../kicad\";\nimport * as board_items from \"../../kicad/board\";\nimport { DocumentViewer } from \"../base/document-viewer\";\nimport { LayerNames, LayerSet, ViewLayer } from \"./layers\";\nimport { BoardPainter } from \"./painter\";\n\nexport class BoardViewer extends DocumentViewer<\n    board_items.KicadPCB,\n    BoardPainter,\n    LayerSet,\n    BoardTheme\n> {\n    get board(): board_items.KicadPCB {\n        return this.document;\n    }\n\n    protected override create_renderer(canvas: HTMLCanvasElement): Renderer {\n        const renderer = new WebGL2Renderer(canvas);\n        return renderer;\n    }\n\n    protected override create_painter() {\n        return new BoardPainter(this.renderer, this.layers, this.theme);\n    }\n\n    protected override create_layer_set() {\n        return new LayerSet(this.board, this.theme);\n    }\n\n    protected override get grid_origin() {\n        return this.board.setup?.grid_origin ?? new Vec2(0, 0);\n    }\n\n    protected override on_pick(\n        mouse: Vec2,\n        items: Generator<{ layer: ViewLayer; bbox: BBox }, void, unknown>,\n    ): void {\n        let selected = null;\n\n        for (const { layer: _, bbox } of items) {\n            if (bbox.context instanceof board_items.Footprint) {\n                selected = bbox.context;\n                break;\n            }\n        }\n\n        this.select(selected);\n    }\n\n    override select(item: board_items.Footprint | string | BBox | null) {\n        // If item is a string, find the footprint by uuid or reference.\n        if (is_string(item)) {\n            item = this.board.find_footprint(item);\n        }\n\n        // If it's a footprint, use the footprint's nominal bounding box.\n        if (item instanceof board_items.Footprint) {\n            item = item.bbox;\n        }\n\n        super.select(item);\n    }\n\n    highlight_net(net: number) {\n        this.painter.paint_net(this.board, net);\n        this.draw();\n    }\n\n    private set_layers_opacity(layers: Generator<ViewLayer>, opacity: number) {\n        for (const layer of layers) {\n            layer.opacity = opacity;\n        }\n        this.draw();\n    }\n\n    set track_opacity(value: number) {\n        this.set_layers_opacity(\n            (this.layers as LayerSet).copper_layers(),\n            value,\n        );\n    }\n\n    set via_opacity(value: number) {\n        this.set_layers_opacity((this.layers as LayerSet).via_layers(), value);\n    }\n\n    set zone_opacity(value: number) {\n        this.set_layers_opacity((this.layers as LayerSet).zone_layers(), value);\n    }\n\n    set pad_opacity(value: number) {\n        this.set_layers_opacity((this.layers as LayerSet).pad_layers(), value);\n    }\n\n    set pad_hole_opacity(value: number) {\n        this.set_layers_opacity(\n            (this.layers as LayerSet).pad_hole_layers(),\n            value,\n        );\n    }\n\n    set grid_opacity(value: number) {\n        this.set_layers_opacity((this.layers as LayerSet).grid_layers(), value);\n    }\n\n    set page_opacity(value: number) {\n        this.layers.by_name(LayerNames.drawing_sheet)!.opacity = value;\n        this.draw();\n    }\n\n    zoom_to_board() {\n        const edge_cuts = this.layers.by_name(LayerNames.edge_cuts)!;\n        const board_bbox = edge_cuts.bbox;\n        this.viewport.camera.bbox = board_bbox.grow(board_bbox.w * 0.1);\n    }\n}\n", "/*\n    Copyright (c) 2022 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nimport type { PanAndZoomOptions } from \"../../../base/dom/pan-and-zoom\";\nimport { attribute, html } from \"../../../base/web-components\";\nimport { KCUIElement } from \"../../../kc-ui\";\nimport { KiCanvasLoadEvent } from \"../../../viewers/base/events\";\nimport type { Viewer } from \"../../../viewers/base/viewer\";\nimport { Preferences, WithPreferences } from \"../../preferences\";\nimport type { ProjectPage } from \"../../project\";\nimport themes from \"../../themes\";\n\n/**\n * Basic element for wiring up a Viewer to the DOM.\n */\nexport abstract class KCViewerElement<\n  ViewerT extends Viewer,\n> extends WithPreferences(KCUIElement) {\n  canvas: HTMLCanvasElement;\n  viewer: ViewerT;\n  selected: any[] = [];\n\n  @attribute({ type: Boolean })\n  loaded: boolean;\n\n  @attribute({ type: String })\n  theme: string;\n\n  @attribute({ type: Boolean })\n  disableinteraction: boolean;\n\n  override initialContentCallback(options: PanAndZoomOptions) {\n    (async () => {\n      this.viewer = this.addDisposable(this.make_viewer());\n\n      await this.viewer.setup(options);\n\n      this.addDisposable(\n        this.viewer.addEventListener(KiCanvasLoadEvent.type, () => {\n          this.loaded = true;\n          this.dispatchEvent(new KiCanvasLoadEvent());\n        }),\n      );\n    })();\n  }\n\n  override async preferenceChangeCallback(preferences: Preferences) {\n    // Don't apply preference changes if the theme has been set via an attribute.\n    if (this.theme || !this.viewer || !this.viewer.loaded) {\n      return;\n    }\n    this.update_theme();\n    this.viewer.paint();\n    this.viewer.draw();\n  }\n\n  override disconnectedCallback() {\n    super.disconnectedCallback();\n    this.selected = [];\n  }\n\n  protected get themeObject() {\n    // If the theme attribute is set, override preferences.\n    if (this.theme) {\n      return themes.by_name(this.theme);\n    } else {\n      return Preferences.INSTANCE.theme;\n    }\n  }\n\n  protected abstract update_theme(): void;\n\n  protected abstract make_viewer(): ViewerT;\n\n  async load(src: ProjectPage) {\n    this.loaded = false;\n    await this.viewer.load(src.document);\n  }\n\n  override render() {\n    this.canvas = html`<canvas></canvas>` as HTMLCanvasElement;\n\n    return html`<style>\n                :host {\n                    display: block;\n                    touch-action: none;\n                    width: 100%;\n                    height: 100%;\n                }\n\n                canvas {\n                    width: 100%;\n                    height: 100%;\n                }\n            </style>\n            ${this.canvas}`;\n  }\n}\n", "/*\n    Copyright (c) 2022 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nimport { BoardViewer } from \"../../../viewers/board/viewer\";\nimport { KCViewerElement } from \"../common/viewer\";\n\nexport class KCBoardViewerElement extends KCViewerElement<BoardViewer> {\n    protected override update_theme(): void {\n        this.viewer.theme = this.themeObject.board;\n    }\n\n    protected override make_viewer(): BoardViewer {\n        return new BoardViewer(\n            this.canvas,\n            !this.disableinteraction,\n            this.themeObject.board,\n        );\n    }\n}\n\nwindow.customElements.define(\"kc-board-viewer\", KCBoardViewerElement);\n", "/*\n    Copyright (c) 2023 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nimport { sorted_by_numeric_strings } from \"../../../base/array\";\nimport { html, query } from \"../../../base/web-components\";\nimport {\n    KCUIElement,\n    KCUIFilteredListElement,\n    KCUIMenuElement,\n    KCUITextFilterInputElement,\n    type KCUIMenuItemElement,\n} from \"../../../kc-ui\";\nimport type { Footprint } from \"../../../kicad/board\";\nimport { KiCanvasSelectEvent } from \"../../../viewers/base/events\";\nimport { BoardViewer } from \"../../../viewers/board/viewer\";\n\nexport class KCBoardFootprintsPanelElement extends KCUIElement {\n    viewer: BoardViewer;\n\n    override connectedCallback() {\n        (async () => {\n            this.viewer = await this.requestLazyContext(\"viewer\");\n            await this.viewer.loaded;\n            this.sort_footprints();\n            super.connectedCallback();\n        })();\n    }\n\n    @query(\"kc-ui-menu\", true)\n    private menu!: KCUIMenuElement;\n\n    private sorted_footprints: Footprint[];\n    private sort_footprints() {\n        this.sorted_footprints = sorted_by_numeric_strings(\n            this.viewer.board.footprints,\n            (fp) => fp.reference || \"REF\",\n        );\n    }\n\n    override initialContentCallback() {\n        this.addEventListener(\"kc-ui-menu:select\", (e) => {\n            const item = (e as CustomEvent).detail as KCUIMenuItemElement;\n\n            if (!item.name) {\n                return;\n            }\n\n            this.viewer.select(item.name);\n        });\n\n        // Update the selected item in the list whenever the viewer's\n        // selection changes.\n        this.addDisposable(\n            this.viewer.addEventListener(KiCanvasSelectEvent.type, () => {\n                this.menu.selected = this.viewer.selected?.context.uuid ?? null;\n            }),\n        );\n\n        // Wire up search to filter the list\n        this.search_input_elm.addEventListener(\"input\", (e) => {\n            this.item_filter_elem.filter_text =\n                this.search_input_elm.value ?? null;\n        });\n    }\n\n    @query(\"kc-ui-text-filter-input\", true)\n    private search_input_elm!: KCUITextFilterInputElement;\n\n    @query(\"kc-ui-filtered-list\", true)\n    private item_filter_elem!: KCUIFilteredListElement;\n\n    override render() {\n        return html`\n            <kc-ui-panel>\n                <kc-ui-panel-title title=\"Footprints\"></kc-ui-panel-title>\n                <kc-ui-panel-body>\n                    <kc-ui-text-filter-input></kc-ui-text-filter-input>\n                    <kc-ui-filtered-list>\n                        <kc-ui-menu class=\"outline\">\n                            ${this.render_list()}\n                        </kc-ui-menu>\n                    </kc-ui-filtered-list>\n                </kc-ui-panel-body>\n            </kc-ui-panel>\n        `;\n    }\n\n    private render_list() {\n        const front_footprints = [];\n        const back_footprints = [];\n\n        for (const fp of this.sorted_footprints) {\n            const ref = fp.reference || \"REF\";\n            const val = fp.value || \"VAL\";\n            const match_text = `${fp.library_link} ${fp.descr} ${fp.layer} ${ref} ${val} ${fp.tags}`;\n\n            const entry = html`<kc-ui-menu-item\n                name=\"${fp.uuid}\"\n                data-match-text=\"${match_text}\">\n                <span class=\"narrow\">${ref}</span><span>${val}</span>\n            </kc-ui-menu-item>`;\n\n            if (fp.layer == \"F.Cu\") {\n                front_footprints.push(entry);\n            } else {\n                back_footprints.push(entry);\n            }\n        }\n\n        return html`<kc-ui-menu-label>Front</kc-ui-menu-label>\n            ${front_footprints}\n            <kc-ui-menu-label>Back</kc-ui-menu-label>\n            ${back_footprints}`;\n    }\n}\n\nwindow.customElements.define(\n    \"kc-board-footprints-panel\",\n    KCBoardFootprintsPanelElement,\n);\n", "/*\n    Copyright (c) 2023 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nimport { html } from \"../../../base/web-components\";\nimport { KCUIElement } from \"../../../kc-ui\";\nimport { BoardViewer } from \"../../../viewers/board/viewer\";\n\nexport class KCBoardInfoPanelElement extends KCUIElement {\n    viewer: BoardViewer;\n\n    override connectedCallback() {\n        (async () => {\n            this.viewer = await this.requestLazyContext(\"viewer\");\n            await this.viewer.loaded;\n            super.connectedCallback();\n        })();\n    }\n\n    override render() {\n        const ds = this.viewer.drawing_sheet;\n        const board = this.viewer.board;\n        const board_bbox = board.edge_cuts_bbox;\n\n        const header = (name: string) =>\n            html`<kc-ui-property-list-item\n                name=\"${name}\"\n                class=\"label\"></kc-ui-property-list-item>`;\n\n        const entry = (name: string, desc?: any, suffix = \"\") =>\n            html` <kc-ui-property-list-item name=\"${name}\">\n                ${desc} ${suffix}\n            </kc-ui-property-list-item>`;\n\n        const comments = Object.entries(board.title_block?.comment || {}).map(\n            ([k, v]) => entry(`Comment ${k}`, v),\n        );\n\n        return html`\n            <kc-ui-panel>\n                <kc-ui-panel-title title=\"Info\"></kc-ui-panel-title>\n                <kc-ui-panel-body>\n                    <kc-ui-property-list>\n                        ${header(\"Page properties\")}\n                        ${entry(\"Size\", ds.paper?.size)}\n                        ${entry(\"Width\", ds.width, \"mm\")}\n                        ${entry(\"Height\", ds.height, \"mm\")}\n                        ${header(\"Board properties\")}\n                        ${entry(\"KiCAD version\", board.version)}\n                        ${entry(\"Generator\", board.generator)}\n                        ${entry(\n                            \"Thickness\",\n                            board.general?.thickness ?? 1.6,\n                            \"mm\",\n                        )}\n                        ${entry(\"Title\", board.title_block?.title)}\n                        ${entry(\"Date\", board.title_block?.date)}\n                        ${entry(\"Revision\", board.title_block?.rev)}\n                        ${entry(\"Company\", board.title_block?.company)}\n                        ${comments}\n                        ${entry(\n                            \"Dimensions\",\n                            `${board_bbox.w.toFixed(1)} x\n                            ${board_bbox.h.toFixed(1)} mm`,\n                        )}\n                        ${entry(\"Footprints\", board.footprints.length)}\n                        ${entry(\"Nets\", board.nets.length)}\n                        ${entry(\"Track segments\", board.segments.length)}\n                        ${entry(\"Vias\", board.vias.length)}\n                        ${entry(\"Zones\", board.zones.length)}\n                        ${entry(\n                            \"Pad to mask clearance\",\n                            board.setup?.pad_to_mask_clearance ?? 0,\n                            \"mm\",\n                        )}\n                        ${entry(\n                            \"Soldermask min width\",\n                            board.setup?.solder_mask_min_width ?? 0,\n                            \"mm\",\n                        )}\n                        ${entry(\n                            \"Pad to paste clearance\",\n                            board.setup?.pad_to_paste_clearance ?? 0,\n                            \"mm\",\n                        )}\n                        ${entry(\n                            \"Pad to paste clearance ratio\",\n                            board.setup?.pad_to_paste_clearance_ratio ?? 0,\n                        )}\n                        ${entry(\n                            \"Grid origin\",\n                            `${board.setup?.grid_origin?.x ?? 0}, ${\n                                board.setup?.grid_origin?.y ?? 0\n                            }`,\n                        )}\n                    </kc-ui-property-list>\n                </kc-ui-panel-body>\n            </kc-ui-panel>\n        `;\n    }\n}\n\nwindow.customElements.define(\"kc-board-info-panel\", KCBoardInfoPanelElement);\n", "/*\n    Copyright (c) 2023 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nimport { attribute, css, html, query } from \"../../../base/web-components\";\nimport {\n  KCUIElement,\n  KCUIMenuElement,\n  type KCUIMenuItemElement,\n  type KCUIPanelBodyElement,\n} from \"../../../kc-ui\";\nimport { LayerNames, LayerSet } from \"../../../viewers/board/layers\";\nimport { BoardViewer } from \"../../../viewers/board/viewer\";\n\nexport class KCBoardLayersPanelElement extends KCUIElement {\n  static override styles = [\n    ...KCUIElement.styles,\n    css`\n            :host {\n                display: block;\n                height: 100%;\n                overflow-y: auto;\n                overflow-x: hidden;\n                user-select: none;\n            }\n\n            kc-ui-panel-title button {\n                all: unset;\n                flex-shrink: 0;\n                margin-left: 1em;\n                color: white;\n                border: 0 none;\n                background: transparent;\n                padding: 0 0.25em 0 0.25em;\n                margin-right: -0.25em;\n                display: flex;\n                align-items: center;\n            }\n        `,\n  ];\n\n  viewer: BoardViewer;\n\n  @query(\"kc-ui-panel-body\", true)\n  private panel_body!: KCUIPanelBodyElement;\n\n  public get items(): KCBoardLayerControlElement[] {\n    return Array.from(\n      this.panel_body.querySelectorAll(\"kc-board-layer-control\") ?? [],\n    );\n  }\n\n  @query(\"#presets\", true)\n  private presets_menu!: KCUIMenuElement;\n\n  override connectedCallback() {\n    (async () => {\n      this.viewer = await this.requestLazyContext(\"viewer\");\n      await this.viewer.loaded;\n      super.connectedCallback();\n    })();\n  }\n\n  override initialContentCallback() {\n    // Highlight layer when its control list item is clicked\n    this.panel_body.addEventListener(\n      KCBoardLayerControlElement.select_event,\n      (e: Event) => {\n        const item = (e as CustomEvent)\n          .detail as KCBoardLayerControlElement;\n\n        for (const n of this.items) {\n          n.layer_highlighted = false;\n        }\n\n        const layer = this.viewer.layers.by_name(item.layer_name!)!;\n\n        // if this layer is already highlighted, de-highlight it.\n        if (layer.highlighted) {\n          this.viewer.layers.highlight(null);\n        }\n        // otherwise mark it as highlighted.\n        else {\n          this.viewer.layers.highlight(layer);\n          layer.visible = true;\n          item.layer_visible = true;\n          item.layer_highlighted = true;\n        }\n\n        this.viewer.draw();\n      },\n    );\n\n    // Toggle layer visibility when its item's visibility control is clicked\n    this.panel_body.addEventListener(\n      KCBoardLayerControlElement.visibility_event,\n      (e) => {\n        const item = (e as CustomEvent)\n          .detail as KCBoardLayerControlElement;\n\n        const layer = this.viewer.layers.by_name(item.layer_name!)!;\n\n        // Toggle layer visibility\n        layer.visible = !layer.visible;\n        item.layer_visible = layer.visible;\n\n        // Deselect any presets, as we're no longer showing preset layers.\n        this.presets_menu.deselect();\n\n        this.viewer.draw();\n      },\n    );\n\n    // Show/hide all layers\n    this.renderRoot\n      .querySelector(\"button\")\n      ?.addEventListener(\"click\", (e) => {\n        e.stopPropagation();\n\n        const ui_layers = this.viewer.layers.in_ui_order();\n\n        if (this.items.some((n) => n.layer_visible)) {\n          // hide all layers.\n          for (const l of ui_layers) {\n            l.visible = false;\n          }\n        } else {\n          // show all layers\n          for (const l of ui_layers) {\n            l.visible = true;\n          }\n        }\n\n        this.viewer.draw();\n\n        // Deselect any presets, as we're no longer showing preset layers.\n        this.presets_menu.deselect();\n\n        this.update_item_states();\n      });\n\n    // Presets\n    this.presets_menu.addEventListener(\"kc-ui-menu:select\", (e) => {\n      const item = (e as CustomEvent).detail as KCUIMenuItemElement;\n      const ui_layers = this.viewer.layers.in_ui_order();\n\n      switch (item.name) {\n        case \"all\":\n          for (const l of ui_layers) {\n            l.visible = true;\n          }\n          break;\n        case \"front\":\n          for (const l of ui_layers) {\n            l.visible =\n              l.name.startsWith(\"F.\") ||\n              l.name == LayerNames.edge_cuts;\n          }\n          break;\n        case \"back\":\n          for (const l of ui_layers) {\n            l.visible =\n              l.name.startsWith(\"B.\") ||\n              l.name == LayerNames.edge_cuts;\n          }\n          break;\n        case \"copper\":\n          for (const l of ui_layers) {\n            l.visible =\n              l.name.includes(\".Cu\") ||\n              l.name == LayerNames.edge_cuts;\n          }\n          break;\n        case \"outer-copper\":\n          for (const l of ui_layers) {\n            l.visible =\n              l.name == LayerNames.f_cu ||\n              l.name == LayerNames.b_cu ||\n              l.name == LayerNames.edge_cuts;\n          }\n          break;\n        case \"inner-copper\":\n          for (const l of ui_layers) {\n            l.visible =\n              (l.name.includes(\".Cu\") &&\n                !(\n                  l.name == LayerNames.f_cu ||\n                  l.name == LayerNames.b_cu\n                )) ||\n              l.name == LayerNames.edge_cuts;\n          }\n          break;\n        case \"drawings\":\n          for (const l of ui_layers) {\n            l.visible =\n              !l.name.includes(\".Cu\") &&\n              !l.name.includes(\".Mask\") &&\n              !l.name.includes(\".Paste\") &&\n              !l.name.includes(\".Adhes\");\n          }\n      }\n\n      this.viewer.draw();\n      this.update_item_states();\n    });\n  }\n\n  public update_item_states() {\n    for (const item of this.items) {\n      const layer = this.viewer.layers.by_name(item.layer_name!);\n      item.layer_visible = layer?.visible ?? false;\n      item.layer_highlighted = layer?.highlighted ?? false;\n    }\n  }\n\n  override render() {\n    const layers = this.viewer.layers as LayerSet;\n    const items: ReturnType<typeof html>[] = [];\n\n    for (const layer of layers.in_ui_order()) {\n      const visible = layer.visible ? \"\" : undefined;\n      const css_color = layer.color.to_css();\n      items.push(\n        html`<kc-board-layer-control\n                    layer-name=\"${layer.name}\"\n                    layer-color=\"${css_color}\"\n                    layer-visible=\"${visible}\"></kc-board-layer-control>`,\n      );\n    }\n\n    return html`\n            <kc-ui-panel>\n                <kc-ui-panel-title title=\"Layers\">\n                    <button slot=\"actions\" type=\"button\">\n                        <kc-ui-icon>visibility</kc-ui-icon>\n                    </button>\n                </kc-ui-panel-title>\n                <kc-ui-panel-body>\n                    ${items}\n                    <kc-ui-panel-label>Presets</kc-ui-panel-label>\n                    <kc-ui-menu id=\"presets\" class=\"outline\">\n                        <kc-ui-menu-item name=\"all\">All</kc-ui-menu-item>\n                        <kc-ui-menu-item name=\"front\">Front</kc-ui-menu-item>\n                        <kc-ui-menu-item name=\"back\">Back</kc-ui-menu-item>\n                        <kc-ui-menu-item name=\"copper\">Copper</kc-ui-menu-item>\n                        <kc-ui-menu-item name=\"outer-copper\">\n                            Outer copper\n                        </kc-ui-menu-item>\n                        <kc-ui-menu-item name=\"inner-copper\">\n                            Inner copper\n                        </kc-ui-menu-item>\n                        <kc-ui-menu-item name=\"drawings\">\n                            Drawings\n                        </kc-ui-menu-item>\n                    </kc-ui-menu>\n                </kc-ui-panel-body>\n            </kc-ui-panel>\n        `;\n  }\n}\n\nclass KCBoardLayerControlElement extends KCUIElement {\n  static override styles = [\n    ...KCUIElement.styles,\n    css`\n            :host {\n                box-sizing: border-box;\n                padding: 0.1em 0.8em 0.1em 0.4em;\n                color: white;\n                text-align: left;\n                display: flex;\n                flex-direction: row;\n                width: 100%;\n                align-items: center;\n            }\n\n            button {\n                all: unset;\n                cursor: pointer;\n                flex-shrink: 0;\n                margin-left: 1em;\n                color: white;\n                border: 0 none;\n                background: transparent;\n                padding: 0 0.25em 0 0.25em;\n                margin-right: -0.25em;\n                display: flex;\n                align-items: center;\n            }\n\n            .color {\n                flex-shrink: 0;\n                display: block;\n                width: 1em;\n                height: 1em;\n                margin-right: 0.5em;\n            }\n\n            .name {\n                display: block;\n                flex-grow: 1;\n            }\n\n            .for-hidden {\n                color: #888;\n            }\n\n            :host {\n                background: var(--list-item-disabled-bg);\n                color: var(--list-item-disabled-fg);\n            }\n\n            :host(:hover) {\n                background: var(--list-item-hover-bg);\n                color: var(--list-item-hover-fg);\n            }\n\n            :host(:hover) button {\n                color: var(--list-item-bg);\n            }\n\n            :host(:hover) button:hover {\n                color: var(--list-item-fg);\n            }\n\n            :host([layer-visible]) {\n                background: var(--list-item-bg);\n                color: var(--list-item-fg);\n            }\n\n            :host([layer-highlighted]) {\n                background: var(--list-item-active-bg);\n                color: var(--list-item-active-fg);\n            }\n\n            :host([layer-highlighted]:hover) button {\n                color: var(--list-item-fg);\n            }\n\n            :host kc-ui-icon.for-visible,\n            :host([layer-visible]) kc-ui-icon.for-hidden {\n                display: none;\n            }\n\n            :host kc-ui-icon.for-hidden,\n            :host([layer-visible]) kc-ui-icon.for-visible {\n                display: revert;\n            }\n        `,\n  ];\n\n  static select_event = \"kicanvas:layer-control:select\";\n  static visibility_event = \"kicanvas:layer-control:visibility\";\n\n  override initialContentCallback() {\n    super.initialContentCallback();\n\n    this.renderRoot.addEventListener(\"click\", (e) => {\n      e.stopPropagation();\n\n      const button = (e.target as HTMLElement)?.closest(\"button\");\n      let event_name;\n\n      // Visibility button clicked.\n      if (button) {\n        event_name = KCBoardLayerControlElement.visibility_event;\n      }\n      // Otherwise, some other part of the element was clicked so it's\n      // \"selected\".\n      else {\n        event_name = KCBoardLayerControlElement.select_event;\n      }\n\n      this.dispatchEvent(\n        new CustomEvent(event_name, {\n          detail: this,\n          bubbles: true,\n        }),\n      );\n    });\n  }\n\n  @attribute({ type: String })\n  public layer_name: string;\n\n  @attribute({ type: String })\n  public layer_color: string;\n\n  @attribute({ type: Boolean })\n  public layer_highlighted: boolean;\n\n  @attribute({ type: Boolean })\n  public layer_visible: boolean;\n\n  override render() {\n    return html`<span\n                class=\"color\"\n                style=\"background: ${this.layer_color};\"></span>\n            <span class=\"name\">${this.layer_name}</span>\n            <button type=\"button\" name=\"${this.layer_name}\">\n                <kc-ui-icon class=\"for-visible\">visibility</kc-ui-icon>\n                <kc-ui-icon class=\"for-hidden\">visibility_off</kc-ui-icon>\n            </button>`;\n  }\n}\n\nwindow.customElements.define(\n  \"kc-board-layer-control\",\n  KCBoardLayerControlElement,\n);\n\nwindow.customElements.define(\n  \"kc-board-layers-panel\",\n  KCBoardLayersPanelElement,\n);\n", "/*\n    Copyright (c) 2023 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nimport { html, query } from \"../../../base/web-components\";\nimport {\n    KCUIElement,\n    KCUIFilteredListElement,\n    KCUITextFilterInputElement,\n    type KCUIMenuItemElement,\n} from \"../../../kc-ui\";\nimport { BoardViewer } from \"../../../viewers/board/viewer\";\n\nexport class KCBoardNetsPanelElement extends KCUIElement {\n    viewer: BoardViewer;\n\n    override connectedCallback() {\n        (async () => {\n            this.viewer = await this.requestLazyContext(\"viewer\");\n            await this.viewer.loaded;\n            super.connectedCallback();\n        })();\n    }\n\n    override initialContentCallback() {\n        this.addEventListener(\"kc-ui-menu:select\", (e) => {\n            const item = (e as CustomEvent).detail as KCUIMenuItemElement;\n\n            const number = parseInt(item?.name, 10);\n\n            if (!number) {\n                return;\n            }\n\n            this.viewer.highlight_net(number);\n        });\n\n        // Wire up search to filter the list\n        this.search_input_elm.addEventListener(\"input\", (e) => {\n            this.item_filter_elem.filter_text =\n                this.search_input_elm.value ?? null;\n        });\n    }\n\n    @query(\"kc-ui-text-filter-input\", true)\n    private search_input_elm!: KCUITextFilterInputElement;\n\n    @query(\"kc-ui-filtered-list\", true)\n    private item_filter_elem!: KCUIFilteredListElement;\n\n    override render() {\n        const board = this.viewer.board;\n\n        const nets = [];\n\n        for (const net of board.nets) {\n            nets.push(\n                html`<kc-ui-menu-item\n                    name=\"${net.number}\"\n                    data-match-text=\"${net.number} ${net.name}\">\n                    <span class=\"very-narrow\"> ${net.number} </span>\n                    <span>${net.name}</span>\n                </kc-ui-menu-item>`,\n            );\n        }\n\n        return html`\n            <kc-ui-panel>\n                <kc-ui-panel-title title=\"Nets\"></kc-ui-panel-title>\n                <kc-ui-panel-body>\n                    <kc-ui-text-filter-input></kc-ui-text-filter-input>\n                    <kc-ui-filtered-list>\n                        <kc-ui-menu class=\"outline\">${nets}</kc-ui-menu>\n                    </kc-ui-filtered-list>\n                </kc-ui-panel-body>\n            </kc-ui-panel>\n        `;\n    }\n}\n\nwindow.customElements.define(\"kc-board-nets-panel\", KCBoardNetsPanelElement);\n", "/*\n    Copyright (c) 2023 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nimport { delegate } from \"../../../base/events\";\nimport { html } from \"../../../base/web-components\";\nimport { KCUIElement, type KCUIRangeElement } from \"../../../kc-ui\";\nimport { BoardViewer } from \"../../../viewers/board/viewer\";\n\nexport class KCBoardObjectsPanelElement extends KCUIElement {\n    viewer: BoardViewer;\n\n    override connectedCallback() {\n        (async () => {\n            this.viewer = await this.requestLazyContext(\"viewer\");\n            await this.viewer.loaded;\n            super.connectedCallback();\n            this.setup_events();\n        })();\n    }\n\n    private setup_events() {\n        delegate(this.renderRoot, \"kc-ui-range\", \"kc-ui-range:input\", (e) => {\n            const control = e.target as KCUIRangeElement;\n            const opacity = control.valueAsNumber;\n            switch (control.name) {\n                case \"tracks\":\n                    this.viewer.track_opacity = opacity;\n                    break;\n                case \"vias\":\n                    this.viewer.via_opacity = opacity;\n                    break;\n                case \"pads\":\n                    this.viewer.pad_opacity = opacity;\n                    break;\n                case \"holes\":\n                    this.viewer.pad_hole_opacity = opacity;\n                    break;\n                case \"zones\":\n                    this.viewer.zone_opacity = opacity;\n                    break;\n                case \"grid\":\n                    this.viewer.grid_opacity = opacity;\n                    break;\n                case \"page\":\n                    this.viewer.page_opacity = opacity;\n                    break;\n            }\n        });\n    }\n\n    override render() {\n        return html`\n            <kc-ui-panel>\n                <kc-ui-panel-title title=\"Objects\"></kc-ui-panel-title>\n                <kc-ui-panel-body padded>\n                    <kc-ui-control-list>\n                        <kc-ui-control>\n                            <label>Tracks</label>\n                            <kc-ui-range\n                                min=\"0\"\n                                max=\"1.0\"\n                                step=\"0.01\"\n                                value=\"1\"\n                                name=\"tracks\"></kc-ui-range>\n                        </kc-ui-control>\n                        <kc-ui-control>\n                            <label>Vias</label>\n                            <kc-ui-range\n                                min=\"0\"\n                                max=\"1.0\"\n                                step=\"0.01\"\n                                value=\"1\"\n                                name=\"vias\"></kc-ui-range>\n                        </kc-ui-control>\n                        <kc-ui-control>\n                            <label>Pads</label>\n                            <kc-ui-range\n                                min=\"0\"\n                                max=\"1.0\"\n                                step=\"0.01\"\n                                value=\"1\"\n                                name=\"pads\"></kc-ui-range>\n                        </kc-ui-control>\n                        <kc-ui-control>\n                            <label>Through holes</label>\n                            <kc-ui-range\n                                min=\"0\"\n                                max=\"1.0\"\n                                step=\"0.01\"\n                                value=\"1\"\n                                name=\"holes\"></kc-ui-range>\n                        </kc-ui-control>\n                        <kc-ui-control>\n                            <label>Zones</label>\n                            <kc-ui-range\n                                min=\"0\"\n                                max=\"1.0\"\n                                step=\"0.01\"\n                                value=\"1\"\n                                name=\"zones\"></kc-ui-range>\n                        </kc-ui-control>\n                        <kc-ui-control>\n                            <label>Grid</label>\n                            <kc-ui-range\n                                min=\"0\"\n                                max=\"1.0\"\n                                step=\"0.01\"\n                                value=\"1\"\n                                name=\"grid\"></kc-ui-range>\n                        </kc-ui-control>\n                        <kc-ui-control>\n                            <label>Page</label>\n                            <kc-ui-range\n                                min=\"0\"\n                                max=\"1.0\"\n                                step=\"0.01\"\n                                value=\"1\"\n                                name=\"page\"></kc-ui-range>\n                        </kc-ui-control>\n                    </kc-ui-control-list>\n                </kc-ui-panel-body>\n            </kc-ui-panel>\n        `;\n    }\n}\n\nwindow.customElements.define(\n    \"kc-board-objects-panel\",\n    KCBoardObjectsPanelElement,\n);\n", "/*\n    Copyright (c) 2023 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nimport { html } from \"../../../base/web-components\";\nimport { KCUIElement } from \"../../../kc-ui\";\nimport { Footprint } from \"../../../kicad/board\";\nimport { KiCanvasSelectEvent } from \"../../../viewers/base/events\";\nimport { BoardViewer } from \"../../../viewers/board/viewer\";\n\nexport class KCBoardPropertiesPanelElement extends KCUIElement {\n    viewer: BoardViewer;\n    selected_item?: Footprint;\n\n    override connectedCallback() {\n        (async () => {\n            this.viewer = await this.requestLazyContext(\"viewer\");\n            await this.viewer.loaded;\n            super.connectedCallback();\n            this.setup_events();\n        })();\n    }\n\n    private setup_events() {\n        this.addDisposable(\n            this.viewer.addEventListener(KiCanvasSelectEvent.type, (e) => {\n                this.selected_item = e.detail.item as Footprint;\n                this.update();\n            }),\n        );\n    }\n\n    override render() {\n        const header = (name: string) =>\n            html`<kc-ui-property-list-item class=\"label\" name=\"${name}\">\n            </kc-ui-property-list-item>`;\n\n        const entry = (name: string, desc?: any, suffix = \"\") =>\n            html`<kc-ui-property-list-item name=\"${name}\">\n                ${desc ?? \"\"} ${suffix}\n            </kc-ui-property-list-item>`;\n\n        const checkbox = (value?: boolean) =>\n            value\n                ? html`<kc-ui-icon>check</kc-ui-icon>`\n                : html`<kc-ui-icon>close</kc-ui-icon>`;\n\n        let entries;\n\n        if (!this.selected_item) {\n            entries = header(\"No item selected\");\n        } else {\n            const itm = this.selected_item;\n\n            const properties = Object.entries(itm.properties).map(([k, v]) => {\n                return entry(k, v);\n            });\n\n            entries = html`\n                ${header(\"Basic properties\")}\n                ${entry(\"X\", itm.at.position.x.toFixed(4), \"mm\")}\n                ${entry(\"Y\", itm.at.position.y.toFixed(4), \"mm\")}\n                ${entry(\"Orientation\", itm.at.rotation, \"\u00B0\")}\n                ${entry(\"Layer\", itm.layer)} ${header(\"Footprint properties\")}\n                ${entry(\"Reference\", itm.reference)}\n                ${entry(\"Value\", itm.value)}\n                ${entry(\n                    \"Type\",\n                    itm.attr.through_hole\n                        ? \"through hole\"\n                        : itm.attr.smd\n                        ? \"smd\"\n                        : \"unspecified\",\n                )}\n                ${entry(\"Pads\", itm.pads.length)}\n                ${entry(\"Library link\", itm.library_link)}\n                ${entry(\"Description\", itm.descr)}\n                ${entry(\"Keywords\", itm.tags)} ${properties}\n                ${header(\"Fabrication attributes\")}\n                ${entry(\"Not in schematic\", checkbox(itm.attr.board_only))}\n                ${entry(\n                    \"Exclude from position files\",\n                    checkbox(itm.attr.exclude_from_pos_files),\n                )}\n                ${entry(\n                    \"Exclude from BOM\",\n                    checkbox(itm.attr.exclude_from_bom),\n                )}\n                ${header(\"Overrides\")}\n                ${entry(\n                    \"Exempt from courtyard requirement\",\n                    checkbox(itm.attr.allow_missing_courtyard),\n                )}\n                ${entry(\"Clearance\", itm.clearance ?? 0, \"mm\")}\n                ${entry(\n                    \"Solderpaste margin\",\n                    itm.solder_paste_margin ?? 0,\n                    \"mm\",\n                )}\n                ${entry(\n                    \"Solderpaste margin ratio\",\n                    itm.solder_paste_ratio ?? 0,\n                )}\n                ${entry(\"Zone connection\", itm.zone_connect ?? \"inherited\")}\n            `;\n        }\n\n        return html`\n            <kc-ui-panel>\n                <kc-ui-panel-title title=\"Properties\"></kc-ui-panel-title>\n                <kc-ui-panel-body>\n                    <kc-ui-property-list> ${entries} </kc-ui-property-list>\n                </kc-ui-panel-body>\n            </kc-ui-panel>\n        `;\n    }\n}\n\nwindow.customElements.define(\n    \"kc-board-properties-panel\",\n    KCBoardPropertiesPanelElement,\n);\n", "/*\n    Copyright (c) 2022 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nimport { html } from \"../../../base/web-components\";\nimport { KicadPCB } from \"../../../kicad\";\nimport type { ProjectPage } from \"../../project\";\nimport { KCViewerAppElement, type ControlsType } from \"../common/app\";\nimport { KCBoardViewerElement } from \"./viewer\";\n\n// import dependent elements so they're registered before use.\nimport \"../common/help-panel\";\nimport \"../common/preferences-panel\";\nimport \"../common/viewer-bottom-toolbar\";\nimport \"./footprints-panel\";\nimport \"./info-panel\";\nimport \"./layers-panel\";\nimport \"./nets-panel\";\nimport \"./objects-panel\";\nimport \"./properties-panel\";\nimport \"./viewer\";\nimport type { KCBoardLayersPanelElement } from \"./layers-panel\";\n\n/**\n * Internal \"parent\" element for KiCanvas's board viewer. Handles\n * setting up the actual board viewer as well as interface controls. It's\n * basically KiCanvas's version of PCBNew.\n */\nexport class KCBoardAppElement extends KCViewerAppElement<KCBoardViewerElement> {\n  layersPanel: KCBoardLayersPanelElement;\n\n  override on_viewer_select(item?: unknown, previous?: unknown) {\n    // Selecting the same item twice should show the properties panel.\n    if (item && item == previous) {\n      this.change_activity(\"properties\");\n    }\n  }\n\n  override can_load(src: ProjectPage): boolean {\n    return src.document instanceof KicadPCB;\n  }\n\n  override make_viewer_element(): KCBoardViewerElement {\n    return html`<kc-board-viewer></kc-board-viewer>` as KCBoardViewerElement;\n  }\n\n  override make_activities(controls?: ControlsType) {\n    this.layersPanel = html`<kc-board-layers-panel></kc-board-layers-panel>` as KCBoardLayersPanelElement;\n\n    return [\n      // Layers\n      html`<kc-ui-activity slot=\"activities\" name=\"Layers\" icon=\"layers\">\n${this.layersPanel}\n</kc-ui-activity>`,\n      // Objects\n      html`<kc-ui-activity\n                slot=\"activities\"\n                name=\"Objects\"\n                icon=\"category\">\n                <kc-board-objects-panel></kc-board-objects-panel>\n</kc-ui-activity>`,\n      ...\n      // Footprints\n      (controls === \"full\" ? [\n        html`<kc-ui-activity\n                slot=\"activities\"\n                name=\"Footprints\"\n                icon=\"memory\">\n                <kc-board-footprints-panel></kc-board-footprints-panel>\n            </kc-ui-activity>`,\n        // Nets\n        html`<kc-ui-activity slot=\"activities\" name=\"Nets\" icon=\"hub\">\n                <kc-board-nets-panel></kc-board-nets-panel>\n            </kc-ui-activity>`,\n        // Properties\n        html`<kc-ui-activity\n                slot=\"activities\"\n                name=\"Properties\"\n                icon=\"list\">\n                <kc-board-properties-panel></kc-board-properties-panel>\n            </kc-ui-activity>`,\n        // Board info\n        html`<kc-ui-activity\n                slot=\"activities\"\n                name=\"Board info\"\n                icon=\"info\">\n                <kc-board-info-panel></kc-board-info-panel>\n</kc-ui-activity>`,\n      ] : []),\n    ];\n  }\n}\n\nwindow.customElements.define(\"kc-board-app\", KCBoardAppElement);\n", "/*\n    Copyright (c) 2023 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nimport { Color } from \"../base/color\";\nimport { Angle, Matrix3, Vec2 } from \"../base/math\";\nimport { Renderer, RenderLayer, RenderStateStack } from \"./renderer\";\nimport { Arc, Circle, Polygon, Polyline } from \"./shapes\";\n\n/**\n * Canvas2d-based renderer.\n *\n * This renderer works by turning draw calls into DrawCommands - basically\n * serializing them as Path2D + state. These DrawCommands are combined into\n * multiple Layers. When the layers are later drawn, the draw commands are\n * stepped through and draw onto the canvas.\n *\n * This is similar to generating old-school display lists.\n *\n */\nexport class Canvas2DRenderer extends Renderer {\n    /** Graphics layers */\n    #layers: Canvas2dRenderLayer[] = [];\n\n    /** The layer currently being drawn to. */\n    #active_layer: Canvas2dRenderLayer | null;\n\n    /** State */\n    override state: RenderStateStack = new RenderStateStack();\n\n    ctx2d?: CanvasRenderingContext2D;\n\n    /**\n     * Create a new Canvas2DRenderer\n     */\n    constructor(canvas: HTMLCanvasElement) {\n        super(canvas);\n    }\n\n    /**\n     * Create and configure the 2D Canvas context.\n     */\n    override async setup() {\n        const ctx2d = this.canvas.getContext(\"2d\", {\n            alpha: false,\n            desynchronized: true,\n        });\n\n        if (ctx2d == null) {\n            throw new Error(\"Unable to create Canvas2d context\");\n        }\n\n        this.ctx2d = ctx2d;\n        this.update_canvas_size();\n    }\n\n    override dispose() {\n        this.ctx2d = undefined;\n        for (const layer of this.#layers) {\n            layer.dispose();\n        }\n    }\n\n    override update_canvas_size() {\n        const dpr = window.devicePixelRatio;\n        const rect = this.canvas.getBoundingClientRect();\n        const pixel_w = Math.round(rect.width * dpr);\n        const pixel_h = Math.round(rect.height * dpr);\n\n        if (this.canvas.width != pixel_w || this.canvas.height != pixel_h) {\n            this.canvas.width = pixel_w;\n            this.canvas.height = pixel_h;\n        }\n    }\n\n    override clear_canvas() {\n        this.update_canvas_size();\n\n        this.ctx2d!.setTransform();\n        this.ctx2d!.scale(window.devicePixelRatio, window.devicePixelRatio);\n\n        this.ctx2d!.fillStyle = this.background_color.to_css();\n        this.ctx2d!.fillRect(0, 0, this.canvas.width, this.canvas.height);\n        this.ctx2d!.lineCap = \"round\";\n        this.ctx2d!.lineJoin = \"round\";\n    }\n\n    override start_layer(name: string) {\n        this.#active_layer = new Canvas2dRenderLayer(this, name);\n    }\n\n    override end_layer(): RenderLayer {\n        if (!this.#active_layer) {\n            throw new Error(\"No active layer\");\n        }\n\n        this.#layers.push(this.#active_layer);\n        this.#active_layer = null;\n\n        return this.#layers.at(-1)!;\n    }\n\n    override arc(\n        arc_or_center: Arc | Vec2,\n        radius?: number,\n        start_angle?: Angle,\n        end_angle?: Angle,\n        width?: number,\n        color?: Color,\n    ): void {\n        super.prep_arc(\n            arc_or_center,\n            radius,\n            start_angle,\n            end_angle,\n            width,\n            color,\n        );\n    }\n\n    override circle(\n        circle_or_center: Circle | Vec2,\n        radius?: number,\n        color?: Color,\n    ): void {\n        const circle = super.prep_circle(circle_or_center, radius, color);\n\n        if (!circle.color || circle.color.is_transparent_black) {\n            return;\n        }\n\n        const css_color = (circle.color as Color).to_css();\n\n        const path = new Path2D();\n        path.arc(\n            circle.center.x,\n            circle.center.y,\n            circle.radius,\n            0,\n            Math.PI * 2,\n        );\n\n        this.#active_layer!.commands.push(\n            new DrawCommand(path, css_color, null, 0),\n        );\n    }\n\n    override line(\n        line_or_points: Polyline | Vec2[],\n        width?: number,\n        color?: Color,\n    ): void {\n        const line = super.prep_line(line_or_points, width, color);\n\n        if (!line.color || line.color.is_transparent_black) {\n            return;\n        }\n\n        const css_color = (line.color as Color).to_css();\n\n        const path = new Path2D();\n        let started = false;\n\n        for (const point of line.points) {\n            if (!started) {\n                path.moveTo(point.x, point.y);\n                started = true;\n            } else {\n                path.lineTo(point.x, point.y);\n            }\n        }\n\n        this.#active_layer!.commands.push(\n            new DrawCommand(path, null, css_color, line.width),\n        );\n    }\n\n    override polygon(polygon_or_points: Polygon | Vec2[], color?: Color): void {\n        const polygon = super.prep_polygon(polygon_or_points, color);\n\n        if (!polygon.color || polygon.color.is_transparent_black) {\n            return;\n        }\n\n        const css_color = (polygon.color as Color).to_css();\n\n        const path = new Path2D();\n        let started = false;\n\n        for (const point of polygon.points) {\n            if (!started) {\n                path.moveTo(point.x, point.y);\n                started = true;\n            } else {\n                path.lineTo(point.x, point.y);\n            }\n        }\n        path.closePath();\n\n        this.#active_layer!.commands.push(\n            new DrawCommand(path, css_color, null, 0),\n        );\n    }\n\n    override get layers() {\n        const layers = this.#layers;\n        return {\n            *[Symbol.iterator]() {\n                for (const layer of layers) {\n                    yield layer;\n                }\n            },\n        };\n    }\n\n    override remove_layer(layer: Canvas2dRenderLayer) {\n        const idx = this.#layers.indexOf(layer);\n        if (idx == -1) {\n            return;\n        }\n        this.#layers.splice(idx, 1);\n    }\n}\n\nclass DrawCommand {\n    public path_count = 1;\n\n    constructor(\n        public path: Path2D,\n        public fill: string | null,\n        public stroke: string | null,\n        public stroke_width: number,\n    ) {}\n\n    render(ctx: CanvasRenderingContext2D) {\n        ctx.fillStyle = this.fill ?? \"black\";\n        ctx.strokeStyle = this.stroke ?? \"black\";\n        ctx.lineWidth = this.stroke_width;\n        if (this.fill) {\n            ctx.fill(this.path);\n        }\n        if (this.stroke) {\n            ctx.stroke(this.path);\n        }\n    }\n}\n\nclass Canvas2dRenderLayer extends RenderLayer {\n    constructor(\n        public override readonly renderer: Renderer,\n        public override readonly name: string,\n        public commands: DrawCommand[] = [],\n    ) {\n        super(renderer, name);\n    }\n\n    override dispose(): void {\n        this.clear();\n    }\n\n    clear() {\n        this.commands = [];\n    }\n\n    push_path(\n        path: Path2D,\n        fill: string | null,\n        stroke: string | null,\n        stroke_width: number,\n    ) {\n        const last_command = this.commands.at(-1);\n\n        if (\n            last_command &&\n            (last_command.path_count < 20,\n            last_command.fill == fill &&\n                last_command.stroke == stroke &&\n                last_command.stroke_width == stroke_width)\n        ) {\n            last_command.path.addPath(path);\n            last_command.path_count++;\n        } else {\n            this.commands.push(\n                new DrawCommand(path, fill, stroke, stroke_width),\n            );\n        }\n    }\n\n    render(transform: Matrix3, depth: number, global_alpha = 1) {\n        const ctx = (this.renderer as Canvas2DRenderer).ctx2d;\n\n        if (!ctx) {\n            throw new Error(\"No CanvasRenderingContext2D!\");\n        }\n\n        ctx.save();\n\n        ctx.globalCompositeOperation = this.composite_operation;\n        ctx.globalAlpha = global_alpha;\n\n        const accumulated_transform = Matrix3.from_DOMMatrix(\n            ctx.getTransform(),\n        );\n        accumulated_transform.multiply_self(transform);\n        ctx.setTransform(accumulated_transform.to_DOMMatrix());\n\n        for (const command of this.commands) {\n            command.render(ctx);\n        }\n\n        ctx.globalCompositeOperation = \"source-over\";\n        ctx.globalAlpha = 1;\n        ctx.restore();\n    }\n}\n", "/*\n    Copyright (c) 2023 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nimport {\n    ViewLayerNames as BaseLayerNames,\n    ViewLayerSet as BaseLayerSet,\n    ViewLayer,\n} from \"../base/view-layers\";\nimport { Color } from \"../../base/color\";\nimport type { SchematicTheme } from \"../../kicad\";\nexport { ViewLayer };\n\nexport enum LayerNames {\n    // Bounding boxes for clickable items\n    interactive = \":Interactive\",\n    // DNP and other marks.\n    marks = \":Marks\",\n    // reference, value, other symbol fields\n    symbol_field = \":Symbol:Field\",\n    // hierarchical, global, and local labels\n    label = \":Label\",\n    // regular junctions, bus junctions, no connects\n    junction = \":Junction\",\n    // wires and buses\n    wire = \":Wire\",\n    // symbol outlines, pin names, pin numbers\n    symbol_foreground = \":Symbol:Foreground\",\n    // Text, rectangles, etc. not inside of symbols.\n    notes = \":Notes\",\n    bitmap = \":Bitmap\",\n    // symbol pins\n    symbol_pin = \":Symbol:Pin\",\n    // symbol body fill\n    symbol_background = \":Symbol:Background\",\n    drawing_sheet = BaseLayerNames.drawing_sheet,\n    grid = BaseLayerNames.grid,\n}\n\n/**\n * Represents the complete set of layers used by a View to draw a schematic.\n *\n * While a schematic doesn't have physical layers like a board, it still has\n * \"virtual\" layers used to make sure things are drawn in the right order.\n */\nexport class LayerSet extends BaseLayerSet {\n    constructor(public theme: SchematicTheme) {\n        super();\n\n        for (const name of Object.values(LayerNames)) {\n            this.add(new ViewLayer(this, name));\n        }\n\n        this.by_name(LayerNames.interactive)!.visible = false;\n        this.by_name(LayerNames.interactive)!.interactive = true;\n        this.by_name(LayerNames.drawing_sheet)!.color =\n            (this.theme[\"worksheet\"] as Color) ?? Color.white;\n    }\n\n    override *interactive_layers(): Generator<ViewLayer, void, unknown> {\n        // Only the top interactive layer is clickable for schematics\n        yield this.by_name(LayerNames.interactive)!;\n    }\n}\n", "/*\n    Copyright (c) 2023 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nimport type { Color } from \"../../../base/color\";\nimport type { SchematicTheme } from \"../../../kicad\";\nimport * as schematic_items from \"../../../kicad/schematic\";\nimport { DocumentPainter, ItemPainter } from \"../../base/painter\";\nimport { LayerNames, type ViewLayer } from \"../layers\";\nimport type { SchematicPainter } from \"../painter\";\nimport type { SymbolTransform } from \"./symbol\";\n\nexport abstract class BaseSchematicPainter extends DocumentPainter {\n    override theme: SchematicTheme;\n    current_symbol?: schematic_items.SchematicSymbol;\n    current_symbol_transform?: SymbolTransform;\n}\n\nexport abstract class SchematicItemPainter extends ItemPainter {\n    override view_painter: SchematicPainter;\n\n    override get theme(): SchematicTheme {\n        return this.view_painter.theme;\n    }\n\n    protected get is_dimmed() {\n        return this.view_painter.current_symbol?.dnp ?? false;\n    }\n\n    protected dim_color(color: Color) {\n        // See SCH_PAINTER::getRenderColor, this desaturates the color and\n        // mixes it 50% with the background color. While you might think 50%\n        // alpha would be fine, it ends up showing the grid and other stuff\n        // behind it.\n        color = color.desaturate();\n        return color.mix(this.theme.background, 0.5);\n    }\n\n    protected dim_if_needed(color: Color) {\n        return this.is_dimmed ? this.dim_color(color) : color;\n    }\n\n    protected determine_stroke(\n        layer: ViewLayer,\n        item: schematic_items.GraphicItem,\n    ) {\n        const width = item.stroke?.width || this.gfx.state.stroke_width;\n\n        if (width < 0) {\n            return { width: 0, color: null };\n        }\n\n        const stroke_type = item.stroke?.type ?? \"none\";\n\n        if (stroke_type == \"none\") {\n            return { width: 0, color: null };\n        }\n\n        const default_stroke =\n            layer.name == LayerNames.symbol_foreground\n                ? this.theme.component_outline\n                : this.theme.note;\n\n        const color = this.dim_if_needed(item.stroke?.color ?? default_stroke);\n\n        return { width, color };\n    }\n\n    protected determine_fill(\n        layer: ViewLayer,\n        item: schematic_items.GraphicItem,\n    ) {\n        const fill_type = item.fill?.type ?? \"none\";\n\n        if (fill_type == \"none\") {\n            return null;\n        }\n\n        if (\n            fill_type == \"background\" &&\n            layer.name != LayerNames.symbol_background\n        ) {\n            return null;\n        }\n\n        let color;\n\n        switch (fill_type) {\n            case \"background\":\n                color = this.theme.component_body;\n                break;\n            case \"outline\":\n                color = this.theme.component_outline;\n                break;\n            case \"color\":\n                color = item.fill!.color;\n                break;\n        }\n\n        return this.dim_if_needed(color);\n    }\n}\n", "/*\n    Copyright (c) 2023 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nimport { Color } from \"../../../base/color\";\nimport { Angle, Vec2 } from \"../../../base/math\";\nimport * as schematic_items from \"../../../kicad/schematic\";\nimport { SchText, StrokeFont } from \"../../../kicad/text\";\nimport { LayerNames, ViewLayer } from \"../layers\";\nimport { SchematicItemPainter } from \"./base\";\n\n/**\n * Implements KiCAD rendering logic for net, global, and hierarchical labels.\n *\n * This is similar in scope to the SymbolPin, EDAText class and its children,\n * it's designed to recreate KiCAD's behavior as closely as possible.\n *\n * This logic is adapted from:\n * - SCH_LABEL_BASE\n * - SCH_LABEL\n * - SCH_PAINTER::draw( const SCH_LABEL )\n * - SCH_PAINTER::draw( const SCH_HIERLABEL )\n * - SCH_PAINTER::draw( const SCH_TEXT )\n *\n */\n\nexport class LabelPainter extends SchematicItemPainter {\n    override classes: any[] = [];\n\n    override layers_for(item: schematic_items.Label) {\n        return [LayerNames.label];\n    }\n\n    override paint(layer: ViewLayer, l: schematic_items.Label) {\n        if (l.effects.hide) {\n            return;\n        }\n\n        const schtext = new SchText(l.shown_text);\n        schtext.apply_at(l.at);\n        schtext.apply_effects(l.effects);\n\n        this.after_apply(l, schtext);\n\n        if (l.at.rotation == 0 || l.at.rotation == 180) {\n            schtext.text_angle.degrees = 0;\n        } else if (l.at.rotation == 90 || l.at.rotation == 270) {\n            schtext.text_angle.degrees = 90;\n        }\n\n        const pos = schtext.text_pos.add(\n            this.get_schematic_text_offset(l, schtext),\n        );\n\n        this.gfx.state.push();\n        this.gfx.state.stroke = this.color;\n        this.gfx.state.fill = this.color;\n\n        StrokeFont.default().draw(\n            this.gfx,\n            schtext.shown_text,\n            pos,\n            schtext.attributes,\n        );\n\n        const shape_pts = this.create_shape(l, schtext);\n        if (shape_pts) {\n            this.gfx.line(shape_pts, schtext.attributes.stroke_width / 10000);\n        }\n\n        this.gfx.state.pop();\n    }\n\n    create_shape(l: schematic_items.Label, schtext: SchText): Vec2[] {\n        return [];\n    }\n\n    get color() {\n        return new Color(1, 0, 1, 1);\n    }\n\n    after_apply(l: schematic_items.Label, schtext: SchText) {}\n\n    get_text_offset(schtext: SchText): number {\n        // From SCH_TEXT::GetTextOffset, turns out SCH_LABEL is the only\n        // subclass that uses it.\n        return Math.round(\n            schematic_items.DefaultValues.text_offset_ratio *\n                schtext.text_size.x,\n        );\n    }\n\n    get_box_expansion(schtext: SchText): number {\n        // From SCH_LABEL_BASE::GetLabelBoxExpansion\n        return Math.round(\n            schematic_items.DefaultValues.label_size_ratio *\n                schtext.text_size.y,\n        );\n    }\n\n    /**\n     * The offset between the schematic item's position and the actual text\n     * position\n     *\n     * This takes into account orientation and any additional distance to make\n     * the text readable (such as offsetting it from the top of a wire).\n     */\n    get_schematic_text_offset(\n        l: schematic_items.Label,\n        schtext: SchText,\n    ): Vec2 {\n        // From SCH_LABEL_BASE::GetSchematicTextOffset, although it is defined\n        // on SCH_TEXT (which SCH_LABEL inherits from), but only SCH_LABEL\n        // classes actually do anything with it.\n        const dist = Math.round(\n            this.get_text_offset(schtext) +\n                schtext.get_effective_text_thickness(),\n        );\n\n        if (schtext.text_angle.is_vertical) {\n            return new Vec2(-dist, 0);\n        } else {\n            return new Vec2(0, -dist);\n        }\n    }\n}\n\nexport class NetLabelPainter extends LabelPainter {\n    override classes: any[] = [schematic_items.NetLabel];\n\n    override get color() {\n        return this.theme.label_local;\n    }\n}\n\nexport class GlobalLabelPainter extends LabelPainter {\n    override classes: any[] = [schematic_items.GlobalLabel];\n\n    override get color() {\n        return this.theme.label_global;\n    }\n\n    override get_schematic_text_offset(\n        l: schematic_items.Label,\n        schtext: SchText,\n    ): Vec2 {\n        const label = l as schematic_items.GlobalLabel;\n        const text_height = schtext.text_size.y;\n        let horz = this.get_box_expansion(schtext);\n\n        // Magic number from SCH_GLOBALLABEL::GetSchematicTextOffset,\n        // offsets the center of the text to accomodate overbars.\n        let vert = text_height * 0.0715;\n\n        if ([\"input\", \"bidirectional\", \"tri_state\"].includes(label.shape)) {\n            // accommodate triangular shaped tail\n            horz += text_height * 0.75;\n        }\n\n        horz = Math.round(horz);\n        vert = Math.round(vert);\n\n        switch (l.at.rotation) {\n            case 0:\n                return new Vec2(horz, vert);\n            case 90:\n                return new Vec2(vert, -horz);\n            case 180:\n                return new Vec2(-horz, vert);\n            case 270:\n                return new Vec2(vert, horz);\n            default:\n                throw new Error(`Unexpected label rotation ${l.at.rotation}`);\n        }\n    }\n\n    /**\n     * Creates the label's outline shape\n     * Adapted from SCH_GLOBALLABEL::CreateGraphicShape\n     */\n    override create_shape(l: schematic_items.Label, schtext: SchText): Vec2[] {\n        const label = l as schematic_items.GlobalLabel;\n        const pos = schtext.text_pos;\n        const angle = Angle.from_degrees(l.at.rotation + 180);\n        const text_height = schtext.text_size.y;\n        const margin = this.get_box_expansion(schtext);\n        const half_size = text_height / 2 + margin;\n        const symbol_length = schtext.get_text_box().w + 2 * margin;\n        const stroke_width = schtext.attributes.stroke_width;\n\n        const x = symbol_length + stroke_width + 3;\n        const y = half_size + stroke_width + 3;\n\n        let pts = [\n            new Vec2(0, 0),\n            new Vec2(0, -y),\n            new Vec2(-x, -y),\n            new Vec2(-x, 0),\n            new Vec2(-x, y),\n            new Vec2(0, y),\n            new Vec2(0, 0),\n        ];\n\n        const offset = new Vec2();\n\n        switch (label.shape) {\n            case \"input\":\n                offset.x = -half_size;\n                pts[0]!.x += half_size;\n                pts[6]!.x += half_size;\n                break;\n            case \"output\":\n                pts[3]!.x -= half_size;\n                break;\n            case \"bidirectional\":\n            case \"tri_state\":\n                offset.x = -half_size;\n                pts[0]!.x += half_size;\n                pts[6]!.x += half_size;\n                pts[3]!.x -= half_size;\n                break;\n            default:\n                break;\n        }\n\n        pts = pts.map((pt) => {\n            return pt\n                .add(offset)\n                .rotate(angle)\n                .add(pos)\n                .multiply(1 / 10000);\n        });\n\n        return pts;\n    }\n}\n\nexport class HierarchicalLabelPainter extends LabelPainter {\n    override classes: any[] = [schematic_items.HierarchicalLabel];\n\n    override get color() {\n        return this.theme.label_hier;\n    }\n\n    override after_apply(\n        l: schematic_items.HierarchicalLabel,\n        schtext: SchText,\n    ) {\n        schtext.v_align = \"center\";\n    }\n\n    override get_schematic_text_offset(\n        l: schematic_items.Label,\n        schtext: SchText,\n    ): Vec2 {\n        const dist = Math.round(\n            this.get_text_offset(schtext) + schtext.text_width,\n        );\n\n        switch (l.at.rotation) {\n            case 0:\n                return new Vec2(dist, 0);\n            case 90:\n                return new Vec2(0, -dist);\n            case 180:\n                return new Vec2(-dist, 0);\n            case 270:\n                return new Vec2(0, dist);\n            default:\n                throw new Error(`Unexpected label rotation ${l.at.rotation}`);\n        }\n    }\n\n    /**\n     * Creates the label's outline shape\n     * Adapted from SCH_HIERLABEL::CreateGraphicShape and TemplateShape.\n     */\n    override create_shape(\n        label: schematic_items.HierarchicalLabel,\n        schtext: SchText,\n    ): Vec2[] {\n        const pos = schtext.text_pos;\n        const angle = Angle.from_degrees(label.at.rotation);\n        const s = schtext.text_width;\n\n        let pts: Vec2[];\n\n        switch (label.shape) {\n            case \"output\":\n                pts = [\n                    new Vec2(0, s / 2),\n                    new Vec2(s / 2, s / 2),\n                    new Vec2(s, 0),\n                    new Vec2(s / 2, -s / 2),\n                    new Vec2(0, -s / 2),\n                    new Vec2(0, s / 2),\n                ];\n                break;\n\n            case \"input\":\n                pts = [\n                    new Vec2(s, s / 2),\n                    new Vec2(s / 2, s / 2),\n                    new Vec2(0, 0),\n                    new Vec2(s / 2, -s / 2),\n                    new Vec2(s, -s / 2),\n                    new Vec2(s, s / 2),\n                ];\n                break;\n\n            case \"bidirectional\":\n            case \"tri_state\":\n                pts = [\n                    new Vec2(s / 2, s / 2),\n                    new Vec2(s, 0),\n                    new Vec2(s / 2, -s / 2),\n                    new Vec2(0, 0),\n                    new Vec2(s / 2, s / 2),\n                ];\n                break;\n\n            case \"passive\":\n            default:\n                pts = [\n                    new Vec2(0, s / 2),\n                    new Vec2(s, s / 2),\n                    new Vec2(s, -s / 2),\n                    new Vec2(0, -s / 2),\n                    new Vec2(0, s / 2),\n                ];\n                break;\n        }\n\n        pts = pts.map((pt) => {\n            return pt\n                .rotate(angle)\n                .add(pos)\n                .multiply(1 / 10000);\n        });\n\n        return pts;\n    }\n}\n", "/*\n    Copyright (c) 2023 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nimport { Angle, Matrix3, Vec2 } from \"../../../base/math\";\nimport { Color, Renderer } from \"../../../graphics\";\nimport { Effects } from \"../../../kicad/common\";\nimport * as schematic_items from \"../../../kicad/schematic\";\nimport {\n    EDAText,\n    StrokeFont,\n    type HAlign,\n    type VAlign,\n} from \"../../../kicad/text\";\nimport { LayerNames, ViewLayer } from \"../layers\";\nimport { SchematicItemPainter } from \"./base\";\n\n/**\n * Implements KiCAD rendering logic for symbol pins.\n *\n * This is similar in scope to the EDAText class and its children, it's\n * designed to recreate KiCAD's behavior as closely as possible.\n *\n * The logic here is based a few small bits of LIB_PIN and EDA_ITEM, with the\n * ast majority adapted from SCH_PAINTER::draw( const LIB_PIN, ...) - which is\n * a massive method at over 400 lines!\n *\n */\nexport class PinPainter extends SchematicItemPainter {\n    override classes = [schematic_items.PinInstance];\n\n    override layers_for(item: schematic_items.PinInstance) {\n        return [\n            LayerNames.symbol_pin,\n            LayerNames.symbol_foreground,\n            LayerNames.interactive,\n        ];\n    }\n\n    paint(layer: ViewLayer, p: schematic_items.PinInstance) {\n        if (p.definition.hide) {\n            return;\n        }\n\n        const pin: PinInfo = {\n            pin: p,\n            def: p.definition,\n            position: p.definition.at.position.copy(),\n            orientation: angle_to_orientation(p.definition.at.rotation),\n        };\n\n        const current_symbol_transform =\n            this.view_painter.current_symbol_transform!;\n\n        const color = this.dim_if_needed(this.theme.pin);\n\n        PinPainter.apply_symbol_transformations(pin, current_symbol_transform);\n\n        this.gfx.state.push();\n        this.gfx.state.matrix = Matrix3.identity();\n        this.gfx.state.stroke = color;\n\n        if (\n            layer.name == LayerNames.symbol_pin ||\n            layer.name == LayerNames.interactive\n        ) {\n            this.draw_pin_shape(this.gfx, pin);\n        }\n        if (layer.name == LayerNames.symbol_foreground) {\n            this.draw_name_and_number(this.gfx, pin);\n        }\n\n        this.gfx.state.pop();\n    }\n\n    /**\n     * Applies symbol transformation (rotation, position, mirror).\n     *\n     * KiCAD doesn't directly set the transformation for symbol items, instead,\n     * it indirectly sets them through individual rotations and transforms.\n     * See KiCAD's sch_painter.cpp::orientSymbol.\n     */\n    static apply_symbol_transformations(\n        pin: PinInfo,\n        transforms: {\n            position: Vec2;\n            rotations: number;\n            mirror_x: boolean;\n            mirror_y: boolean;\n        },\n    ) {\n        for (let i = 0; i < transforms.rotations; i++) {\n            this.rotate(pin, new Vec2(0, 0), true);\n        }\n\n        if (transforms.mirror_x) {\n            this.mirror_vertically(pin, new Vec2(0, 0));\n        }\n\n        if (transforms.mirror_y) {\n            this.mirror_horizontally(pin, new Vec2(0, 0));\n        }\n\n        const parent_pos = transforms.position.multiply(new Vec2(1, -1));\n\n        pin.position = pin.position.add(parent_pos).multiply(new Vec2(1, -1));\n    }\n\n    /**\n     * Rotate the pin\n     *\n     * Based on LIB_PIN::Rotate, used by apply_symbol_transformations.\n     */\n    static rotate(pin: PinInfo, center: Vec2, ccw = false) {\n        const angle = Angle.from_degrees(ccw ? -90 : 90);\n        pin.position = angle.rotate_point(pin.position, center);\n\n        if (ccw) {\n            switch (pin.orientation) {\n                case \"right\":\n                    pin.orientation = \"up\";\n                    break;\n                case \"up\":\n                    pin.orientation = \"left\";\n                    break;\n                case \"left\":\n                    pin.orientation = \"down\";\n                    break;\n                case \"down\":\n                    pin.orientation = \"right\";\n                    break;\n            }\n        } else {\n            switch (pin.orientation) {\n                case \"right\":\n                    pin.orientation = \"down\";\n                    break;\n                case \"down\":\n                    pin.orientation = \"left\";\n                    break;\n                case \"left\":\n                    pin.orientation = \"up\";\n                    break;\n                case \"up\":\n                    pin.orientation = \"right\";\n                    break;\n            }\n        }\n    }\n\n    static mirror_horizontally(pin: PinInfo, center: Vec2) {\n        pin.position.x -= center.x;\n        pin.position.x *= -1;\n        pin.position.x += center.x;\n\n        if (pin.orientation == \"right\") {\n            pin.orientation = \"left\";\n        } else if (pin.orientation == \"left\") {\n            pin.orientation = \"right\";\n        }\n    }\n\n    static mirror_vertically(pin: PinInfo, center: Vec2) {\n        pin.position.y -= center.y;\n        pin.position.y *= -1;\n        pin.position.y += center.y;\n\n        if (pin.orientation == \"up\") {\n            pin.orientation = \"down\";\n        } else if (pin.orientation == \"down\") {\n            pin.orientation = \"up\";\n        }\n    }\n\n    /**\n     * Draws the pin's shape- the pin line along with any additional decoration\n     * depending on pin type.\n     */\n    draw_pin_shape(gfx: Renderer, pin: PinInfo) {\n        const { p0, dir } = PinShapeInternals.stem(\n            pin.position,\n            pin.orientation,\n            pin.def.length,\n        );\n\n        PinShapeInternals.draw(\n            gfx,\n            pin.def.type,\n            pin.def.shape,\n            pin.position,\n            p0,\n            dir,\n        );\n    }\n\n    /**\n     * Draw the pin's name and number, if they're visible.\n     */\n    draw_name_and_number(gfx: Renderer, pin: PinInfo) {\n        const def = pin.def;\n        const libsym = pin.pin.parent.lib_symbol;\n        const name = def.name.text;\n        const number = def.number.text;\n        const pin_length = def.length;\n        const hide_pin_names = libsym.pin_names.hide || !name || name == \"~\";\n        const hide_pin_numbers =\n            libsym.pin_numbers.hide || !number || number == \"~\";\n        const pin_thickness = schematic_items.DefaultValues.line_width;\n        const pin_name_offset = libsym.pin_names.offset;\n        //  24 mils * ratio\n        // From void SCH_PAINTER::draw( const LIB_PIN *aPin, int aLayer, bool aDimmed )\n        const text_margin =\n            0.6096 * schematic_items.DefaultValues.text_offset_ratio;\n        const num_thickness =\n            def.number.effects.font.thickness || pin_thickness;\n        const name_thickness =\n            def.number.effects.font.thickness || pin_thickness;\n\n        let name_placement;\n        let num_placement;\n\n        if (pin_name_offset > 0) {\n            // Names are placed inside, numbers are placed above.\n            name_placement = hide_pin_names\n                ? undefined\n                : PinLabelInternals.place_inside(\n                      pin_name_offset,\n                      name_thickness,\n                      pin_length,\n                      pin.orientation,\n                  );\n            num_placement = hide_pin_numbers\n                ? undefined\n                : PinLabelInternals.place_above(\n                      text_margin,\n                      pin_thickness,\n                      num_thickness,\n                      pin_length,\n                      pin.orientation,\n                  );\n        } else {\n            // Names are placed above, number are placed below.\n            name_placement = hide_pin_names\n                ? undefined\n                : PinLabelInternals.place_above(\n                      text_margin,\n                      pin_thickness,\n                      name_thickness,\n                      pin_length,\n                      pin.orientation,\n                  );\n            num_placement = hide_pin_numbers\n                ? undefined\n                : PinLabelInternals.place_below(\n                      text_margin,\n                      pin_thickness,\n                      name_thickness,\n                      pin_length,\n                      pin.orientation,\n                  );\n        }\n\n        if (name_placement) {\n            PinLabelInternals.draw(\n                gfx,\n                name,\n                pin.position,\n                name_placement,\n                def.name.effects,\n                gfx.state.stroke,\n            );\n        }\n\n        if (num_placement) {\n            PinLabelInternals.draw(\n                gfx,\n                number,\n                pin.position,\n                num_placement,\n                def.number.effects,\n                gfx.state.stroke,\n            );\n        }\n    }\n}\n\nexport type PinInfo = {\n    pin: schematic_items.PinInstance;\n    def: schematic_items.PinDefinition;\n    position: Vec2;\n    orientation: PinOrientation;\n};\ntype PinOrientation = \"right\" | \"left\" | \"up\" | \"down\";\n\n/**\n * Converts a rotation to a pin orientation.\n *\n * KiCAD saves pin orientation as a rotation, but presents it to the UI and\n * does placement based on the \"orientation\" which is simply left, right, up,\n * or down.\n */\nfunction angle_to_orientation(angle_deg: number): PinOrientation {\n    switch (angle_deg) {\n        case 0:\n            return \"right\";\n        case 90:\n            return \"up\";\n        case 180:\n            return \"left\";\n        case 270:\n            return \"down\";\n        default:\n            throw new Error(`Unexpected pin angle ${angle_deg}`);\n    }\n}\n\n/**\n * Internals used to draw the pin's shape.\n *\n * Note: only exported for the benefit of tests!\n */\nexport const PinShapeInternals = {\n    stem(position: Vec2, orientation: PinOrientation, length: number) {\n        const p0 = new Vec2();\n        const dir = new Vec2();\n\n        switch (orientation) {\n            case \"up\":\n                p0.set(position.x, position.y - length);\n                dir.set(0, 1);\n                break;\n            case \"down\":\n                p0.set(position.x, position.y + length);\n                dir.set(0, -1);\n                break;\n            case \"left\":\n                p0.set(position.x - length, position.y);\n                dir.set(1, 0);\n                break;\n            case \"right\":\n                p0.set(position.x + length, position.y);\n                dir.set(-1, 0);\n                break;\n        }\n\n        return { p0: p0, dir: dir };\n    },\n\n    draw(\n        gfx: Pick<Renderer, \"line\" | \"circle\" | \"arc\">,\n        electrical_type: schematic_items.PinElectricalType,\n        shape: schematic_items.PinShape,\n        position: Vec2,\n        p0: Vec2,\n        dir: Vec2,\n    ) {\n        const radius = schematic_items.DefaultValues.pinsymbol_size;\n        const diam = radius * 2;\n        const nc_radius = schematic_items.DefaultValues.target_pin_radius;\n\n        if (electrical_type == \"no_connect\") {\n            gfx.line([p0, position]);\n            gfx.line([\n                position.add(new Vec2(-nc_radius, -nc_radius)),\n                position.add(new Vec2(nc_radius, nc_radius)),\n            ]);\n            gfx.line([\n                position.add(new Vec2(nc_radius, -nc_radius)),\n                position.add(new Vec2(-nc_radius, nc_radius)),\n            ]);\n            return;\n        }\n\n        const clock_notch = () => {\n            if (!dir.y) {\n                gfx.line([\n                    p0.add(new Vec2(0, radius)),\n                    p0.add(new Vec2(-dir.x * radius, 0)),\n                    p0.add(new Vec2(0, -radius)),\n                ]);\n            } else {\n                gfx.line([\n                    p0.add(new Vec2(radius, 0)),\n                    p0.add(new Vec2(0, -dir.y * radius)),\n                    p0.add(new Vec2(-radius, 0)),\n                ]);\n            }\n        };\n\n        const low_in_tri = () => {\n            if (!dir.y) {\n                gfx.line([\n                    p0.add(new Vec2(dir.x, 0).multiply(diam)),\n                    p0.add(new Vec2(dir.x, -1).multiply(diam)),\n                    p0,\n                ]);\n            } else {\n                gfx.line([\n                    p0.add(new Vec2(0, dir.y).multiply(diam)),\n                    p0.add(new Vec2(-1, dir.y).multiply(diam)),\n                    p0,\n                ]);\n            }\n        };\n\n        switch (shape) {\n            case \"line\":\n                gfx.line([p0, position]);\n                return;\n            case \"inverted\":\n                gfx.arc(p0.add(dir.multiply(radius)), radius);\n                gfx.line([p0.add(dir.multiply(diam)), position]);\n                return;\n            case \"inverted_clock\":\n                gfx.arc(p0.add(dir.multiply(radius)), radius);\n                gfx.line([p0.add(dir.multiply(diam)), position]);\n                clock_notch();\n                return;\n            case \"clock\":\n                gfx.line([p0, position]);\n                clock_notch();\n                return;\n            case \"clock_low\":\n            case \"edge_clock_high\":\n                gfx.line([p0, position]);\n                clock_notch();\n                low_in_tri();\n                break;\n            case \"input_low\":\n                gfx.line([p0, position]);\n                low_in_tri();\n                break;\n            case \"output_low\":\n                gfx.line([p0, position]);\n\n                if (!dir.y) {\n                    gfx.line([\n                        p0.sub(new Vec2(0, diam)),\n                        p0.add(new Vec2(dir.x * diam, 0)),\n                    ]);\n                } else {\n                    gfx.line([\n                        p0.sub(new Vec2(diam, 0)),\n                        p0.add(new Vec2(0, dir.y * diam)),\n                    ]);\n                }\n                break;\n            case \"non_logic\":\n                gfx.line([p0, position]);\n                gfx.line([\n                    p0.sub(\n                        new Vec2(dir.x + dir.y, dir.y - dir.x).multiply(radius),\n                    ),\n                    p0.add(\n                        new Vec2(dir.x + dir.y, dir.y - dir.x).multiply(radius),\n                    ),\n                ]);\n                gfx.line([\n                    p0.sub(\n                        new Vec2(dir.x - dir.y, dir.y + dir.x).multiply(radius),\n                    ),\n                    p0.add(\n                        new Vec2(dir.x - dir.y, dir.y + dir.x).multiply(radius),\n                    ),\n                ]);\n                break;\n        }\n    },\n};\n\ntype PinLabelPlacement = {\n    offset: Vec2;\n    h_align: HAlign;\n    v_align: VAlign;\n    orientation: PinOrientation;\n};\n\n/**\n * Internals used to draw the pin's labels (name and number).\n *\n * Note: only exported for the benefit of tests!\n */\nexport const PinLabelInternals = {\n    /**\n     * Handles rotating the label position offset based on the pin's orientation\n     */\n    orient_label(\n        offset: Vec2,\n        orientation: PinOrientation,\n        h_align: HAlign,\n        v_align: VAlign,\n    ): PinLabelPlacement {\n        switch (orientation) {\n            case \"right\":\n                break;\n            case \"left\":\n                offset.x *= -1;\n                if (h_align == \"left\") {\n                    h_align = \"right\";\n                }\n                break;\n            case \"up\":\n                offset = new Vec2(offset.y, -offset.x);\n                break;\n            case \"down\":\n                offset = new Vec2(offset.y, offset.x);\n                if (h_align == \"left\") {\n                    h_align = \"right\";\n                }\n                break;\n        }\n        return {\n            offset: offset,\n            h_align: h_align,\n            v_align: v_align,\n            orientation: orientation,\n        };\n    },\n\n    /**\n     * Places a label inside the symbol body- or to put it another way,\n     * places it to the left side of a pin that's on the right side of a symbol\n     */\n    place_inside(\n        label_offset: number,\n        thickness: number,\n        pin_length: number,\n        orientation: PinOrientation,\n    ): PinLabelPlacement {\n        const offset = new Vec2(label_offset - thickness / 2 + pin_length, 0);\n        return this.orient_label(offset, orientation, \"left\", \"center\");\n    },\n\n    /**\n     * Places a label above the pin\n     */\n    place_above(\n        text_margin: number,\n        pin_thickness: number,\n        text_thickness: number,\n        pin_length: number,\n        orientation: PinOrientation,\n    ): PinLabelPlacement {\n        const offset = new Vec2(\n            pin_length / 2,\n            -(text_margin + pin_thickness / 2 + text_thickness / 2),\n        );\n        return this.orient_label(offset, orientation, \"center\", \"bottom\");\n    },\n\n    /**\n     * Places a label below the pin\n     */\n    place_below(\n        text_margin: number,\n        pin_thickness: number,\n        text_thickness: number,\n        pin_length: number,\n        orientation: PinOrientation,\n    ): PinLabelPlacement {\n        const offset = new Vec2(\n            pin_length / 2,\n            text_margin + pin_thickness / 2 + text_thickness / 2,\n        );\n        return this.orient_label(offset, orientation, \"center\", \"top\");\n    },\n\n    /**\n     * Draw a label\n     *\n     * The placement should be created by calling once of the place_*() methods\n     * first.\n     *\n     */\n    draw(\n        gfx: Renderer,\n        text: string,\n        position: Vec2,\n        placement: PinLabelPlacement,\n        effects: Effects,\n        color: Color,\n    ) {\n        const edatext = new EDAText(text);\n\n        edatext.apply_effects(effects);\n        edatext.attributes.h_align = placement.h_align;\n        edatext.attributes.v_align = placement.v_align;\n        edatext.attributes.color = color;\n        edatext.text_pos = position.add(placement.offset).multiply(10000);\n\n        switch (placement.orientation) {\n            case \"up\":\n            case \"down\":\n                edatext.text_angle = Angle.from_degrees(90);\n                break;\n            case \"left\":\n            case \"right\":\n                edatext.text_angle = Angle.from_degrees(0);\n                break;\n        }\n\n        StrokeFont.default().draw(\n            gfx,\n            edatext.shown_text,\n            edatext.text_pos,\n            edatext.attributes,\n        );\n    },\n};\n", "/*\n    Copyright (c) 2023 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nimport type { Color } from \"../base/color\";\nimport { Angle, Matrix3, Vec2 } from \"../base/math\";\nimport { RenderLayer, Renderer } from \"./renderer\";\nimport { Arc, Circle, Polygon, Polyline, type Shape } from \"./shapes\";\n\nexport class NullRenderLayer extends RenderLayer {\n    shapes: Shape[] = [];\n\n    override dispose(): void {\n        this.clear();\n    }\n\n    override clear(): void {\n        this.shapes = [];\n    }\n\n    override render(camera: Matrix3): void {}\n}\n\nexport class NullRenderer extends Renderer {\n    #active_layer: NullRenderLayer | null;\n\n    constructor() {\n        super(null!);\n    }\n\n    override set background_color(color: Color) {}\n\n    override async setup() {}\n\n    override async dispose() {}\n\n    override update_canvas_size(): void {}\n\n    override clear_canvas(): void {}\n\n    override start_layer(name: string): void {\n        this.#active_layer = new NullRenderLayer(this, name);\n    }\n\n    override end_layer(): NullRenderLayer {\n        return this.#active_layer!;\n    }\n\n    override get layers(): Iterable<RenderLayer> {\n        return [];\n    }\n\n    override circle(\n        circle_or_center: Circle | Vec2,\n        radius?: number,\n        color?: Color,\n    ): void {\n        this.#active_layer!.shapes.push(\n            super.prep_circle(circle_or_center, radius, color),\n        );\n    }\n\n    override arc(\n        arc_or_center: Arc | Vec2,\n        radius?: number,\n        start_angle?: Angle,\n        end_angle?: Angle,\n        width?: number,\n        color?: Color,\n    ): void {\n        this.#active_layer!.shapes.push(\n            super.prep_arc(\n                arc_or_center,\n                radius,\n                start_angle,\n                end_angle,\n                width,\n                color,\n            ),\n        );\n    }\n\n    override line(\n        line_or_points: Polyline | Vec2[],\n        width?: number,\n        color?: Color,\n    ): void {\n        this.#active_layer!.shapes.push(\n            super.prep_line(line_or_points, width, color),\n        );\n    }\n\n    override polygon(polygon_or_points: Polygon | Vec2[], color?: Color): void {\n        this.#active_layer!.shapes.push(\n            super.prep_polygon(polygon_or_points, color),\n        );\n    }\n\n    override remove_layer(layer: RenderLayer) {}\n}\n", "/*\n    Copyright (c) 2023 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nimport { BBox, Matrix3, Vec2 } from \"../../../base/math\";\nimport { NullRenderer } from \"../../../graphics/null-renderer\";\nimport type { SchematicTheme } from \"../../../kicad\";\nimport * as schematic_items from \"../../../kicad/schematic\";\nimport { LayerNames, LayerSet, ViewLayer } from \"../layers\";\nimport { SchematicPainter } from \"../painter\";\nimport { SchematicItemPainter } from \"./base\";\n\nexport class LibSymbolPainter extends SchematicItemPainter {\n    classes = [schematic_items.LibSymbol];\n\n    layers_for(item: schematic_items.LibSymbol) {\n        return [\n            LayerNames.symbol_background,\n            LayerNames.symbol_foreground,\n            LayerNames.symbol_field,\n        ];\n    }\n\n    paint(layer: ViewLayer, s: schematic_items.LibSymbol, body_style = 1) {\n        if (\n            ![\n                LayerNames.symbol_background,\n                LayerNames.symbol_foreground,\n                LayerNames.interactive,\n            ].includes(layer.name as LayerNames)\n        ) {\n            return;\n        }\n\n        // Unit 0 has graphic common to all units. See LIB_SYMBOL::GetPins and\n        // LIB_ITEM::m_unit.\n        const common_unit = s.units.get(0);\n        if (common_unit) {\n            this.#paint_unit(layer, common_unit, body_style);\n        }\n\n        const si = this.view_painter.current_symbol;\n\n        const symbol_unit = s.units.get(si?.unit || 1);\n\n        if (symbol_unit) {\n            this.#paint_unit(layer, symbol_unit, body_style);\n        }\n    }\n\n    #paint_unit(\n        layer: ViewLayer,\n        unit: schematic_items.LibSymbol[],\n        body_style = 1,\n    ) {\n        for (const sym of unit) {\n            if (sym.style > 0 && body_style != sym.style) {\n                continue;\n            }\n\n            for (const g of sym.drawings) {\n                this.view_painter.paint_item(layer, g);\n            }\n        }\n    }\n}\n\nexport class SchematicSymbolPainter extends SchematicItemPainter {\n    classes = [schematic_items.SchematicSymbol];\n\n    layers_for(item: schematic_items.SchematicSymbol) {\n        const layers = [\n            LayerNames.interactive,\n            LayerNames.symbol_foreground,\n            LayerNames.symbol_background,\n            LayerNames.symbol_field,\n            LayerNames.symbol_pin,\n        ];\n\n        if (item.dnp) {\n            layers.push(LayerNames.marks);\n        }\n\n        return layers;\n    }\n\n    paint(layer: ViewLayer, si: schematic_items.SchematicSymbol) {\n        if (layer.name == LayerNames.interactive && si.lib_symbol.power) {\n            // Don't draw power symbols on the interactive layer.\n            return;\n        }\n\n        const transform = get_symbol_transform(si);\n\n        this.view_painter.current_symbol = si;\n        this.view_painter.current_symbol_transform = transform;\n\n        this.gfx.state.push();\n        this.gfx.state.matrix = Matrix3.translation(\n            si.at.position.x,\n            si.at.position.y,\n        );\n        this.gfx.state.multiply(transform.matrix);\n\n        const body_style = si.convert ?? 1;\n\n        this.view_painter.paint_item(layer, si.lib_symbol, body_style);\n\n        this.gfx.state.pop();\n\n        if (\n            [\n                LayerNames.symbol_pin,\n                LayerNames.symbol_foreground,\n                LayerNames.interactive,\n            ].includes(layer.name as LayerNames)\n        ) {\n            for (const pin of si.unit_pins) {\n                this.view_painter.paint_item(layer, pin);\n            }\n        }\n\n        if (\n            layer.name == LayerNames.symbol_field ||\n            layer.name == LayerNames.interactive\n        ) {\n            for (const [_, p] of si.properties) {\n                this.view_painter.paint_item(layer, p);\n            }\n        }\n\n        if (si.dnp && layer.name == LayerNames.marks) {\n            const bbox = get_symbol_body_and_pins_bbox(this.theme, si);\n            const width = schematic_items.DefaultValues.line_width * 3;\n            const color = this.theme.erc_error;\n\n            this.gfx.line([bbox.top_left, bbox.bottom_right], width, color);\n            this.gfx.line([bbox.bottom_left, bbox.top_right], width, color);\n        }\n\n        this.view_painter.current_symbol = undefined;\n    }\n}\n\nexport type SymbolTransform = {\n    matrix: Matrix3;\n    position: Vec2;\n    rotations: number;\n    mirror_x: boolean;\n    mirror_y: boolean;\n};\n\n/**\n * Determines the symbol position, orientation, and mirroring\n *\n * This is based on SCH_PAINTER::orientSymbol, where KiCAD does some fun logic\n * to place a symbol instance. This tries to replicate that.\n */\nfunction get_symbol_transform(\n    symbol: schematic_items.SchematicSymbol,\n): SymbolTransform {\n    // Note: KiCAD uses a 2x2 transformation matrix for symbol orientation. It's\n    // literally the only place that uses this wacky matrix. We approximate it\n    // with carefully crafted Matrix3s. KiCAD's symbol matrix is defined as\n    //      [x1, x2]\n    //      [y1, y2]\n    // which cooresponds to a Matrix3 of\n    //      [x1, x2, 0]\n    //      [x1, y2, 0]\n    //      [0,   0, 1]\n    const zero_deg_matrix = new Matrix3([1, 0, 0, 0, -1, 0, 0, 0, 1]); // [1, 0, 0, -1]\n    const ninety_deg_matrix = new Matrix3([0, -1, 0, -1, 0, 0, 0, 0, 1]); // [0, -1, -1, 0]\n    const one_eighty_deg_matrix = new Matrix3([-1, 0, 0, 0, 1, 0, 0, 0, 1]); // [-1, 0, 0, 1]\n    const two_seventy_deg_matrix = new Matrix3([0, 1, 0, 1, 0, 0, 0, 0, 1]); // [0, 1, 1, 0]\n    let rotations = 0;\n\n    let matrix = zero_deg_matrix;\n    if (symbol.at.rotation == 0) {\n        // leave matrix as is\n    } else if (symbol.at.rotation == 90) {\n        rotations = 1;\n        matrix = ninety_deg_matrix;\n    } else if (symbol.at.rotation == 180) {\n        rotations = 2;\n        matrix = one_eighty_deg_matrix;\n    } else if (symbol.at.rotation == 270) {\n        rotations = 3;\n        matrix = two_seventy_deg_matrix;\n    } else {\n        throw new Error(`unexpected rotation ${symbol.at.rotation}`);\n    }\n\n    if (symbol.mirror == \"y\") {\n        // * [-1, 0, 0, 1]\n        const x1 = matrix.elements[0]! * -1;\n        const y1 = matrix.elements[3]! * -1;\n        const x2 = matrix.elements[1]!;\n        const y2 = matrix.elements[4]!;\n        matrix.elements[0] = x1;\n        matrix.elements[1] = x2;\n        matrix.elements[3] = y1;\n        matrix.elements[4] = y2;\n    } else if (symbol.mirror == \"x\") {\n        // * [1, 0, 0, -1]\n        const x1 = matrix.elements[0]!;\n        const y1 = matrix.elements[3]!;\n        const x2 = matrix.elements[1]! * -1;\n        const y2 = matrix.elements[4]! * -1;\n        matrix.elements[0] = x1;\n        matrix.elements[1] = x2;\n        matrix.elements[3] = y1;\n        matrix.elements[4] = y2;\n    }\n\n    return {\n        matrix: matrix,\n        position: symbol.at.position,\n        rotations: rotations,\n        mirror_x: symbol.mirror == \"x\",\n        mirror_y: symbol.mirror == \"y\",\n    };\n}\n\n/**\n * Determines the bounding box for the given symbol, including only the body\n * and the pins, not any fields or text items.\n */\nfunction get_symbol_body_and_pins_bbox(\n    theme: SchematicTheme,\n    si: schematic_items.SchematicSymbol,\n): BBox {\n    const gfx = new NullRenderer();\n    const layerset = new LayerSet(theme);\n    const painter = new SchematicPainter(gfx, layerset, theme);\n\n    const layer_names = [\n        LayerNames.symbol_foreground,\n        LayerNames.symbol_background,\n        LayerNames.symbol_pin,\n    ];\n\n    const bboxes = [];\n\n    for (const layer_name of layer_names) {\n        const layer = layerset.by_name(layer_name)!;\n        layer.items.push(si);\n        painter.paint_layer(layer);\n        bboxes.push(layer.bbox);\n    }\n\n    return BBox.combine(bboxes);\n}\n", "/*\n    Copyright (c) 2023 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nimport { Angle, BBox, Arc as MathArc, Matrix3, Vec2 } from \"../../base/math\";\nimport {\n    Arc,\n    Circle,\n    Color,\n    Polygon,\n    Polyline,\n    Renderer,\n} from \"../../graphics\";\nimport type { SchematicTheme } from \"../../kicad\";\nimport * as schematic_items from \"../../kicad/schematic\";\nimport { LibText, SchField, SchText, StrokeFont } from \"../../kicad/text\";\nimport { LayerNames, LayerSet, ViewLayer } from \"./layers\";\nimport { BaseSchematicPainter, SchematicItemPainter } from \"./painters/base\";\nimport {\n    GlobalLabelPainter,\n    HierarchicalLabelPainter,\n    NetLabelPainter,\n} from \"./painters/label\";\nimport { PinPainter } from \"./painters/pin\";\nimport { LibSymbolPainter, SchematicSymbolPainter } from \"./painters/symbol\";\n\nclass RectanglePainter extends SchematicItemPainter {\n    classes = [schematic_items.Rectangle];\n\n    layers_for(item: schematic_items.Rectangle) {\n        return [LayerNames.notes];\n    }\n\n    paint(layer: ViewLayer, r: schematic_items.Rectangle) {\n        const pts = [\n            r.start,\n            new Vec2(r.end.x, r.start.y),\n            r.end,\n            new Vec2(r.start.x, r.end.y),\n            r.start,\n        ];\n\n        this.#fill(layer, r, pts);\n        this.#stroke(layer, r, pts);\n    }\n\n    #stroke(layer: ViewLayer, r: schematic_items.Rectangle, pts: Vec2[]) {\n        const { width, color } = this.determine_stroke(layer, r);\n\n        if (!width || !color) {\n            return;\n        }\n\n        this.gfx.line(\n            new Polyline(\n                pts,\n                r.stroke?.width || this.gfx.state.stroke_width,\n                color,\n            ),\n        );\n    }\n\n    #fill(layer: ViewLayer, r: schematic_items.Rectangle, pts: Vec2[]) {\n        const color = this.determine_fill(layer, r);\n\n        if (!color) {\n            return;\n        }\n\n        this.gfx.polygon(new Polygon(pts, color));\n    }\n}\n\nclass PolylinePainter extends SchematicItemPainter {\n    classes = [schematic_items.Polyline];\n\n    layers_for(item: schematic_items.Polyline) {\n        return [LayerNames.notes];\n    }\n\n    paint(layer: ViewLayer, pl: schematic_items.Polyline) {\n        this.#fill(layer, pl);\n        this.#stroke(layer, pl);\n    }\n\n    #stroke(layer: ViewLayer, pl: schematic_items.Polyline) {\n        const { width, color } = this.determine_stroke(layer, pl);\n\n        if (!width || !color) {\n            return;\n        }\n\n        this.gfx.line(new Polyline(pl.pts, width, color));\n    }\n\n    #fill(layer: ViewLayer, pl: schematic_items.Polyline) {\n        const color = this.determine_fill(layer, pl);\n\n        if (!color) {\n            return;\n        }\n\n        this.gfx.polygon(new Polygon(pl.pts, color));\n    }\n}\n\nclass WirePainter extends SchematicItemPainter {\n    classes = [schematic_items.Wire];\n\n    layers_for(item: schematic_items.Wire) {\n        return [LayerNames.wire];\n    }\n\n    paint(layer: ViewLayer, w: schematic_items.Wire) {\n        this.gfx.line(\n            new Polyline(w.pts, this.gfx.state.stroke_width, this.theme.wire),\n        );\n    }\n}\n\nclass BusPainter extends SchematicItemPainter {\n    classes = [schematic_items.Bus];\n\n    layers_for(item: schematic_items.Bus) {\n        return [LayerNames.wire];\n    }\n\n    paint(layer: ViewLayer, w: schematic_items.Bus) {\n        this.gfx.line(\n            new Polyline(\n                w.pts,\n                schematic_items.DefaultValues.bus_width,\n                this.theme.bus,\n            ),\n        );\n    }\n}\n\nclass BusEntryPainter extends SchematicItemPainter {\n    classes = [schematic_items.BusEntry];\n\n    layers_for(item: schematic_items.BusEntry) {\n        return [LayerNames.junction];\n    }\n\n    paint(layer: ViewLayer, be: schematic_items.BusEntry) {\n        this.gfx.line(\n            new Polyline(\n                [be.at.position, be.at.position.add(be.size)],\n                schematic_items.DefaultValues.wire_width,\n                this.theme.wire,\n            ),\n        );\n    }\n}\n\nclass CirclePainter extends SchematicItemPainter {\n    classes = [schematic_items.Circle];\n\n    layers_for(item: schematic_items.Circle) {\n        return [LayerNames.notes];\n    }\n\n    paint(layer: ViewLayer, c: schematic_items.Circle) {\n        this.#fill(layer, c);\n        this.#stroke(layer, c);\n    }\n\n    #stroke(layer: ViewLayer, c: schematic_items.Circle) {\n        const { width, color } = this.determine_stroke(layer, c);\n\n        if (!width || !color) {\n            return;\n        }\n\n        this.gfx.arc(\n            new Arc(\n                c.center,\n                c.radius,\n                new Angle(0),\n                new Angle(Math.PI * 2),\n                width,\n                color,\n            ),\n        );\n    }\n\n    #fill(layer: ViewLayer, c: schematic_items.Circle) {\n        const color = this.determine_fill(layer, c);\n\n        if (!color) {\n            return;\n        }\n\n        this.gfx.circle(new Circle(c.center, c.radius, color));\n    }\n}\n\nclass ArcPainter extends SchematicItemPainter {\n    classes = [schematic_items.Arc];\n\n    layers_for(item: schematic_items.Arc) {\n        return [LayerNames.notes];\n    }\n\n    paint(layer: ViewLayer, a: schematic_items.Arc) {\n        const arc = MathArc.from_three_points(\n            a.start,\n            a.mid,\n            a.end,\n            a.stroke?.width,\n        );\n\n        this.#fill(layer, a, arc);\n        this.#stroke(layer, a, arc);\n    }\n\n    #stroke(layer: ViewLayer, a: schematic_items.Arc, arc: MathArc) {\n        const { width, color } = this.determine_stroke(layer, a);\n\n        if (!width || !color) {\n            return;\n        }\n\n        this.gfx.arc(\n            new Arc(\n                arc.center,\n                arc.radius,\n                arc.start_angle,\n                arc.end_angle,\n                width,\n                color,\n            ),\n        );\n    }\n\n    #fill(layer: ViewLayer, a: schematic_items.Arc, arc: MathArc) {\n        const color = this.determine_fill(layer, a);\n\n        if (!color) {\n            return;\n        }\n\n        this.gfx.polygon(new Polygon(arc.to_polygon(), color));\n    }\n}\n\nclass JunctionPainter extends SchematicItemPainter {\n    classes = [schematic_items.Junction];\n\n    layers_for(item: schematic_items.Junction) {\n        return [LayerNames.junction];\n    }\n\n    paint(layer: ViewLayer, j: schematic_items.Junction) {\n        const color = this.theme.junction;\n        this.gfx.circle(\n            new Circle(j.at.position, (j.diameter || 1) / 2, color),\n        );\n    }\n}\n\nclass NoConnectPainter extends SchematicItemPainter {\n    classes = [schematic_items.NoConnect];\n\n    layers_for(item: schematic_items.NoConnect) {\n        return [LayerNames.junction];\n    }\n\n    paint(layer: ViewLayer, nc: schematic_items.NoConnect): void {\n        const color = this.theme.no_connect;\n        const width = schematic_items.DefaultValues.line_width;\n        const size = schematic_items.DefaultValues.noconnect_size / 2;\n\n        this.gfx.state.push();\n        this.gfx.state.matrix.translate_self(\n            nc.at.position.x,\n            nc.at.position.y,\n        );\n\n        this.gfx.line(\n            new Polyline(\n                [new Vec2(-size, -size), new Vec2(size, size)],\n                width,\n                color,\n            ),\n        );\n\n        this.gfx.line(\n            new Polyline(\n                [new Vec2(size, -size), new Vec2(-size, size)],\n                width,\n                color,\n            ),\n        );\n\n        this.gfx.state.pop();\n    }\n}\n\nclass TextPainter extends SchematicItemPainter {\n    classes = [schematic_items.Text];\n\n    layers_for(item: schematic_items.Text) {\n        return [LayerNames.notes];\n    }\n\n    paint(layer: ViewLayer, t: schematic_items.Text) {\n        if (t.effects.hide || !t.text) {\n            return;\n        }\n\n        const schtext = new SchText(t.shown_text);\n\n        schtext.apply_at(t.at);\n        schtext.apply_effects(t.effects);\n\n        const font_color = t.effects.font.color;\n        if (font_color.is_transparent_black) {\n            // The color was not specified.\n            const text_color = this.theme.note;\n            schtext.attributes.color = this.dim_if_needed(text_color);\n        } else {\n            schtext.attributes.color = this.dim_if_needed(font_color);\n        }\n\n        this.gfx.state.push();\n        StrokeFont.default().draw(\n            this.gfx,\n            schtext.shown_text,\n            schtext.text_pos,\n            schtext.attributes,\n        );\n        this.gfx.state.pop();\n    }\n}\n\nclass PropertyPainter extends SchematicItemPainter {\n    classes = [schematic_items.Property];\n\n    layers_for(item: schematic_items.Property) {\n        return [LayerNames.symbol_field, LayerNames.interactive];\n    }\n\n    paint(layer: ViewLayer, p: schematic_items.Property) {\n        if (p.effects.hide || !p.text) {\n            return;\n        }\n\n        let color = this.theme.fields;\n        if (p.parent instanceof schematic_items.SchematicSheet) {\n            color = this.theme.sheet_fields;\n        }\n\n        const font_color = p.effects.font.color;\n        if (font_color.is_transparent_black) {\n            // The color was not specified.\n            switch (p.name) {\n                case \"Reference\":\n                    color = this.theme.reference;\n                    break;\n                case \"Value\":\n                    color = this.theme.value;\n                    break;\n                case \"Sheet name\":\n                    color = this.theme.sheet_name;\n                    break;\n                case \"Sheet file\":\n                    color = this.theme.sheet_filename;\n                    break;\n            }\n\n            color = this.dim_if_needed(color);\n        } else {\n            color = this.dim_if_needed(font_color);\n        }\n\n        const parent = p.parent as schematic_items.SchematicSymbol;\n        const transform = this.view_painter.current_symbol_transform;\n        const matrix = transform?.matrix ?? Matrix3.identity();\n\n        let text = p.shown_text;\n\n        if (p.name == \"Reference\" && parent.unit) {\n            text += parent.unit_suffix;\n        }\n\n        const schfield = new SchField(text, {\n            position: parent.at.position.multiply(10000),\n            transform: matrix,\n            is_symbol: parent instanceof schematic_items.SchematicSymbol,\n        });\n\n        schfield.apply_effects(p.effects);\n        schfield.attributes.angle = Angle.from_degrees(p.at.rotation);\n\n        // Position is tricky. KiCAD's parser calls into SCH_FIELD::SetPosition\n        // when parsing which sets the position relative to the parent transform\n        // but KiCanvas doesn't do any of that. So we have to do that transform\n        // here.\n        let rel_position = p.at.position\n            .multiply(10000)\n            .sub(schfield.parent!.position);\n        rel_position = matrix.inverse().transform(rel_position);\n        rel_position = rel_position.add(schfield.parent!.position);\n\n        schfield.text_pos = rel_position;\n\n        const orient = schfield.draw_rotation;\n        const bbox = schfield.bounding_box;\n        const pos = bbox.center;\n\n        schfield.attributes.angle = orient;\n        schfield.attributes.h_align = \"center\";\n        schfield.attributes.v_align = \"center\";\n        schfield.attributes.stroke_width =\n            schfield.get_effective_text_thickness(\n                schematic_items.DefaultValues.line_width * 10000,\n            );\n        schfield.attributes.color = color;\n\n        const bbox_pts = Matrix3.scaling(0.0001, 0.0001).transform_all([\n            bbox.top_left,\n            bbox.top_right,\n            bbox.bottom_right,\n            bbox.bottom_left,\n            bbox.top_left,\n        ]);\n\n        if (layer.name == LayerNames.interactive) {\n            // drawing text is expensive, just draw the bbox for the interactive layer.\n            this.gfx.line(new Polyline(Array.from(bbox_pts), 0.1, Color.white));\n        } else {\n            this.gfx.state.push();\n            StrokeFont.default().draw(\n                this.gfx,\n                schfield.shown_text,\n                pos,\n                schfield.attributes,\n            );\n            this.gfx.state.pop();\n        }\n    }\n}\n\nclass LibTextPainter extends SchematicItemPainter {\n    classes = [schematic_items.LibText];\n\n    layers_for(item: schematic_items.LibText) {\n        return [LayerNames.symbol_foreground];\n    }\n\n    paint(layer: ViewLayer, lt: schematic_items.LibText) {\n        if (lt.effects.hide || !lt.text) {\n            return;\n        }\n\n        const current_symbol_transform =\n            this.view_painter.current_symbol_transform!;\n\n        const libtext = new LibText(lt.shown_text);\n\n        libtext.apply_effects(lt.effects);\n        libtext.apply_at(lt.at);\n        libtext.apply_symbol_transformations(current_symbol_transform);\n\n        libtext.attributes.color = this.dim_if_needed(\n            this.theme.component_outline,\n        );\n\n        // This gets the absolute world coordinates where the text should\n        // be drawn.\n        const pos = libtext.world_pos;\n\n        // world_pos already applies v_align, so set it to center to draw\n        // the text in the right spot.\n        // Note: I'm not sure why it doesn't clear h_align like SchField\n        // does.\n        libtext.attributes.v_align = \"center\";\n\n        this.gfx.state.push();\n        this.gfx.state.matrix = Matrix3.identity();\n\n        StrokeFont.default().draw(\n            this.gfx,\n            libtext.shown_text,\n            pos,\n            libtext.attributes,\n        );\n\n        // this.paint_debug(bbox);\n\n        this.gfx.state.pop();\n    }\n\n    paint_debug(bbox: BBox) {\n        this.gfx.line(\n            Polyline.from_BBox(\n                bbox.scale(1 / 10000),\n                0.127,\n                new Color(0, 0, 1, 1),\n            ),\n        );\n\n        this.gfx.circle(\n            new Circle(\n                bbox.center.multiply(1 / 10000),\n                0.2,\n                new Color(0, 1, 0, 1),\n            ),\n        );\n    }\n}\n\nclass SchematicSheetPainter extends SchematicItemPainter {\n    classes = [schematic_items.SchematicSheet];\n\n    layers_for(item: schematic_items.SchematicSheet) {\n        return [\n            LayerNames.interactive,\n            LayerNames.label,\n            LayerNames.symbol_foreground,\n            LayerNames.symbol_background,\n            LayerNames.symbol_field,\n        ];\n    }\n\n    paint(layer: ViewLayer, ss: schematic_items.SchematicSheet) {\n        const outline_color = this.theme.sheet;\n        const fill_color = this.theme.sheet_background;\n        const bbox = new BBox(\n            ss.at.position.x,\n            ss.at.position.y,\n            ss.size.x,\n            ss.size.y,\n        );\n\n        if (layer.name == LayerNames.interactive) {\n            this.gfx.polygon(Polygon.from_BBox(bbox.grow(3), fill_color));\n        }\n\n        if (layer.name == LayerNames.symbol_background) {\n            this.gfx.polygon(Polygon.from_BBox(bbox, fill_color));\n        }\n\n        if (layer.name == LayerNames.symbol_foreground) {\n            this.gfx.line(\n                Polyline.from_BBox(\n                    bbox,\n                    this.gfx.state.stroke_width,\n                    outline_color,\n                ),\n            );\n        }\n\n        if (layer.name == LayerNames.symbol_field) {\n            for (const property of ss.properties.values()) {\n                this.view_painter.paint_item(layer, property);\n            }\n        }\n\n        if (layer.name == LayerNames.label) {\n            for (const pin of ss.pins) {\n                const label = new schematic_items.HierarchicalLabel();\n                label.at = pin.at.copy();\n                label.effects = pin.effects;\n                label.text = pin.name;\n                label.shape = pin.shape;\n\n                switch (label.at.rotation) {\n                    case 0:\n                        label.at.rotation = 180;\n                        break;\n                    case 180:\n                        label.at.rotation = 0;\n                        break;\n                    case 90:\n                        label.at.rotation = 270;\n                        break;\n                    case 270:\n                        label.at.rotation = 90;\n                        break;\n                }\n\n                if (pin.shape == \"input\") {\n                    label.shape = \"output\";\n                } else if (pin.shape == \"output\") {\n                    label.shape = \"input\";\n                }\n\n                this.view_painter.paint_item(layer, label);\n            }\n        }\n    }\n}\n\nexport class SchematicPainter extends BaseSchematicPainter {\n    override theme: SchematicTheme;\n\n    constructor(gfx: Renderer, layers: LayerSet, theme: SchematicTheme) {\n        super(gfx, layers, theme);\n        this.painter_list = [\n            new RectanglePainter(this, gfx),\n            new PolylinePainter(this, gfx),\n            new WirePainter(this, gfx),\n            new BusPainter(this, gfx),\n            new BusEntryPainter(this, gfx),\n            new CirclePainter(this, gfx),\n            new ArcPainter(this, gfx),\n            new JunctionPainter(this, gfx),\n            new NoConnectPainter(this, gfx),\n            new TextPainter(this, gfx),\n            new LibTextPainter(this, gfx),\n            new PinPainter(this, gfx),\n            new LibSymbolPainter(this, gfx),\n            new PropertyPainter(this, gfx),\n            new SchematicSymbolPainter(this, gfx),\n            new NetLabelPainter(this, gfx),\n            new GlobalLabelPainter(this, gfx),\n            new HierarchicalLabelPainter(this, gfx),\n            new SchematicSheetPainter(this, gfx),\n        ];\n    }\n}\n", "/*\n    Copyright (c) 2023 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nimport { first } from \"../../base/iterator\";\nimport { BBox } from \"../../base/math\";\nimport { is_string } from \"../../base/types\";\nimport { Renderer } from \"../../graphics\";\nimport { Canvas2DRenderer } from \"../../graphics/canvas2d\";\nimport type { SchematicTheme } from \"../../kicad\";\nimport {\n    KicadSch,\n    SchematicSheet,\n    SchematicSymbol,\n} from \"../../kicad/schematic\";\nimport type { ProjectPage } from \"../../kicanvas/project\";\nimport { DocumentViewer } from \"../base/document-viewer\";\nimport { LayerSet } from \"./layers\";\nimport { SchematicPainter } from \"./painter\";\n\nexport class SchematicViewer extends DocumentViewer<\n    KicadSch,\n    SchematicPainter,\n    LayerSet,\n    SchematicTheme\n> {\n    get schematic(): KicadSch {\n        return this.document;\n    }\n\n    override create_renderer(canvas: HTMLCanvasElement): Renderer {\n        const renderer = new Canvas2DRenderer(canvas);\n        renderer.state.fill = this.theme.note;\n        renderer.state.stroke = this.theme.note;\n        renderer.state.stroke_width = 0.1524;\n        return renderer;\n    }\n\n    override async load(src: KicadSch | ProjectPage) {\n        if (src instanceof KicadSch) {\n            return await super.load(src);\n        }\n\n        this.document = null!;\n\n        const doc = src.document as KicadSch;\n        doc.update_hierarchical_data(src.sheet_path);\n\n        return await super.load(doc);\n    }\n\n    protected override create_painter() {\n        return new SchematicPainter(this.renderer, this.layers, this.theme);\n    }\n\n    protected override create_layer_set() {\n        return new LayerSet(this.theme);\n    }\n\n    public override select(\n        item: SchematicSymbol | SchematicSheet | string | BBox | null,\n    ): void {\n        // If item is a string, find the symbol by uuid or reference.\n        if (is_string(item)) {\n            item =\n                this.schematic.find_symbol(item) ??\n                this.schematic.find_sheet(item);\n        }\n\n        // If it's a symbol or sheet, find the bounding box for it.\n        if (item instanceof SchematicSymbol || item instanceof SchematicSheet) {\n            const bboxes = this.layers.query_item_bboxes(item);\n            item = first(bboxes) ?? null;\n        }\n\n        super.select(item);\n    }\n}\n", "/*\n    Copyright (c) 2022 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nimport { SchematicViewer } from \"../../../viewers/schematic/viewer\";\nimport { KCViewerElement } from \"../common/viewer\";\n\nexport class KCSchematicViewerElement extends KCViewerElement<SchematicViewer> {\n    protected override update_theme(): void {\n        this.viewer.theme = this.themeObject.schematic;\n    }\n\n    protected override make_viewer(): SchematicViewer {\n        return new SchematicViewer(\n            this.canvas,\n            !this.disableinteraction,\n            this.themeObject.schematic,\n        );\n    }\n}\n\nwindow.customElements.define(\"kc-schematic-viewer\", KCSchematicViewerElement);\n", "/*\n    Copyright (c) 2023 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nimport { html } from \"../../../base/web-components\";\nimport { KCUIElement } from \"../../../kc-ui\";\nimport { KiCanvasLoadEvent } from \"../../../viewers/base/events\";\nimport { SchematicViewer } from \"../../../viewers/schematic/viewer\";\n\nexport class KCSchematicInfoPanel extends KCUIElement {\n    viewer: SchematicViewer;\n\n    override connectedCallback() {\n        (async () => {\n            this.viewer = await this.requestLazyContext(\"viewer\");\n            await this.viewer.loaded;\n            super.connectedCallback();\n\n            // If a new schematic is loaded, re-render\n            this.addDisposable(\n                this.viewer.addEventListener(KiCanvasLoadEvent.type, (e) => {\n                    this.update();\n                }),\n            );\n        })();\n    }\n\n    override render() {\n        const ds = this.viewer.drawing_sheet;\n        const schematic = this.viewer.schematic;\n\n        const header = (name: string) =>\n            html`<kc-ui-property-list-item\n                class=\"label\"\n                name=\"${name}\"></kc-ui-property-list-item>`;\n\n        const entry = (name: string, desc?: any, suffix = \"\") =>\n            html`<kc-ui-property-list-item name=\"${name}\">\n                ${desc} ${suffix}\n            </kc-ui-property-list-item>`;\n\n        const comments = Object.entries(\n            schematic.title_block?.comment || {},\n        ).map(([k, v]) => entry(`Comment ${k}`, v));\n\n        return html`\n            <kc-ui-panel>\n                <kc-ui-panel-title title=\"Info\"></kc-ui-panel-title>\n                <kc-ui-panel-body>\n                    <kc-ui-property-list>\n                        ${header(\"Page properties\")}\n                        ${entry(\"Size\", ds.paper?.size)}\n                        ${entry(\"Width\", ds.width, \"mm\")}\n                        ${entry(\"Height\", ds.height, \"mm\")}\n                        ${header(\"Schematic properties\")}\n                        ${entry(\"KiCAD version\", schematic.version)}\n                        ${entry(\"Generator\", schematic.generator)}\n                        ${entry(\"Title\", schematic.title_block?.title)}\n                        ${entry(\"Date\", schematic.title_block?.date)}\n                        ${entry(\"Revision\", schematic.title_block?.rev)}\n                        ${entry(\"Company\", schematic.title_block?.company)}\n                        ${comments}\n                        ${entry(\"Symbols\", schematic.symbols.size)}\n                        ${entry(\n                            \"Unique symbols\",\n                            schematic.lib_symbols?.symbols.length ?? 0,\n                        )}\n                        ${entry(\"Wires\", schematic.wires.length)}\n                        ${entry(\"Buses\", schematic.buses.length)}\n                        ${entry(\"Junctions\", schematic.junctions.length)}\n                        ${entry(\"Net labels\", schematic.net_labels.length)}\n                        ${entry(\n                            \"Global labels\",\n                            schematic.global_labels.length,\n                        )}\n                        ${entry(\n                            \"Hierarchical labels\",\n                            schematic.hierarchical_labels.length,\n                        )}\n                        ${entry(\"No connects\", schematic.no_connects.length)}\n                    </dl>\n                </kc-ui-property-list>\n            </kc-ui-panel>\n        `;\n    }\n}\n\nwindow.customElements.define(\"kc-schematic-info-panel\", KCSchematicInfoPanel);\n", "/*\n    Copyright (c) 2023 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nimport { sorted_by_numeric_strings } from \"../../../base/array\";\nimport { html } from \"../../../base/web-components\";\nimport { KCUIElement } from \"../../../kc-ui\";\nimport { SchematicSheet, SchematicSymbol } from \"../../../kicad/schematic\";\nimport {\n    KiCanvasLoadEvent,\n    KiCanvasSelectEvent,\n} from \"../../../viewers/base/events\";\nimport { SchematicViewer } from \"../../../viewers/schematic/viewer\";\n\nexport class KCSchematicPropertiesPanelElement extends KCUIElement {\n    viewer: SchematicViewer;\n    selected_item?: SchematicSymbol | SchematicSheet;\n\n    override connectedCallback() {\n        (async () => {\n            this.viewer = await this.requestLazyContext(\"viewer\");\n            await this.viewer.loaded;\n            super.connectedCallback();\n            this.setup_events();\n        })();\n    }\n\n    private setup_events() {\n        this.addDisposable(\n            this.viewer.addEventListener(KiCanvasSelectEvent.type, (e) => {\n                this.selected_item = e.detail.item as SchematicSymbol;\n                this.update();\n            }),\n        );\n\n        // If a new schematic is loaded, clear the selected item.\n        this.addDisposable(\n            this.viewer.addEventListener(KiCanvasLoadEvent.type, (e) => {\n                this.selected_item = undefined;\n                this.update();\n            }),\n        );\n    }\n\n    override render() {\n        const header = (name: string) =>\n            html`<kc-ui-property-list-item\n                class=\"label\"\n                name=\"${name}\"></kc-ui-property-list-item>`;\n\n        const entry = (name: string, desc?: any, suffix = \"\") =>\n            html`<kc-ui-property-list-item name=\"${name}\">\n                ${desc ?? \"\"} ${suffix}\n            </kc-ui-property-list-item>`;\n\n        const checkbox = (value?: boolean) =>\n            value\n                ? html`<kc-ui-icon>check</kc-ui-icon>`\n                : html`<kc-ui-icon>close</kc-ui-icon>`;\n\n        let entries;\n        const item = this.selected_item;\n\n        if (!item) {\n            entries = header(\"No item selected\");\n        } else if (item instanceof SchematicSymbol) {\n            const lib = item.lib_symbol;\n\n            const properties = Array.from(item.properties.values()).map((v) => {\n                return entry(v.name, v.text);\n            });\n\n            const pins = sorted_by_numeric_strings(\n                item.unit_pins,\n                (pin) => pin.number,\n            ).map((p) => {\n                return entry(p.number, p.definition.name.text);\n            });\n\n            entries = html`\n                ${header(\"Basic properties\")}\n                ${entry(\"X\", item.at.position.x.toFixed(4), \"mm\")}\n                ${entry(\"Y\", item.at.position.y.toFixed(4), \"mm\")}\n                ${entry(\"Orientation\", item.at.rotation, \"\u00B0\")}\n                ${entry(\n                    \"Mirror\",\n                    item.mirror == \"x\"\n                        ? \"Around X axis\"\n                        : item.mirror == \"y\"\n                        ? \"Around Y axis\"\n                        : \"Not mirrored\",\n                )}\n                ${header(\"Instance properties\")}\n                ${entry(\"Library link\", item.lib_name ?? item.lib_id)}\n                ${item.unit\n                    ? entry(\n                          \"Unit\",\n                          String.fromCharCode(\n                              \"A\".charCodeAt(0) + item.unit - 1,\n                          ),\n                      )\n                    : \"\"}\n                ${entry(\"In BOM\", checkbox(item.in_bom))}\n                ${entry(\"On board\", checkbox(item.in_bom))}\n                ${entry(\"Populate\", checkbox(!item.dnp))} ${header(\"Fields\")}\n                ${properties} ${header(\"Symbol properties\")}\n                ${entry(\"Name\", lib.name)}\n                ${entry(\"Description\", lib.description)}\n                ${entry(\"Keywords\", lib.keywords)}\n                ${entry(\"Power\", checkbox(lib.power))}\n                ${entry(\"Units\", lib.unit_count)}\n                ${entry(\n                    \"Units are interchangeable\",\n                    checkbox(lib.units_interchangable),\n                )}\n                ${header(\"Pins\")} ${pins}\n            `;\n        } else if (item instanceof SchematicSheet) {\n            const properties = Array.from(item.properties.values()).map((v) => {\n                return entry(v.name, v.text);\n            });\n\n            const pins = sorted_by_numeric_strings(\n                item.pins,\n                (pin) => pin.name,\n            ).map((p) => {\n                return entry(p.name, p.shape);\n            });\n\n            entries = html`\n                ${header(\"Basic properties\")}\n                ${entry(\"X\", item.at.position.x.toFixed(4), \"mm\")}\n                ${entry(\"Y\", item.at.position.y.toFixed(4), \"mm\")}\n                ${header(\"Fields\")} ${properties} ${header(\"Pins\")} ${pins}\n            `;\n        }\n\n        return html`\n            <kc-ui-panel>\n                <kc-ui-panel-title title=\"Properties\"></kc-ui-panel-title>\n                <kc-ui-panel-body>\n                    <kc-ui-property-list>${entries}</kc-ui-property-list>\n                </kc-ui-panel-body>\n            </kc-ui-panel>\n        `;\n    }\n}\n\nwindow.customElements.define(\n    \"kc-schematic-properties-panel\",\n    KCSchematicPropertiesPanelElement,\n);\n", "/*\n    Copyright (c) 2023 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nimport { sorted_by_numeric_strings } from \"../../../base/array\";\nimport { html, query } from \"../../../base/web-components\";\nimport {\n    KCUIElement,\n    KCUIFilteredListElement,\n    KCUITextFilterInputElement,\n    type KCUIMenuElement,\n    type KCUIMenuItemElement,\n} from \"../../../kc-ui\";\nimport {\n    KiCanvasLoadEvent,\n    KiCanvasSelectEvent,\n} from \"../../../viewers/base/events\";\nimport { SchematicViewer } from \"../../../viewers/schematic/viewer\";\n\nexport class KCSchematicSymbolsPanelElement extends KCUIElement {\n    viewer: SchematicViewer;\n\n    @query(\"kc-ui-menu\")\n    private menu!: KCUIMenuElement;\n\n    override connectedCallback() {\n        (async () => {\n            this.viewer = await this.requestLazyContext(\"viewer\");\n            await this.viewer.loaded;\n            super.connectedCallback();\n            this.setup_initial_events();\n        })();\n    }\n\n    private setup_initial_events() {\n        let updating_selected = false;\n\n        this.addEventListener(\"kc-ui-menu:select\", (e) => {\n            if (updating_selected) {\n                return;\n            }\n\n            const item = (e as CustomEvent).detail as KCUIMenuItemElement;\n            if (!item.name) {\n                return;\n            }\n\n            this.viewer.select(item.name);\n        });\n\n        // Update the selected item in the list whenever the viewer's\n        // selection changes.\n        this.addDisposable(\n            this.viewer.addEventListener(KiCanvasSelectEvent.type, () => {\n                updating_selected = true;\n                this.menu.selected = this.viewer.selected?.context.uuid ?? null;\n                updating_selected = false;\n            }),\n        );\n\n        // Re-render the entire component if a different schematic gets loaded.\n        this.addDisposable(\n            this.viewer.addEventListener(KiCanvasLoadEvent.type, () => {\n                this.update();\n            }),\n        );\n    }\n\n    override renderedCallback() {\n        // Wire up search to filter the list\n        this.search_input_elm.addEventListener(\"input\", (e) => {\n            this.item_filter_elem.filter_text =\n                this.search_input_elm.value ?? null;\n        });\n    }\n\n    @query(\"kc-ui-text-filter-input\", true)\n    private search_input_elm!: KCUITextFilterInputElement;\n\n    @query(\"kc-ui-filtered-list\", true)\n    private item_filter_elem!: KCUIFilteredListElement;\n\n    override render() {\n        const schematic = this.viewer.schematic;\n        const symbol_elms: HTMLElement[] = [];\n        const power_symbol_elms: HTMLElement[] = [];\n        const sheet_elms: HTMLElement[] = [];\n\n        const symbols = sorted_by_numeric_strings(\n            Array.from(schematic.symbols.values()),\n            (sym) => sym.reference,\n        );\n\n        for (const sym of symbols) {\n            const match_text = `${sym.reference} ${sym.value} ${sym.id} ${sym.lib_symbol.name}`;\n            const entry = html`<kc-ui-menu-item\n                name=\"${sym.uuid}\"\n                data-match-text=\"${match_text}\">\n                <span class=\"narrow\"> ${sym.reference} </span>\n                <span> ${sym.value} </span>\n            </kc-ui-menu-item>` as HTMLElement;\n\n            if (sym.lib_symbol.power) {\n                power_symbol_elms.push(entry);\n            } else {\n                symbol_elms.push(entry);\n            }\n        }\n\n        const sheets = sorted_by_numeric_strings(\n            schematic.sheets,\n            (sheet) => sheet.sheetname ?? sheet.sheetfile ?? \"\",\n        );\n\n        for (const sheet of sheets) {\n            const match_text = `${sheet.sheetname} ${sheet.sheetfile}`;\n            sheet_elms.push(\n                html`<kc-ui-menu-item\n                    name=\"${sheet.uuid}\"\n                    data-match-text=\"${match_text}\">\n                    <span class=\"narrow\"> ${sheet.sheetname}</span>\n                    <span>${sheet.sheetfile}</span>\n                </kc-ui-menu-item>` as HTMLElement,\n            );\n        }\n\n        return html`\n            <kc-ui-panel>\n                <kc-ui-panel-title title=\"Symbols\"></kc-ui-panel-title>\n                <kc-ui-panel-body>\n                    <kc-ui-text-filter-input></kc-ui-text-filter-input>\n                    <kc-ui-filtered-list>\n                        <kc-ui-menu class=\"outline\">\n                            ${symbol_elms}\n                            ${power_symbol_elms.length\n                                ? html`<kc-ui-menu-label\n                                      >Power symbols</kc-ui-menu-label\n                                  >`\n                                : null}\n                            ${power_symbol_elms}\n                            ${sheet_elms.length\n                                ? html`<kc-ui-menu-label\n                                      >Sheets</kc-ui-menu-label\n                                  >`\n                                : null}\n                            ${sheet_elms}\n                        </kc-ui-menu>\n                    </kc-ui-filtered-list>\n                </kc-ui-panel-body>\n            </kc-ui-panel>\n        `;\n    }\n}\n\nwindow.customElements.define(\n    \"kc-schematic-symbols-panel\",\n    KCSchematicSymbolsPanelElement,\n);\n", "/*\n    Copyright (c) 2023 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nimport { html } from \"../../../base/web-components\";\nimport { KCViewerAppElement } from \"../common/app\";\nimport { KCSchematicViewerElement } from \"./viewer\";\n\n// import dependent elements so they're registered before use.\nimport \"./info-panel\";\nimport \"./properties-panel\";\nimport \"./symbols-panel\";\nimport \"./viewer\";\nimport type { ProjectPage } from \"../../project\";\nimport { KicadSch } from \"../../../kicad\";\nimport { SchematicSheet } from \"../../../kicad/schematic\";\n\n/**\n * Internal \"parent\" element for KiCanvas's schematic viewer. Handles\n * setting up the schematic viewer as well as interface controls. It's\n * basically KiCanvas's version of EESchema.\n */\nexport class KCSchematicAppElement extends KCViewerAppElement<KCSchematicViewerElement> {\n    override on_viewer_select(item?: unknown, previous?: unknown) {\n        // Only handle double-selecting/double-clicking on items.\n        if (!item || item != previous) {\n            return;\n        }\n\n        // If it's a sheet instance, switch over to the new sheet.\n        if (item instanceof SchematicSheet) {\n            this.project.set_active_page(\n                `${item.sheetfile}:${item.path}/${item.uuid}`,\n            );\n            return;\n        }\n\n        // Otherwise, selecting the same item twice should show the\n        // properties panel.\n        this.change_activity(\"properties\");\n    }\n\n    override can_load(src: ProjectPage): boolean {\n        return src.document instanceof KicadSch;\n    }\n\n    override make_viewer_element(): KCSchematicViewerElement {\n        return html`<kc-schematic-viewer></kc-schematic-viewer>` as KCSchematicViewerElement;\n    }\n\n    override make_activities() {\n        return [\n            // Symbols\n            html`<kc-ui-activity\n                slot=\"activities\"\n                name=\"Symbols\"\n                icon=\"interests\">\n                <kc-schematic-symbols-panel></kc-schematic-symbols-panel>\n            </kc-ui-activity>`,\n\n            // Schematic item properties\n            html`<kc-ui-activity\n                slot=\"activities\"\n                name=\"Properties\"\n                icon=\"list\">\n                <kc-schematic-properties-panel></kc-schematic-properties-panel>\n            </kc-ui-activity>`,\n\n            // Schematic info\n            html`<kc-ui-activity slot=\"activities\" name=\"Info\" icon=\"info\">\n                <kc-schematic-info-panel></kc-schematic-info-panel>\n            </kc-ui-activity>`,\n        ];\n    }\n}\n\nwindow.customElements.define(\"kc-schematic-app\", KCSchematicAppElement);\n", ":host{font-size:var(--font-size, 16px);--transition-time-very-short: .1s;--transition-time-short: .2s;--transition-time-medium: .5s;--bg: #131218;--fg: #f8f8f0;--tooltip-bg: #8864cb;--tooltip-fg: #f8f8f0;--tooltip-border: 1px solid #131218;--scrollbar-bg: #131218;--scrollbar-fg: #ae81ff66;--scrollbar-active-fg: #ae81ff;--scrollbar-hover-bg: #ae81ffbb;--activity-bar-bg: #282634;--activity-bar-fg: #f8f8f0;--activity-bar-active-bg: #131218;--activity-bar-active-fg: #f8f8f0;--resizer-bg: #ae81ff;--resizer-active-bg: #ae81ffbb;--panel-bg: #131218;--panel-fg: #f8f8f0;--panel-border: 2px solid #282634;--panel-title-bg: #8077a8;--panel-title-fg: #f8f8f0;--panel-title-border: 1px solid #634e89;--panel-title-button-bg: transparent;--panel-title-button-fg: #dcc8ff;--panel-title-button-hover-bg: #ae81ff;--panel-title-button-hover-fg: inherit;--panel-title-button-disabled-bg: inherit;--panel-title-button-disabled-fg: #888;--panel-subtitle-bg: #634e89;--panel-subtitle-fg: var(--panel-fg);--dropdown-bg: #464258;--dropdown-fg: #f8f8f0;--button-bg: #81eeff;--button-fg: #131218;--button-hover-bg: #a3f3ff;--button-hover-fg: #131218;--button-focus-outline: 1px solid #ae81ff;--button-selected-bg: #ae81ff;--button-selected-fg: #131218;--button-disabled-bg: #131218;--button-disabled-fg: #888;--button-success-bg: #64cb96;--button-success-fg: #131218;--button-success-hover-bg: #81ffbe;--button-success-hover-fg: #131218;--button-danger-bg: #cb6488;--button-danger-fg: #131218;--button-danger-hover-bg: #ff81ad;--button-danger-hover-fg: #131218;--button-outline-bg: #282634;--button-outline-fg: #f8f8f0;--button-outline-hover-bg: #282634;--button-outline-hover-fg: #81eeff;--button-outline-disabled-bg: #131218;--button-outline-disabled-fg: #888;--button-toolbar-bg: #282634;--button-toolbar-fg: #f8f8f0;--button-toolbar-hover-bg: #282634;--button-toolbar-hover-fg: #81eeff;--button-toolbar-disabled-bg: #131218;--button-toolbar-disabled-fg: #888;--button-menu-bg: transparent;--button-menu-fg: #f8f8f0;--button-menu-hover-bg: transparent;--button-menu-hover-fg: #81eeff;--button-menu-disabled-bg: transparent;--button-menu-disabled-fg: #888;--input-bg: #131218;--input-fg: #f8f8f0;--input-border: 1px solid #8077a8;--input-accent: #ae81ff;--input-hover-shadow: 1px 1px 10px 5px rgba(0, 0, 0, .2);--input-focus-outline: 1px solid #ae81ff;--input-placeholder: #8077a8;--input-disabled-bg: #131218;--input-disabled-fg: #888;--input-range-bg: #8077a8;--input-range-fg: #f8f8f0;--input-range-hover-bg: #ae81ff;--input-range-disabled-bg: #131218;--input-range-hover-shadow: 1px 1px 10px 5px rgba(0, 0, 0, .2);--input-range-handle-shadow: 1px 1px 5px 5px rgba(180, 180, 180, .2);--list-item-bg: var(--panel-bg);--list-item-fg: var(--panel-fg);--list-item-active-bg: #634e89;--list-item-active-fg: var(--list-item-fg);--list-item-hover-bg: #64cb96;--list-item-hover-fg: var(--list-item-bg);--list-item-disabled-bg: var(--list-item-bg);--list-item-disabled-fg: #888;--grid-outline: #433e56}:host{--gradient-purple-green-light: linear-gradient( 190deg, hsl(261deg 27% 42%) 0%, hsl(243deg 27% 42%) 17%, hsl(224deg 27% 42%) 33%, hsl(205deg 27% 42%) 50%, hsl(187deg 27% 42%) 67%, hsl(168deg 27% 42%) 83%, hsl(149deg 27% 42%) 100% ) 0 0 fixed;--gradient-purple-blue-medium: linear-gradient( 190deg, hsl(261deg 28% 30%) 0%, hsl(248deg 30% 31%) 17%, hsl(235deg 32% 32%) 33%, hsl(222deg 34% 33%) 50%, hsl(209deg 35% 34%) 67%, hsl(197deg 37% 35%) 83%, hsl(183deg 38% 36%) 100% ) 0 0 fixed;--gradient-purple-blue-dark: linear-gradient(10deg, #111928, #1d162a) 0 0 fixed;--gradient-cyan-blue-light: linear-gradient( 190deg, hsl(183deg 63% 33%) 0%, hsl(189deg 69% 30%) 17%, hsl(194deg 74% 27%) 33%, hsl(199deg 79% 24%) 50%, hsl(203deg 85% 21%) 67%, hsl(209deg 89% 18%) 83%, hsl(214deg 95% 15%) 100% ) 0 0 fixed;--gradient-purple-green-highlight: linear-gradient( 190deg, hsl(261deg 27% 53%) 0%, hsl(243deg 27% 52%) 17%, hsl(224deg 27% 52%) 33%, hsl(205deg 27% 51%) 50%, hsl(186deg 27% 51%) 67%, hsl(168deg 27% 50%) 83%, hsl(149deg 27% 50%) 100% ) 0 0 fixed;--gradient-purple-red: linear-gradient(90deg, #8864cb, #cb6488) 0 0 fixed;--gradient-purple-red-highlight: linear-gradient(90deg, #b187ff, #ff80ac) 0 0 fixed;--scrollbar-bg: var(--gradient-purple-blue-dark);--scrollbar-fg: var(--gradient-purple-green-light);--scrollbar-hover-fg: var(--scrollbar-fg);--scrollbar-active-fg: var(--scrollbar-fg);--activity-bar-bg: var(--gradient-purple-green-light);--resizer-bg: var(--gradient-purple-blue-medium);--resizer-active-bg: var(--gradient-purple-green-highlight);--panel-bg: var(--gradient-purple-blue-dark);--panel-title-bg: var(--gradient-purple-green-light);--panel-subtitle-bg: var(--gradient-purple-blue-medium);--button-toolbar-bg: var(--gradient-purple-blue-dark);--button-toolbar-hover-bg: var(--gradient-purple-green-light);--button-toolbar-hover-fg: #f8f8f0;--button-toolbar-disabled-bg: var(--gradient-purple-blue-dark);--button-toolbar-alt-bg: var(--gradient-purple-green-light);--button-toolbar-alt-hover-bg: var(--gradient-purple-green-highlight);--button-toolbar-alt-hover-fg: #f8f8f0;--button-toolbar-alt-disabled-bg: var(--gradient-purple-blue-dark);--dropdown-bg: var(--gradient-purple-green-light);--dropdown-fg: #f8f8f0;--dropdown-hover-bg: var(--gradient-purple-green-highlight);--dropdown-hover-fg: #f8f8f0;--dropdown-active-bg: var(--gradient-purple-blue-dark);--dropdown-active-fg: #f8f8f0;--input-range-bg: var(--gradient-purple-green-light);--list-item-hover-bg: var(--gradient-purple-green-highlight);--list-item-active-bg: var(--gradient-cyan-blue-light);--focus-overlay-bg: var(--gradient-purple-green-light);--focus-overlay-opacity: .5;--focus-overlay-fg: #f8f8f0}::-webkit-scrollbar{position:absolute;width:6px;height:6px;margin-left:-6px;background:var(--scrollbar-bg)}::-webkit-scrollbar-thumb{position:absolute;background:var(--scrollbar-fg)}::-webkit-scrollbar-thumb:hover{background:var(--scrollbar-hover-fg)}::-webkit-scrollbar-thumb:active{background:var(--scrollbar-active-fg)}kc-ui-app{width:100%;height:100%;flex-grow:1;display:flex;flex-direction:row;overflow:hidden}label{display:block;width:100%;margin-top:.75em}input,select,textarea{all:unset;box-sizing:border-box;display:block;width:100%;max-width:100%;margin-top:.5em;font-family:inherit;border-radius:.25em;text-align:center;padding:.25em;background:var(--input-bg);color:var(--input-fg);transition:color var(--transition-time-medium) ease,box-shadow var(--transition-time-medium) ease,outline var(--transition-time-medium) ease,background var(--transition-time-medium) ease,border var(--transition-time-medium) ease}input:hover,select:hover,textarea:hover{z-index:10;box-shadow:var(--input-hover-shadow)}input:focus,select:focus,textarea:focus{z-index:10;box-shadow:none;outline:var(--input-focus-outline)}input:disabled,select:disabled,textarea:disabled{background:var(--input-disabled-bg);color:var(--input-disabled-fg)}input:disabled:hover,select:disabled:hover,textarea:disabled:hover{z-index:10;cursor:unset}input[type=color]::-webkit-color-swatch{border:1px solid transparent;border-radius:.25em}textarea{text-align:left;padding:.5em}\n", "*,*:before,*:after{box-sizing:border-box}:host{box-sizing:border-box;margin:0;display:flex;position:relative;width:100%;height:100%;color:var(--fg)}:host([loaded]) section.overlay,:host([loading]) section.overlay{display:none}:host main{display:contents}section.overlay{position:absolute;top:0;left:0;width:100%;height:100%;z-index:1;display:flex;flex-direction:column;align-items:center;justify-content:center;background:var(--gradient-purple-blue-dark)}section.overlay h1{display:flex;margin:0 auto;align-items:center;justify-content:center;font-size:5em;font-weight:300;text-shadow:0 0 5px var(--gradient-purple-red)}section.overlay h1 img{width:1.5em}section.overlay p{text-align:center;font-size:1.5em;max-width:50%}section.overlay strong{background:var(--gradient-purple-red-highlight);-webkit-background-clip:text;-moz-background-clip:text;background-clip:text;color:transparent}section.overlay a{color:#81eeff}section.overlay a:hover{color:#a3f3ff}section.overlay input{font-size:1.5em;color:var(--fg);background:var(--gradient-purple-red);max-width:50%}section.overlay input::placeholder{color:var(--fg)}section.overlay p.note{color:var(--input-placeholder);font-size:1em}section.overlay p.github img{width:2em}kc-board-viewer,kc-schematic-viewer{width:100%;height:100%;flex:1}.split-horizontal{display:flex;flex-direction:column;height:100%;max-height:100%;overflow:hidden}.split-vertical{display:flex;flex-direction:row;width:100%;max-width:100%;height:100%;overflow:hidden}kc-board-app,kc-schematic-app{width:100%;height:100%;flex:1}\n", "/*\n    Copyright (c) 2023 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nimport { later } from \"../../base/async\";\nimport { DropTarget } from \"../../base/dom/drag-drop\";\nimport { CSS, attribute, html, query } from \"../../base/web-components\";\nimport { KCUIElement, KCUIIconElement } from \"../../kc-ui\";\nimport { sprites_url } from \"../icons/sprites\";\nimport { Project } from \"../project\";\nimport { GitHub } from \"../services/github\";\nimport { GitHubFileSystem } from \"../services/github-vfs\";\nimport { FetchFileSystem, type VirtualFileSystem } from \"../services/vfs\";\nimport { KCBoardAppElement } from \"./kc-board/app\";\nimport { KCSchematicAppElement } from \"./kc-schematic/app\";\n\nimport kc_ui_styles from \"../../kc-ui/kc-ui.css\";\nimport shell_styles from \"./kicanvas-shell.css\";\n\nimport \"../icons/sprites\";\nimport \"./common/project-panel\";\n\n// Setup KCUIIconElement to use icon sprites.\nKCUIIconElement.sprites_url = sprites_url;\n\n/**\n * <kc-kicanvas-shell> is the main entrypoint for the standalone KiCanvas\n * application- it's the thing you see when you go to kicanvas.org.\n *\n * The shell is responsible for managing the currently loaded Project and\n * switching between the different viewer apps (<kc-schematic-app>,\n * <kc-board-app>).\n *\n * This is a simplified version of the subtree:\n *\n * <kc-kicanvas-shell>\n *   <kc-ui-app>\n *     <kc-project-panel>\n *     <kc-schematic-app>\n *       <kc-schematic-viewer>\n *       <kc-ui-activity-side-bar>\n *     <kc-board-app>\n *       <kc-board-viewer>\n *       <kc-ui-activity-side-bar>\n *\n */\nclass KiCanvasShellElement extends KCUIElement {\n    static override styles = [\n        ...KCUIElement.styles,\n        // TODO: Figure out a better way to handle these two styles.\n        new CSS(kc_ui_styles),\n        new CSS(shell_styles),\n    ];\n\n    project: Project = new Project();\n\n    #schematic_app: KCSchematicAppElement;\n    #board_app: KCBoardAppElement;\n\n    constructor() {\n        super();\n        this.provideContext(\"project\", this.project);\n    }\n\n    @attribute({ type: Boolean })\n    public loading: boolean;\n\n    @attribute({ type: Boolean })\n    public loaded: boolean;\n\n    @attribute({ type: String })\n    public src: string;\n\n    @query(`input[name=\"link\"]`, true)\n    public link_input: HTMLInputElement;\n\n    override initialContentCallback() {\n        const url_params = new URLSearchParams(document.location.search);\n        const github_paths = url_params.getAll(\"github\");\n\n        later(async () => {\n            if (this.src) {\n                const vfs = new FetchFileSystem([this.src]);\n                await this.setup_project(vfs);\n                return;\n            }\n\n            if (github_paths.length) {\n                const vfs = await GitHubFileSystem.fromURLs(...github_paths);\n                await this.setup_project(vfs);\n                return;\n            }\n\n            new DropTarget(this, async (fs) => {\n                await this.setup_project(fs);\n            });\n        });\n\n        this.link_input.addEventListener(\"input\", async (e) => {\n            const link = this.link_input.value;\n            if (!GitHub.parse_url(link)) {\n                return;\n            }\n\n            const vfs = await GitHubFileSystem.fromURLs(link);\n            await this.setup_project(vfs);\n\n            const location = new URL(window.location.href);\n            location.searchParams.set(\"github\", link);\n            window.history.pushState(null, \"\", location);\n        });\n    }\n\n    private async setup_project(vfs: VirtualFileSystem) {\n        this.loaded = false;\n        this.loading = true;\n\n        try {\n            await this.project.load(vfs);\n            this.project.set_active_page(this.project.first_page);\n            this.loaded = true;\n        } catch (e) {\n            console.error(e);\n        } finally {\n            this.loading = false;\n        }\n    }\n\n    override render() {\n        this.#schematic_app = html`\n            <kc-schematic-app controls=\"full\"></kc-schematic-app>\n        ` as KCSchematicAppElement;\n        this.#board_app = html`\n            <kc-board-app controls=\"full\"></kc-board-app>\n        ` as KCBoardAppElement;\n\n        return html`\n            <kc-ui-app>\n                <section class=\"overlay\">\n                    <h1>\n                        <img src=\"images/kicanvas.png\" />\n                        KiCanvas\n                    </h1>\n                    <p>\n                        KiCanvas is an\n                        <strong>interactive</strong>\n                        ,\n                        <strong>browser-based</strong>\n                        viewer for KiCAD schematics and boards. You can learn\n                        more from the\n                        <a href=\"https://kicanvas.org/home\" target=\"_blank\"\n                            >docs</a\n                        >. It's in\n                        <strong>alpha</strong>\n                        so please\n                        <a\n                            href=\"https://github.com/theacodes/kicanvas/issues/new/choose\"\n                            target=\"_blank\">\n                            report any bugs</a\n                        >!\n                    </p>\n                    <input\n                        name=\"link\"\n                        type=\"text\"\n                        placeholder=\"Paste a GitHub link...\"\n                        autofocus />\n                    <p>or drag & drop your KiCAD files</p>\n                    <p class=\"note\">\n                        KiCanvas is\n                        <a\n                            href=\"https://github.com/theacodes/kicanvas\"\n                            target=\"_blank\"\n                            >free & open source</a\n                        >\n                        and supported by\n                        <a\n                            href=\"https://github.com/theacodes/kicanvas#special-thanks\"\n                            >community donations</a\n                        >\n                        with significant support from\n                        <a href=\"https://partsbox.com/\" target=\"_blank\"\n                            >PartsBox</a\n                        >,\n                        <a href=\"https://blues.io/\" target=\"_blank\">Blues</a>,\n                        <a href=\"https://blog.mithis.net/\" target=\"_blank\"\n                            >Mithro</a\n                        >,\n                        <a href=\"https://github.com/jeremysf\">Jeremy Gordon</a>,\n                        &\n                        <a href=\"https://github.com/jamesneal\" target=\"_blank\"\n                            >James Neal</a\n                        >. KiCanvas runs entirely within your browser, so your\n                        files don't ever leave your machine.\n                    </p>\n                    <p class=\"github\">\n                        <a\n                            href=\"https://github.com/theacodes/kicanvas\"\n                            target=\"_blank\"\n                            title=\"Visit on GitHub\">\n                            <img src=\"images/github-mark-white.svg\" />\n                        </a>\n                    </p>\n                </section>\n                <main>${this.#schematic_app} ${this.#board_app}</main>\n            </kc-ui-app>\n        `;\n    }\n}\n\nwindow.customElements.define(\"kc-kicanvas-shell\", KiCanvasShellElement);\n", "/*\n    Copyright (c) 2023 Alethea Katherine Flowers.\n    Published under the standard MIT License.\n    Full text available at: https://opensource.org/licenses/MIT\n*/\n\nimport { later } from \"../../base/async\";\nimport {\n  CSS,\n  CustomElement,\n  attribute,\n  css,\n  html,\n} from \"../../base/web-components\";\nimport { KCUIElement } from \"../../kc-ui\";\nimport kc_ui_styles from \"../../kc-ui/kc-ui.css\";\nimport { CopperLayerNames, HoleLayerNames, LayerNames, LayerSet } from \"../../viewers/board/layers\";\nimport type { BoardViewer } from \"../../viewers/board/viewer\";\nimport { Project } from \"../project\";\nimport { FetchFileSystem, VirtualFileSystem } from \"../services/vfs\";\nimport type { KCBoardAppElement } from \"./kc-board/app\";\nimport type { KCSchematicAppElement } from \"./kc-schematic/app\";\n\n/**\n *\n */\nclass KiCanvasEmbedElement extends KCUIElement {\n  static override styles = [\n    ...KCUIElement.styles,\n    new CSS(kc_ui_styles),\n    css`\n            :host {\n                margin: 0;\n                display: flex;\n                position: relative;\n                width: 100%;\n                max-height: 100%;\n                aspect-ratio: 1.414;\n                background-color: aqua;\n                color: var(--fg);\n                font-family: \"Nunito\", ui-rounded, \"Hiragino Maru Gothic ProN\",\n                    Quicksand, Comfortaa, Manjari, \"Arial Rounded MT Bold\",\n                    Calibri, source-sans-pro, sans-serif;\n                contain: layout paint;\n            }\n\n            main {\n                display: contents;\n            }\n\n            kc-board-app,\n            kc-schematic-app {\n                width: 100%;\n                height: 100%;\n                flex: 1;\n            }\n        `,\n  ];\n\n  constructor() {\n    super();\n    this.provideContext(\"project\", this.#project);\n\n    const callback: IntersectionObserverCallback = (entries, observer) => {\n      entries.forEach((entry: IntersectionObserverEntry) => {\n        if (entry.isIntersecting) {\n          console.log(`Visibility changed: `, this);\n          this.scrolledIntoView = true;\n          this.initialContentCallback();\n        }\n      });\n    };\n    const observer = new IntersectionObserver(callback);\n    observer.observe(this);\n  }\n\n  @attribute({ type: Boolean })\n  scrolledIntoView: boolean = false;\n\n  #project: Project = new Project();\n\n  @attribute({ type: String })\n  src: string | null;\n\n  @attribute({ type: Boolean })\n  public loading: boolean;\n\n  @attribute({ type: Boolean })\n  public loaded: boolean;\n\n  @attribute({ type: String })\n  controls: \"none\" | \"basic\" | \"basic+\" | \"full\" | null;\n\n  @attribute({ type: String })\n  controlslist: string | null;\n\n  @attribute({ type: String })\n  theme: string | null;\n\n  @attribute({ type: String })\n  zoom: \"objects\" | \"page\" | string | null;\n\n  @attribute({ type: Number })\n  initialZoom: number | null\n\n  @attribute({ type: Number })\n  initialX: number | null\n\n  @attribute({ type: Number })\n  initialY: number | null\n\n  @attribute({ type: String })\n  layers: string | null;\n\n  custom_resolver: ((name: string) => URL) | null = null;\n\n  #schematic_app: KCSchematicAppElement;\n  #board_app: KCBoardAppElement;\n\n  override initialContentCallback() {\n    this.#setup_events();\n    later(() => {\n      this.#load_src();\n    });\n  }\n\n  async #setup_events() { }\n\n  async #load_src() {\n    const sources = [];\n\n    if (this.src) {\n      sources.push(this.src);\n    }\n\n    for (const src_elm of this.querySelectorAll<KiCanvasSourceElement>(\n      \"kicanvas-source\",\n    )) {\n      if (src_elm.src) {\n        sources.push(src_elm.src);\n      }\n    }\n\n    if (sources.length == 0) {\n      console.warn(\"No valid sources specified\");\n      return;\n    }\n\n    const vfs = new FetchFileSystem(sources, this.custom_resolver);\n    await this.#setup_project(vfs);\n  }\n\n  async #setup_project(vfs: VirtualFileSystem) {\n    this.loaded = false;\n    this.loading = true;\n\n    try {\n      await this.#project.load(vfs);\n\n      this.loaded = true;\n      await this.update();\n\n      this.#project.set_active_page(this.#project.root_schematic_page!);\n    } finally {\n      this.loading = false;\n    }\n  }\n\n  override render() {\n    if (!this.scrolledIntoView) {\n      return html``;\n    }\n\n    if (!this.loaded) {\n      return html``;\n    }\n\n    if (this.#project.has_schematics && !this.#schematic_app) {\n      this.#schematic_app = html`<kc-schematic-app\n                sidebarcollapsed\n                controls=\"${this.controls}\"\n                controlslist=\"${this.controlslist}\">\n            </kc-schematic-app>` as KCSchematicAppElement;\n    }\n\n    if (this.#project.has_boards && !this.#board_app) {\n      this.#board_app = html`<kc-board-app\n                sidebarcollapsed\n                controls=\"${this.controls}\"\n                controlslist=\"${this.controlslist}\">\n</kc-board-app>` as KCBoardAppElement;\n\n      this.#board_app.viewerLoaded.then((_) => {\n        // Need later here to make sure we're scheduled after the\n        // later call in the document-viewer.ts that repositions the\n        // camera after the document loads.\n        later(async () => {\n          const order = [\n            ...CopperLayerNames,\n            LayerNames.f_adhes,\n            LayerNames.b_adhes,\n            LayerNames.f_paste,\n            LayerNames.b_paste,\n            LayerNames.f_silks,\n            LayerNames.b_silks,\n            LayerNames.f_mask,\n            LayerNames.b_mask,\n            LayerNames.dwgs_user,\n            LayerNames.cmts_user,\n            LayerNames.eco1_user,\n            LayerNames.eco2_user,\n            LayerNames.edge_cuts,\n            LayerNames.margin,\n            LayerNames.f_crtyd,\n            LayerNames.b_crtyd,\n            LayerNames.f_fab,\n            LayerNames.b_fab,\n            LayerNames.user_1,\n            LayerNames.user_2,\n            LayerNames.user_3,\n            LayerNames.user_4,\n            LayerNames.user_5,\n            LayerNames.user_6,\n            LayerNames.user_7,\n            LayerNames.user_8,\n            LayerNames.user_9,\n          ];\n\n          const layers = this.#board_app.viewer.layers;\n          if (this.layers === null) {\n            for (const layer of layers.in_order()) {\n              if (order.indexOf(layer.name as LayerNames) !== -1) {\n                layer.visible = layer.name.includes(\".Cu\");\n              }\n            }\n          } else {\n            const holes = this.layers.match(\"Holes\") === null\n              ? []\n              : HoleLayerNames.map(l => l.toString().trim().toLowerCase());\n\n            const viaLayers = Array.from((layers as LayerSet).via_layers()).map(l => l.name);\n            const vias = this.layers.match(\"Vias\") === null\n              ? []\n              : viaLayers.map(l => l.toString().trim().toLowerCase());\n\n            const padLayers = Array.from((layers as LayerSet).pad_layers()).map(l => l.name);\n            const pads = this.layers.match(\"Pads\") === null\n              ? []\n              : padLayers.map(l => l.toString().trim().toLowerCase());\n\n            const layerOpacities: { [name: string]: number } = {};\n            const specifiedLayers = this.layers.split(\",\").map((layer) => {\n              let name = layer.trim().toLowerCase();\n              if (layer.includes(\":\")) {\n                name = layer.split(\":\")[0]?.trim().toLowerCase() ?? name;\n                layerOpacities[name] = Number(layer.split(\":\")[1])\n              }\n\n              return name;\n            });\n            const enabledLayers = [...holes, ...vias, ...pads, ...specifiedLayers];\n            for (const layer of layers.in_order()) {\n              const name = layer.name.trim().toLowerCase();\n              if (layerOpacities[name]) {\n                layer.opacity = layerOpacities[name]!;\n              }\n              layer.visible = enabledLayers.includes(name);\n            }\n          }\n\n          (this.#board_app.viewer as BoardViewer).zone_opacity = 0.1;\n          (this.#board_app.viewer as BoardViewer).zoom_to_board();\n\n          this.#board_app.layersPanel.update_item_states();\n\n          if (this.initialZoom !== null && this.initialX !== null && this.initialY !== null) {\n            this.#board_app.viewer.setOptions({\n              initialZoom: this.initialZoom,\n              initialX: this.initialX,\n              initialY: this.initialY,\n            });\n          }\n\n        });\n      });\n    }\n\n    const focus_overlay =\n      (this.controls ?? \"none\") == \"none\" ||\n        this.controlslist?.includes(\"nooverlay\")\n        ? null\n        : html`<kc-ui-focus-overlay></kc-ui-focus-overlay>`;\n\n    return html`<main>\n            ${this.#schematic_app} ${this.#board_app} ${focus_overlay}\n        </main>`;\n  }\n}\n\nwindow.customElements.define(\"kicanvas-embed\", KiCanvasEmbedElement);\n\nclass KiCanvasSourceElement extends CustomElement {\n  constructor() {\n    super();\n    this.ariaHidden = \"true\";\n    this.hidden = true;\n    this.style.display = \"none\";\n  }\n\n  @attribute({ type: String })\n  src: string | null;\n}\n\nwindow.customElements.define(\"kicanvas-source\", KiCanvasSourceElement);\n\n/* Import required fonts.\n * TODO: Package these up as part of KiCanvas\n */\ndocument.body.appendChild(\n  html`<link\n        rel=\"stylesheet\"\n        href=\"https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@48,400,0,0&family=Nunito:wght@300;400;500;600;700&display=swap\"\n        crossorigin=\"anonymous\" />`,\n);\n"],
  "mappings": "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",
  "names": ["e", "e", "common_styles", "name", "map", "first", "Text", "Arc", "Text", "expr", "parsed", "Arc", "Text", "GraphicItem", "Circle", "Property", "Setup", "Line", "Rect", "Font", "log", "doc", "theme", "Circle", "Arc", "Polyline", "Polygon", "Circle", "Arc", "Polyline", "Polygon", "Node", "location", "Buffer", "length", "Polyline", "mirror", "tokenize", "EOF", "Font", "Polyline", "mirror", "Font", "glyph_data", "mirror", "line", "Font", "LibText", "log", "theme", "document", "Line", "Polyline", "Rect", "theme", "prefs", "log", "theme", "LayerNames", "theme", "LinePainter", "Polyline", "RectPainter", "Polygon", "Circle", "extension", "theme", "LayerNames", "LayerSet", "theme", "length", "theme", "LayerSet", "Polyline", "Polygon", "CirclePainter", "Circle", "Arc", "ArcPainter", "Text", "Property", "LibText", "theme", "LayerSet", "location", "observer"]
}
